/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestoreOptionRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreOptionRest{}

// RestoreOptionRest struct for RestoreOptionRest
type RestoreOptionRest struct {
	Name *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewRestoreOptionRest instantiates a new RestoreOptionRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreOptionRest() *RestoreOptionRest {
	this := RestoreOptionRest{}
	return &this
}

// NewRestoreOptionRestWithDefaults instantiates a new RestoreOptionRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreOptionRestWithDefaults() *RestoreOptionRest {
	this := RestoreOptionRest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RestoreOptionRest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreOptionRest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RestoreOptionRest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RestoreOptionRest) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *RestoreOptionRest) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreOptionRest) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *RestoreOptionRest) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *RestoreOptionRest) SetValue(v string) {
	o.Value = &v
}

func (o RestoreOptionRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreOptionRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableRestoreOptionRest struct {
	value *RestoreOptionRest
	isSet bool
}

func (v NullableRestoreOptionRest) Get() *RestoreOptionRest {
	return v.value
}

func (v *NullableRestoreOptionRest) Set(val *RestoreOptionRest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreOptionRest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreOptionRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreOptionRest(val *RestoreOptionRest) *NullableRestoreOptionRest {
	return &NullableRestoreOptionRest{value: val, isSet: true}
}

func (v NullableRestoreOptionRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreOptionRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


