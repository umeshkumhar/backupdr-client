/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CloudCredentialRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudCredentialRest{}

// CloudCredentialRest struct for CloudCredentialRest
type CloudCredentialRest struct {
	Usedefaultsa *bool `json:"usedefaultsa,omitempty"`
	Immutable *bool `json:"immutable,omitempty"`
	Region *string `json:"region,omitempty"`
	Domain *string `json:"domain,omitempty"`
	Sources []CloudCredentialRest `json:"sources,omitempty"`
	Name *string `json:"name,omitempty"`
	Publickey *string `json:"publickey,omitempty"`
	Vaultpool *DiskPoolRest `json:"vaultpool,omitempty"`
	Projectid *string `json:"projectid,omitempty"`
	SrcId *int64 `json:"srcId,omitempty"`
	Vaultudsuid *int32 `json:"vaultudsuid,omitempty"`
	ClusterId *int64 `json:"clusterId,omitempty"`
	Clientid *string `json:"clientid,omitempty"`
	Privatekey *string `json:"privatekey,omitempty"`
	Orglist []OrganizationRest `json:"orglist,omitempty"`
	Secretkey *string `json:"secretkey,omitempty"`
	Serviceaccount *string `json:"serviceaccount,omitempty"`
	Credential *string `json:"credential,omitempty"`
	Cloudtype *string `json:"cloudtype,omitempty"`
	Endpoint *string `json:"endpoint,omitempty"`
	Subscriptionid *string `json:"subscriptionid,omitempty"`
	Appliance *ClusterRest `json:"appliance,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewCloudCredentialRest instantiates a new CloudCredentialRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudCredentialRest() *CloudCredentialRest {
	this := CloudCredentialRest{}
	return &this
}

// NewCloudCredentialRestWithDefaults instantiates a new CloudCredentialRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudCredentialRestWithDefaults() *CloudCredentialRest {
	this := CloudCredentialRest{}
	return &this
}

// GetUsedefaultsa returns the Usedefaultsa field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetUsedefaultsa() bool {
	if o == nil || IsNil(o.Usedefaultsa) {
		var ret bool
		return ret
	}
	return *o.Usedefaultsa
}

// GetUsedefaultsaOk returns a tuple with the Usedefaultsa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetUsedefaultsaOk() (*bool, bool) {
	if o == nil || IsNil(o.Usedefaultsa) {
		return nil, false
	}
	return o.Usedefaultsa, true
}

// HasUsedefaultsa returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasUsedefaultsa() bool {
	if o != nil && !IsNil(o.Usedefaultsa) {
		return true
	}

	return false
}

// SetUsedefaultsa gets a reference to the given bool and assigns it to the Usedefaultsa field.
func (o *CloudCredentialRest) SetUsedefaultsa(v bool) {
	o.Usedefaultsa = &v
}

// GetImmutable returns the Immutable field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetImmutable() bool {
	if o == nil || IsNil(o.Immutable) {
		var ret bool
		return ret
	}
	return *o.Immutable
}

// GetImmutableOk returns a tuple with the Immutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetImmutableOk() (*bool, bool) {
	if o == nil || IsNil(o.Immutable) {
		return nil, false
	}
	return o.Immutable, true
}

// HasImmutable returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasImmutable() bool {
	if o != nil && !IsNil(o.Immutable) {
		return true
	}

	return false
}

// SetImmutable gets a reference to the given bool and assigns it to the Immutable field.
func (o *CloudCredentialRest) SetImmutable(v bool) {
	o.Immutable = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *CloudCredentialRest) SetRegion(v string) {
	o.Region = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *CloudCredentialRest) SetDomain(v string) {
	o.Domain = &v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetSources() []CloudCredentialRest {
	if o == nil || IsNil(o.Sources) {
		var ret []CloudCredentialRest
		return ret
	}
	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetSourcesOk() ([]CloudCredentialRest, bool) {
	if o == nil || IsNil(o.Sources) {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasSources() bool {
	if o != nil && !IsNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given []CloudCredentialRest and assigns it to the Sources field.
func (o *CloudCredentialRest) SetSources(v []CloudCredentialRest) {
	o.Sources = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CloudCredentialRest) SetName(v string) {
	o.Name = &v
}

// GetPublickey returns the Publickey field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetPublickey() string {
	if o == nil || IsNil(o.Publickey) {
		var ret string
		return ret
	}
	return *o.Publickey
}

// GetPublickeyOk returns a tuple with the Publickey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetPublickeyOk() (*string, bool) {
	if o == nil || IsNil(o.Publickey) {
		return nil, false
	}
	return o.Publickey, true
}

// HasPublickey returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasPublickey() bool {
	if o != nil && !IsNil(o.Publickey) {
		return true
	}

	return false
}

// SetPublickey gets a reference to the given string and assigns it to the Publickey field.
func (o *CloudCredentialRest) SetPublickey(v string) {
	o.Publickey = &v
}

// GetVaultpool returns the Vaultpool field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetVaultpool() DiskPoolRest {
	if o == nil || IsNil(o.Vaultpool) {
		var ret DiskPoolRest
		return ret
	}
	return *o.Vaultpool
}

// GetVaultpoolOk returns a tuple with the Vaultpool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetVaultpoolOk() (*DiskPoolRest, bool) {
	if o == nil || IsNil(o.Vaultpool) {
		return nil, false
	}
	return o.Vaultpool, true
}

// HasVaultpool returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasVaultpool() bool {
	if o != nil && !IsNil(o.Vaultpool) {
		return true
	}

	return false
}

// SetVaultpool gets a reference to the given DiskPoolRest and assigns it to the Vaultpool field.
func (o *CloudCredentialRest) SetVaultpool(v DiskPoolRest) {
	o.Vaultpool = &v
}

// GetProjectid returns the Projectid field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetProjectid() string {
	if o == nil || IsNil(o.Projectid) {
		var ret string
		return ret
	}
	return *o.Projectid
}

// GetProjectidOk returns a tuple with the Projectid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetProjectidOk() (*string, bool) {
	if o == nil || IsNil(o.Projectid) {
		return nil, false
	}
	return o.Projectid, true
}

// HasProjectid returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasProjectid() bool {
	if o != nil && !IsNil(o.Projectid) {
		return true
	}

	return false
}

// SetProjectid gets a reference to the given string and assigns it to the Projectid field.
func (o *CloudCredentialRest) SetProjectid(v string) {
	o.Projectid = &v
}

// GetSrcId returns the SrcId field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetSrcId() int64 {
	if o == nil || IsNil(o.SrcId) {
		var ret int64
		return ret
	}
	return *o.SrcId
}

// GetSrcIdOk returns a tuple with the SrcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetSrcIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SrcId) {
		return nil, false
	}
	return o.SrcId, true
}

// HasSrcId returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasSrcId() bool {
	if o != nil && !IsNil(o.SrcId) {
		return true
	}

	return false
}

// SetSrcId gets a reference to the given int64 and assigns it to the SrcId field.
func (o *CloudCredentialRest) SetSrcId(v int64) {
	o.SrcId = &v
}

// GetVaultudsuid returns the Vaultudsuid field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetVaultudsuid() int32 {
	if o == nil || IsNil(o.Vaultudsuid) {
		var ret int32
		return ret
	}
	return *o.Vaultudsuid
}

// GetVaultudsuidOk returns a tuple with the Vaultudsuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetVaultudsuidOk() (*int32, bool) {
	if o == nil || IsNil(o.Vaultudsuid) {
		return nil, false
	}
	return o.Vaultudsuid, true
}

// HasVaultudsuid returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasVaultudsuid() bool {
	if o != nil && !IsNil(o.Vaultudsuid) {
		return true
	}

	return false
}

// SetVaultudsuid gets a reference to the given int32 and assigns it to the Vaultudsuid field.
func (o *CloudCredentialRest) SetVaultudsuid(v int32) {
	o.Vaultudsuid = &v
}

// GetClusterId returns the ClusterId field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetClusterId() int64 {
	if o == nil || IsNil(o.ClusterId) {
		var ret int64
		return ret
	}
	return *o.ClusterId
}

// GetClusterIdOk returns a tuple with the ClusterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetClusterIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ClusterId) {
		return nil, false
	}
	return o.ClusterId, true
}

// HasClusterId returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasClusterId() bool {
	if o != nil && !IsNil(o.ClusterId) {
		return true
	}

	return false
}

// SetClusterId gets a reference to the given int64 and assigns it to the ClusterId field.
func (o *CloudCredentialRest) SetClusterId(v int64) {
	o.ClusterId = &v
}

// GetClientid returns the Clientid field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetClientid() string {
	if o == nil || IsNil(o.Clientid) {
		var ret string
		return ret
	}
	return *o.Clientid
}

// GetClientidOk returns a tuple with the Clientid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetClientidOk() (*string, bool) {
	if o == nil || IsNil(o.Clientid) {
		return nil, false
	}
	return o.Clientid, true
}

// HasClientid returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasClientid() bool {
	if o != nil && !IsNil(o.Clientid) {
		return true
	}

	return false
}

// SetClientid gets a reference to the given string and assigns it to the Clientid field.
func (o *CloudCredentialRest) SetClientid(v string) {
	o.Clientid = &v
}

// GetPrivatekey returns the Privatekey field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetPrivatekey() string {
	if o == nil || IsNil(o.Privatekey) {
		var ret string
		return ret
	}
	return *o.Privatekey
}

// GetPrivatekeyOk returns a tuple with the Privatekey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetPrivatekeyOk() (*string, bool) {
	if o == nil || IsNil(o.Privatekey) {
		return nil, false
	}
	return o.Privatekey, true
}

// HasPrivatekey returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasPrivatekey() bool {
	if o != nil && !IsNil(o.Privatekey) {
		return true
	}

	return false
}

// SetPrivatekey gets a reference to the given string and assigns it to the Privatekey field.
func (o *CloudCredentialRest) SetPrivatekey(v string) {
	o.Privatekey = &v
}

// GetOrglist returns the Orglist field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetOrglist() []OrganizationRest {
	if o == nil || IsNil(o.Orglist) {
		var ret []OrganizationRest
		return ret
	}
	return o.Orglist
}

// GetOrglistOk returns a tuple with the Orglist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetOrglistOk() ([]OrganizationRest, bool) {
	if o == nil || IsNil(o.Orglist) {
		return nil, false
	}
	return o.Orglist, true
}

// HasOrglist returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasOrglist() bool {
	if o != nil && !IsNil(o.Orglist) {
		return true
	}

	return false
}

// SetOrglist gets a reference to the given []OrganizationRest and assigns it to the Orglist field.
func (o *CloudCredentialRest) SetOrglist(v []OrganizationRest) {
	o.Orglist = v
}

// GetSecretkey returns the Secretkey field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetSecretkey() string {
	if o == nil || IsNil(o.Secretkey) {
		var ret string
		return ret
	}
	return *o.Secretkey
}

// GetSecretkeyOk returns a tuple with the Secretkey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetSecretkeyOk() (*string, bool) {
	if o == nil || IsNil(o.Secretkey) {
		return nil, false
	}
	return o.Secretkey, true
}

// HasSecretkey returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasSecretkey() bool {
	if o != nil && !IsNil(o.Secretkey) {
		return true
	}

	return false
}

// SetSecretkey gets a reference to the given string and assigns it to the Secretkey field.
func (o *CloudCredentialRest) SetSecretkey(v string) {
	o.Secretkey = &v
}

// GetServiceaccount returns the Serviceaccount field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetServiceaccount() string {
	if o == nil || IsNil(o.Serviceaccount) {
		var ret string
		return ret
	}
	return *o.Serviceaccount
}

// GetServiceaccountOk returns a tuple with the Serviceaccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetServiceaccountOk() (*string, bool) {
	if o == nil || IsNil(o.Serviceaccount) {
		return nil, false
	}
	return o.Serviceaccount, true
}

// HasServiceaccount returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasServiceaccount() bool {
	if o != nil && !IsNil(o.Serviceaccount) {
		return true
	}

	return false
}

// SetServiceaccount gets a reference to the given string and assigns it to the Serviceaccount field.
func (o *CloudCredentialRest) SetServiceaccount(v string) {
	o.Serviceaccount = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetCredential() string {
	if o == nil || IsNil(o.Credential) {
		var ret string
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetCredentialOk() (*string, bool) {
	if o == nil || IsNil(o.Credential) {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasCredential() bool {
	if o != nil && !IsNil(o.Credential) {
		return true
	}

	return false
}

// SetCredential gets a reference to the given string and assigns it to the Credential field.
func (o *CloudCredentialRest) SetCredential(v string) {
	o.Credential = &v
}

// GetCloudtype returns the Cloudtype field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetCloudtype() string {
	if o == nil || IsNil(o.Cloudtype) {
		var ret string
		return ret
	}
	return *o.Cloudtype
}

// GetCloudtypeOk returns a tuple with the Cloudtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetCloudtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Cloudtype) {
		return nil, false
	}
	return o.Cloudtype, true
}

// HasCloudtype returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasCloudtype() bool {
	if o != nil && !IsNil(o.Cloudtype) {
		return true
	}

	return false
}

// SetCloudtype gets a reference to the given string and assigns it to the Cloudtype field.
func (o *CloudCredentialRest) SetCloudtype(v string) {
	o.Cloudtype = &v
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *CloudCredentialRest) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetSubscriptionid returns the Subscriptionid field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetSubscriptionid() string {
	if o == nil || IsNil(o.Subscriptionid) {
		var ret string
		return ret
	}
	return *o.Subscriptionid
}

// GetSubscriptionidOk returns a tuple with the Subscriptionid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetSubscriptionidOk() (*string, bool) {
	if o == nil || IsNil(o.Subscriptionid) {
		return nil, false
	}
	return o.Subscriptionid, true
}

// HasSubscriptionid returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasSubscriptionid() bool {
	if o != nil && !IsNil(o.Subscriptionid) {
		return true
	}

	return false
}

// SetSubscriptionid gets a reference to the given string and assigns it to the Subscriptionid field.
func (o *CloudCredentialRest) SetSubscriptionid(v string) {
	o.Subscriptionid = &v
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetAppliance() ClusterRest {
	if o == nil || IsNil(o.Appliance) {
		var ret ClusterRest
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetApplianceOk() (*ClusterRest, bool) {
	if o == nil || IsNil(o.Appliance) {
		return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasAppliance() bool {
	if o != nil && !IsNil(o.Appliance) {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given ClusterRest and assigns it to the Appliance field.
func (o *CloudCredentialRest) SetAppliance(v ClusterRest) {
	o.Appliance = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CloudCredentialRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *CloudCredentialRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *CloudCredentialRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *CloudCredentialRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudCredentialRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *CloudCredentialRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *CloudCredentialRest) SetStale(v bool) {
	o.Stale = &v
}

func (o CloudCredentialRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudCredentialRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Usedefaultsa) {
		toSerialize["usedefaultsa"] = o.Usedefaultsa
	}
	if !IsNil(o.Immutable) {
		toSerialize["immutable"] = o.Immutable
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !IsNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Publickey) {
		toSerialize["publickey"] = o.Publickey
	}
	if !IsNil(o.Vaultpool) {
		toSerialize["vaultpool"] = o.Vaultpool
	}
	if !IsNil(o.Projectid) {
		toSerialize["projectid"] = o.Projectid
	}
	if !IsNil(o.SrcId) {
		toSerialize["srcId"] = o.SrcId
	}
	if !IsNil(o.Vaultudsuid) {
		toSerialize["vaultudsuid"] = o.Vaultudsuid
	}
	if !IsNil(o.ClusterId) {
		toSerialize["clusterId"] = o.ClusterId
	}
	if !IsNil(o.Clientid) {
		toSerialize["clientid"] = o.Clientid
	}
	if !IsNil(o.Privatekey) {
		toSerialize["privatekey"] = o.Privatekey
	}
	if !IsNil(o.Orglist) {
		toSerialize["orglist"] = o.Orglist
	}
	if !IsNil(o.Secretkey) {
		toSerialize["secretkey"] = o.Secretkey
	}
	if !IsNil(o.Serviceaccount) {
		toSerialize["serviceaccount"] = o.Serviceaccount
	}
	if !IsNil(o.Credential) {
		toSerialize["credential"] = o.Credential
	}
	if !IsNil(o.Cloudtype) {
		toSerialize["cloudtype"] = o.Cloudtype
	}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.Subscriptionid) {
		toSerialize["subscriptionid"] = o.Subscriptionid
	}
	if !IsNil(o.Appliance) {
		toSerialize["appliance"] = o.Appliance
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableCloudCredentialRest struct {
	value *CloudCredentialRest
	isSet bool
}

func (v NullableCloudCredentialRest) Get() *CloudCredentialRest {
	return v.value
}

func (v *NullableCloudCredentialRest) Set(val *CloudCredentialRest) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudCredentialRest) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudCredentialRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudCredentialRest(val *CloudCredentialRest) *NullableCloudCredentialRest {
	return &NullableCloudCredentialRest{value: val, isSet: true}
}

func (v NullableCloudCredentialRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudCredentialRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


