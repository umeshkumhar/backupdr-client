/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestoreObjectMappingRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreObjectMappingRest{}

// RestoreObjectMappingRest struct for RestoreObjectMappingRest
type RestoreObjectMappingRest struct {
	Vmdkprovisionformat *string `json:"vmdkprovisionformat,omitempty"`
	Diskpool *DiskPoolRest `json:"diskpool,omitempty"`
	Appliancemountpoint *string `json:"appliancemountpoint,omitempty"`
	Datastore *string `json:"datastore,omitempty"`
	Restoreobject *string `json:"restoreobject,omitempty"`
	Mountdrive *string `json:"mountdrive,omitempty"`
	Mountpoint *string `json:"mountpoint,omitempty"`
	Targetvg *string `json:"targetvg,omitempty"`
}

// NewRestoreObjectMappingRest instantiates a new RestoreObjectMappingRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreObjectMappingRest() *RestoreObjectMappingRest {
	this := RestoreObjectMappingRest{}
	return &this
}

// NewRestoreObjectMappingRestWithDefaults instantiates a new RestoreObjectMappingRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreObjectMappingRestWithDefaults() *RestoreObjectMappingRest {
	this := RestoreObjectMappingRest{}
	return &this
}

// GetVmdkprovisionformat returns the Vmdkprovisionformat field value if set, zero value otherwise.
func (o *RestoreObjectMappingRest) GetVmdkprovisionformat() string {
	if o == nil || IsNil(o.Vmdkprovisionformat) {
		var ret string
		return ret
	}
	return *o.Vmdkprovisionformat
}

// GetVmdkprovisionformatOk returns a tuple with the Vmdkprovisionformat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectMappingRest) GetVmdkprovisionformatOk() (*string, bool) {
	if o == nil || IsNil(o.Vmdkprovisionformat) {
		return nil, false
	}
	return o.Vmdkprovisionformat, true
}

// HasVmdkprovisionformat returns a boolean if a field has been set.
func (o *RestoreObjectMappingRest) HasVmdkprovisionformat() bool {
	if o != nil && !IsNil(o.Vmdkprovisionformat) {
		return true
	}

	return false
}

// SetVmdkprovisionformat gets a reference to the given string and assigns it to the Vmdkprovisionformat field.
func (o *RestoreObjectMappingRest) SetVmdkprovisionformat(v string) {
	o.Vmdkprovisionformat = &v
}

// GetDiskpool returns the Diskpool field value if set, zero value otherwise.
func (o *RestoreObjectMappingRest) GetDiskpool() DiskPoolRest {
	if o == nil || IsNil(o.Diskpool) {
		var ret DiskPoolRest
		return ret
	}
	return *o.Diskpool
}

// GetDiskpoolOk returns a tuple with the Diskpool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectMappingRest) GetDiskpoolOk() (*DiskPoolRest, bool) {
	if o == nil || IsNil(o.Diskpool) {
		return nil, false
	}
	return o.Diskpool, true
}

// HasDiskpool returns a boolean if a field has been set.
func (o *RestoreObjectMappingRest) HasDiskpool() bool {
	if o != nil && !IsNil(o.Diskpool) {
		return true
	}

	return false
}

// SetDiskpool gets a reference to the given DiskPoolRest and assigns it to the Diskpool field.
func (o *RestoreObjectMappingRest) SetDiskpool(v DiskPoolRest) {
	o.Diskpool = &v
}

// GetAppliancemountpoint returns the Appliancemountpoint field value if set, zero value otherwise.
func (o *RestoreObjectMappingRest) GetAppliancemountpoint() string {
	if o == nil || IsNil(o.Appliancemountpoint) {
		var ret string
		return ret
	}
	return *o.Appliancemountpoint
}

// GetAppliancemountpointOk returns a tuple with the Appliancemountpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectMappingRest) GetAppliancemountpointOk() (*string, bool) {
	if o == nil || IsNil(o.Appliancemountpoint) {
		return nil, false
	}
	return o.Appliancemountpoint, true
}

// HasAppliancemountpoint returns a boolean if a field has been set.
func (o *RestoreObjectMappingRest) HasAppliancemountpoint() bool {
	if o != nil && !IsNil(o.Appliancemountpoint) {
		return true
	}

	return false
}

// SetAppliancemountpoint gets a reference to the given string and assigns it to the Appliancemountpoint field.
func (o *RestoreObjectMappingRest) SetAppliancemountpoint(v string) {
	o.Appliancemountpoint = &v
}

// GetDatastore returns the Datastore field value if set, zero value otherwise.
func (o *RestoreObjectMappingRest) GetDatastore() string {
	if o == nil || IsNil(o.Datastore) {
		var ret string
		return ret
	}
	return *o.Datastore
}

// GetDatastoreOk returns a tuple with the Datastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectMappingRest) GetDatastoreOk() (*string, bool) {
	if o == nil || IsNil(o.Datastore) {
		return nil, false
	}
	return o.Datastore, true
}

// HasDatastore returns a boolean if a field has been set.
func (o *RestoreObjectMappingRest) HasDatastore() bool {
	if o != nil && !IsNil(o.Datastore) {
		return true
	}

	return false
}

// SetDatastore gets a reference to the given string and assigns it to the Datastore field.
func (o *RestoreObjectMappingRest) SetDatastore(v string) {
	o.Datastore = &v
}

// GetRestoreobject returns the Restoreobject field value if set, zero value otherwise.
func (o *RestoreObjectMappingRest) GetRestoreobject() string {
	if o == nil || IsNil(o.Restoreobject) {
		var ret string
		return ret
	}
	return *o.Restoreobject
}

// GetRestoreobjectOk returns a tuple with the Restoreobject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectMappingRest) GetRestoreobjectOk() (*string, bool) {
	if o == nil || IsNil(o.Restoreobject) {
		return nil, false
	}
	return o.Restoreobject, true
}

// HasRestoreobject returns a boolean if a field has been set.
func (o *RestoreObjectMappingRest) HasRestoreobject() bool {
	if o != nil && !IsNil(o.Restoreobject) {
		return true
	}

	return false
}

// SetRestoreobject gets a reference to the given string and assigns it to the Restoreobject field.
func (o *RestoreObjectMappingRest) SetRestoreobject(v string) {
	o.Restoreobject = &v
}

// GetMountdrive returns the Mountdrive field value if set, zero value otherwise.
func (o *RestoreObjectMappingRest) GetMountdrive() string {
	if o == nil || IsNil(o.Mountdrive) {
		var ret string
		return ret
	}
	return *o.Mountdrive
}

// GetMountdriveOk returns a tuple with the Mountdrive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectMappingRest) GetMountdriveOk() (*string, bool) {
	if o == nil || IsNil(o.Mountdrive) {
		return nil, false
	}
	return o.Mountdrive, true
}

// HasMountdrive returns a boolean if a field has been set.
func (o *RestoreObjectMappingRest) HasMountdrive() bool {
	if o != nil && !IsNil(o.Mountdrive) {
		return true
	}

	return false
}

// SetMountdrive gets a reference to the given string and assigns it to the Mountdrive field.
func (o *RestoreObjectMappingRest) SetMountdrive(v string) {
	o.Mountdrive = &v
}

// GetMountpoint returns the Mountpoint field value if set, zero value otherwise.
func (o *RestoreObjectMappingRest) GetMountpoint() string {
	if o == nil || IsNil(o.Mountpoint) {
		var ret string
		return ret
	}
	return *o.Mountpoint
}

// GetMountpointOk returns a tuple with the Mountpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectMappingRest) GetMountpointOk() (*string, bool) {
	if o == nil || IsNil(o.Mountpoint) {
		return nil, false
	}
	return o.Mountpoint, true
}

// HasMountpoint returns a boolean if a field has been set.
func (o *RestoreObjectMappingRest) HasMountpoint() bool {
	if o != nil && !IsNil(o.Mountpoint) {
		return true
	}

	return false
}

// SetMountpoint gets a reference to the given string and assigns it to the Mountpoint field.
func (o *RestoreObjectMappingRest) SetMountpoint(v string) {
	o.Mountpoint = &v
}

// GetTargetvg returns the Targetvg field value if set, zero value otherwise.
func (o *RestoreObjectMappingRest) GetTargetvg() string {
	if o == nil || IsNil(o.Targetvg) {
		var ret string
		return ret
	}
	return *o.Targetvg
}

// GetTargetvgOk returns a tuple with the Targetvg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreObjectMappingRest) GetTargetvgOk() (*string, bool) {
	if o == nil || IsNil(o.Targetvg) {
		return nil, false
	}
	return o.Targetvg, true
}

// HasTargetvg returns a boolean if a field has been set.
func (o *RestoreObjectMappingRest) HasTargetvg() bool {
	if o != nil && !IsNil(o.Targetvg) {
		return true
	}

	return false
}

// SetTargetvg gets a reference to the given string and assigns it to the Targetvg field.
func (o *RestoreObjectMappingRest) SetTargetvg(v string) {
	o.Targetvg = &v
}

func (o RestoreObjectMappingRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreObjectMappingRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Vmdkprovisionformat) {
		toSerialize["vmdkprovisionformat"] = o.Vmdkprovisionformat
	}
	if !IsNil(o.Diskpool) {
		toSerialize["diskpool"] = o.Diskpool
	}
	if !IsNil(o.Appliancemountpoint) {
		toSerialize["appliancemountpoint"] = o.Appliancemountpoint
	}
	if !IsNil(o.Datastore) {
		toSerialize["datastore"] = o.Datastore
	}
	if !IsNil(o.Restoreobject) {
		toSerialize["restoreobject"] = o.Restoreobject
	}
	if !IsNil(o.Mountdrive) {
		toSerialize["mountdrive"] = o.Mountdrive
	}
	if !IsNil(o.Mountpoint) {
		toSerialize["mountpoint"] = o.Mountpoint
	}
	if !IsNil(o.Targetvg) {
		toSerialize["targetvg"] = o.Targetvg
	}
	return toSerialize, nil
}

type NullableRestoreObjectMappingRest struct {
	value *RestoreObjectMappingRest
	isSet bool
}

func (v NullableRestoreObjectMappingRest) Get() *RestoreObjectMappingRest {
	return v.value
}

func (v *NullableRestoreObjectMappingRest) Set(val *RestoreObjectMappingRest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreObjectMappingRest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreObjectMappingRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreObjectMappingRest(val *RestoreObjectMappingRest) *NullableRestoreObjectMappingRest {
	return &NullableRestoreObjectMappingRest{value: val, isSet: true}
}

func (v NullableRestoreObjectMappingRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreObjectMappingRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


