/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConsistencyGroupRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConsistencyGroupRest{}

// ConsistencyGroupRest struct for ConsistencyGroupRest
type ConsistencyGroupRest struct {
	Description *string `json:"description,omitempty"`
	Host *HostRest `json:"host,omitempty"`
	Groupname *string `json:"groupname,omitempty"`
	Application *ApplicationRest `json:"application,omitempty"`
	Cluster *ClusterRest `json:"cluster,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewConsistencyGroupRest instantiates a new ConsistencyGroupRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsistencyGroupRest() *ConsistencyGroupRest {
	this := ConsistencyGroupRest{}
	return &this
}

// NewConsistencyGroupRestWithDefaults instantiates a new ConsistencyGroupRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsistencyGroupRestWithDefaults() *ConsistencyGroupRest {
	this := ConsistencyGroupRest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConsistencyGroupRest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsistencyGroupRest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConsistencyGroupRest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ConsistencyGroupRest) SetDescription(v string) {
	o.Description = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *ConsistencyGroupRest) GetHost() HostRest {
	if o == nil || IsNil(o.Host) {
		var ret HostRest
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsistencyGroupRest) GetHostOk() (*HostRest, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *ConsistencyGroupRest) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostRest and assigns it to the Host field.
func (o *ConsistencyGroupRest) SetHost(v HostRest) {
	o.Host = &v
}

// GetGroupname returns the Groupname field value if set, zero value otherwise.
func (o *ConsistencyGroupRest) GetGroupname() string {
	if o == nil || IsNil(o.Groupname) {
		var ret string
		return ret
	}
	return *o.Groupname
}

// GetGroupnameOk returns a tuple with the Groupname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsistencyGroupRest) GetGroupnameOk() (*string, bool) {
	if o == nil || IsNil(o.Groupname) {
		return nil, false
	}
	return o.Groupname, true
}

// HasGroupname returns a boolean if a field has been set.
func (o *ConsistencyGroupRest) HasGroupname() bool {
	if o != nil && !IsNil(o.Groupname) {
		return true
	}

	return false
}

// SetGroupname gets a reference to the given string and assigns it to the Groupname field.
func (o *ConsistencyGroupRest) SetGroupname(v string) {
	o.Groupname = &v
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *ConsistencyGroupRest) GetApplication() ApplicationRest {
	if o == nil || IsNil(o.Application) {
		var ret ApplicationRest
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsistencyGroupRest) GetApplicationOk() (*ApplicationRest, bool) {
	if o == nil || IsNil(o.Application) {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *ConsistencyGroupRest) HasApplication() bool {
	if o != nil && !IsNil(o.Application) {
		return true
	}

	return false
}

// SetApplication gets a reference to the given ApplicationRest and assigns it to the Application field.
func (o *ConsistencyGroupRest) SetApplication(v ApplicationRest) {
	o.Application = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *ConsistencyGroupRest) GetCluster() ClusterRest {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterRest
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsistencyGroupRest) GetClusterOk() (*ClusterRest, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *ConsistencyGroupRest) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterRest and assigns it to the Cluster field.
func (o *ConsistencyGroupRest) SetCluster(v ClusterRest) {
	o.Cluster = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ConsistencyGroupRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsistencyGroupRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ConsistencyGroupRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ConsistencyGroupRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *ConsistencyGroupRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsistencyGroupRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *ConsistencyGroupRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *ConsistencyGroupRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *ConsistencyGroupRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsistencyGroupRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *ConsistencyGroupRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *ConsistencyGroupRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *ConsistencyGroupRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsistencyGroupRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *ConsistencyGroupRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *ConsistencyGroupRest) SetStale(v bool) {
	o.Stale = &v
}

func (o ConsistencyGroupRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConsistencyGroupRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Groupname) {
		toSerialize["groupname"] = o.Groupname
	}
	if !IsNil(o.Application) {
		toSerialize["application"] = o.Application
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableConsistencyGroupRest struct {
	value *ConsistencyGroupRest
	isSet bool
}

func (v NullableConsistencyGroupRest) Get() *ConsistencyGroupRest {
	return v.value
}

func (v *NullableConsistencyGroupRest) Set(val *ConsistencyGroupRest) {
	v.value = val
	v.isSet = true
}

func (v NullableConsistencyGroupRest) IsSet() bool {
	return v.isSet
}

func (v *NullableConsistencyGroupRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsistencyGroupRest(val *ConsistencyGroupRest) *NullableConsistencyGroupRest {
	return &NullableConsistencyGroupRest{value: val, isSet: true}
}

func (v NullableConsistencyGroupRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsistencyGroupRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


