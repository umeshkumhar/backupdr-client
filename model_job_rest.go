/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the JobRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobRest{}

// JobRest struct for JobRest
type JobRest struct {
	Pid *int32 `json:"pid,omitempty"`
	Task map[string]interface{} `json:"task,omitempty"`
	Flags *int64 `json:"flags,omitempty"`
	Description *string `json:"description,omitempty"`
	Message *string `json:"message,omitempty"`
	Priority *string `json:"priority,omitempty"`
	Expiration *int64 `json:"expiration,omitempty"`
	Duration *int64 `json:"duration,omitempty"`
	Label *string `json:"label,omitempty"`
	Errorcode *string `json:"errorcode,omitempty"`
	Jobclass *string `json:"jobclass,omitempty"`
	Appid *string `json:"appid,omitempty"`
	Hostid *int64 `json:"hostid,omitempty"`
	Srcid *string `json:"srcid,omitempty"`
	Clusterid *string `json:"clusterid,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Appname *string `json:"appname,omitempty"`
	Apptype *string `json:"apptype,omitempty"`
	Backup *BackupRest `json:"backup,omitempty"`
	Sourceuds *int64 `json:"sourceuds,omitempty"`
	Originatinguds *int64 `json:"originatinguds,omitempty"`
	Targetuds *int64 `json:"targetuds,omitempty"`
	Parentid *string `json:"parentid,omitempty"`
	Status *string `json:"status,omitempty"`
	Jobname *string `json:"jobname,omitempty"`
	Transport *string `json:"transport,omitempty"`
	Startdate *int64 `json:"startdate,omitempty"`
	Enddate *int64 `json:"enddate,omitempty"`
	Immutabilitydate *int64 `json:"immutabilitydate,omitempty"`
	Consistencydate *int64 `json:"consistencydate,omitempty"`
	Virtualsize *int64 `json:"virtualsize,omitempty"`
	Sltname *string `json:"sltname,omitempty"`
	Policyname *string `json:"policyname,omitempty"`
	Isexpired *bool `json:"isexpired,omitempty"`
	Targethost *string `json:"targethost,omitempty"`
	Sourceid *string `json:"sourceid,omitempty"`
	Jobcount *int32 `json:"jobcount,omitempty"`
	Changerequest *int32 `json:"changerequest,omitempty"`
	Progress *int64 `json:"progress,omitempty"`
	Relativesize *int64 `json:"relativesize,omitempty"`
	Retrycount *int32 `json:"retrycount,omitempty"`
	Queuedate *int64 `json:"queuedate,omitempty"`
	Expirationdate *int64 `json:"expirationdate,omitempty"`
	Isscheduled *bool `json:"isscheduled,omitempty"`
	Jobtag *string `json:"jobtag,omitempty"`
	Event *EventRest `json:"event,omitempty"`
	Id2 *string `json:"id2,omitempty"`
	Changerequesttext *string `json:"changerequesttext,omitempty"`
	Logsmarttype *string `json:"logsmarttype,omitempty"`
	Extrainfo *string `json:"extrainfo,omitempty"`
	Diskpools []DiskPoolRest `json:"diskpools,omitempty"`
	Targetdiskpool *DiskPoolRest `json:"targetdiskpool,omitempty"`
	Jobclasscode *int32 `json:"jobclasscode,omitempty"`
	Sourcediskpool *DiskPoolRest `json:"sourcediskpool,omitempty"`
	Yaml *string `json:"yaml,omitempty"`
	Appliance *ClusterRest `json:"appliance,omitempty"`
	ConsistencyMode *string `json:"consistency-mode,omitempty"`
	FlagsText []string `json:"flags_text,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewJobRest instantiates a new JobRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobRest() *JobRest {
	this := JobRest{}
	return &this
}

// NewJobRestWithDefaults instantiates a new JobRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobRestWithDefaults() *JobRest {
	this := JobRest{}
	return &this
}

// GetPid returns the Pid field value if set, zero value otherwise.
func (o *JobRest) GetPid() int32 {
	if o == nil || IsNil(o.Pid) {
		var ret int32
		return ret
	}
	return *o.Pid
}

// GetPidOk returns a tuple with the Pid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetPidOk() (*int32, bool) {
	if o == nil || IsNil(o.Pid) {
		return nil, false
	}
	return o.Pid, true
}

// HasPid returns a boolean if a field has been set.
func (o *JobRest) HasPid() bool {
	if o != nil && !IsNil(o.Pid) {
		return true
	}

	return false
}

// SetPid gets a reference to the given int32 and assigns it to the Pid field.
func (o *JobRest) SetPid(v int32) {
	o.Pid = &v
}

// GetTask returns the Task field value if set, zero value otherwise.
func (o *JobRest) GetTask() map[string]interface{} {
	if o == nil || IsNil(o.Task) {
		var ret map[string]interface{}
		return ret
	}
	return o.Task
}

// GetTaskOk returns a tuple with the Task field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetTaskOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Task) {
		return map[string]interface{}{}, false
	}
	return o.Task, true
}

// HasTask returns a boolean if a field has been set.
func (o *JobRest) HasTask() bool {
	if o != nil && !IsNil(o.Task) {
		return true
	}

	return false
}

// SetTask gets a reference to the given map[string]interface{} and assigns it to the Task field.
func (o *JobRest) SetTask(v map[string]interface{}) {
	o.Task = v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *JobRest) GetFlags() int64 {
	if o == nil || IsNil(o.Flags) {
		var ret int64
		return ret
	}
	return *o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetFlagsOk() (*int64, bool) {
	if o == nil || IsNil(o.Flags) {
		return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *JobRest) HasFlags() bool {
	if o != nil && !IsNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given int64 and assigns it to the Flags field.
func (o *JobRest) SetFlags(v int64) {
	o.Flags = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *JobRest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *JobRest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *JobRest) SetDescription(v string) {
	o.Description = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *JobRest) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *JobRest) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *JobRest) SetMessage(v string) {
	o.Message = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *JobRest) GetPriority() string {
	if o == nil || IsNil(o.Priority) {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetPriorityOk() (*string, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *JobRest) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *JobRest) SetPriority(v string) {
	o.Priority = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *JobRest) GetExpiration() int64 {
	if o == nil || IsNil(o.Expiration) {
		var ret int64
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetExpirationOk() (*int64, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *JobRest) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given int64 and assigns it to the Expiration field.
func (o *JobRest) SetExpiration(v int64) {
	o.Expiration = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *JobRest) GetDuration() int64 {
	if o == nil || IsNil(o.Duration) {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetDurationOk() (*int64, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *JobRest) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *JobRest) SetDuration(v int64) {
	o.Duration = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *JobRest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *JobRest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *JobRest) SetLabel(v string) {
	o.Label = &v
}

// GetErrorcode returns the Errorcode field value if set, zero value otherwise.
func (o *JobRest) GetErrorcode() string {
	if o == nil || IsNil(o.Errorcode) {
		var ret string
		return ret
	}
	return *o.Errorcode
}

// GetErrorcodeOk returns a tuple with the Errorcode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetErrorcodeOk() (*string, bool) {
	if o == nil || IsNil(o.Errorcode) {
		return nil, false
	}
	return o.Errorcode, true
}

// HasErrorcode returns a boolean if a field has been set.
func (o *JobRest) HasErrorcode() bool {
	if o != nil && !IsNil(o.Errorcode) {
		return true
	}

	return false
}

// SetErrorcode gets a reference to the given string and assigns it to the Errorcode field.
func (o *JobRest) SetErrorcode(v string) {
	o.Errorcode = &v
}

// GetJobclass returns the Jobclass field value if set, zero value otherwise.
func (o *JobRest) GetJobclass() string {
	if o == nil || IsNil(o.Jobclass) {
		var ret string
		return ret
	}
	return *o.Jobclass
}

// GetJobclassOk returns a tuple with the Jobclass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetJobclassOk() (*string, bool) {
	if o == nil || IsNil(o.Jobclass) {
		return nil, false
	}
	return o.Jobclass, true
}

// HasJobclass returns a boolean if a field has been set.
func (o *JobRest) HasJobclass() bool {
	if o != nil && !IsNil(o.Jobclass) {
		return true
	}

	return false
}

// SetJobclass gets a reference to the given string and assigns it to the Jobclass field.
func (o *JobRest) SetJobclass(v string) {
	o.Jobclass = &v
}

// GetAppid returns the Appid field value if set, zero value otherwise.
func (o *JobRest) GetAppid() string {
	if o == nil || IsNil(o.Appid) {
		var ret string
		return ret
	}
	return *o.Appid
}

// GetAppidOk returns a tuple with the Appid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetAppidOk() (*string, bool) {
	if o == nil || IsNil(o.Appid) {
		return nil, false
	}
	return o.Appid, true
}

// HasAppid returns a boolean if a field has been set.
func (o *JobRest) HasAppid() bool {
	if o != nil && !IsNil(o.Appid) {
		return true
	}

	return false
}

// SetAppid gets a reference to the given string and assigns it to the Appid field.
func (o *JobRest) SetAppid(v string) {
	o.Appid = &v
}

// GetHostid returns the Hostid field value if set, zero value otherwise.
func (o *JobRest) GetHostid() int64 {
	if o == nil || IsNil(o.Hostid) {
		var ret int64
		return ret
	}
	return *o.Hostid
}

// GetHostidOk returns a tuple with the Hostid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetHostidOk() (*int64, bool) {
	if o == nil || IsNil(o.Hostid) {
		return nil, false
	}
	return o.Hostid, true
}

// HasHostid returns a boolean if a field has been set.
func (o *JobRest) HasHostid() bool {
	if o != nil && !IsNil(o.Hostid) {
		return true
	}

	return false
}

// SetHostid gets a reference to the given int64 and assigns it to the Hostid field.
func (o *JobRest) SetHostid(v int64) {
	o.Hostid = &v
}

// GetSrcid returns the Srcid field value if set, zero value otherwise.
func (o *JobRest) GetSrcid() string {
	if o == nil || IsNil(o.Srcid) {
		var ret string
		return ret
	}
	return *o.Srcid
}

// GetSrcidOk returns a tuple with the Srcid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetSrcidOk() (*string, bool) {
	if o == nil || IsNil(o.Srcid) {
		return nil, false
	}
	return o.Srcid, true
}

// HasSrcid returns a boolean if a field has been set.
func (o *JobRest) HasSrcid() bool {
	if o != nil && !IsNil(o.Srcid) {
		return true
	}

	return false
}

// SetSrcid gets a reference to the given string and assigns it to the Srcid field.
func (o *JobRest) SetSrcid(v string) {
	o.Srcid = &v
}

// GetClusterid returns the Clusterid field value if set, zero value otherwise.
func (o *JobRest) GetClusterid() string {
	if o == nil || IsNil(o.Clusterid) {
		var ret string
		return ret
	}
	return *o.Clusterid
}

// GetClusteridOk returns a tuple with the Clusterid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetClusteridOk() (*string, bool) {
	if o == nil || IsNil(o.Clusterid) {
		return nil, false
	}
	return o.Clusterid, true
}

// HasClusterid returns a boolean if a field has been set.
func (o *JobRest) HasClusterid() bool {
	if o != nil && !IsNil(o.Clusterid) {
		return true
	}

	return false
}

// SetClusterid gets a reference to the given string and assigns it to the Clusterid field.
func (o *JobRest) SetClusterid(v string) {
	o.Clusterid = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *JobRest) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *JobRest) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *JobRest) SetHostname(v string) {
	o.Hostname = &v
}

// GetAppname returns the Appname field value if set, zero value otherwise.
func (o *JobRest) GetAppname() string {
	if o == nil || IsNil(o.Appname) {
		var ret string
		return ret
	}
	return *o.Appname
}

// GetAppnameOk returns a tuple with the Appname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetAppnameOk() (*string, bool) {
	if o == nil || IsNil(o.Appname) {
		return nil, false
	}
	return o.Appname, true
}

// HasAppname returns a boolean if a field has been set.
func (o *JobRest) HasAppname() bool {
	if o != nil && !IsNil(o.Appname) {
		return true
	}

	return false
}

// SetAppname gets a reference to the given string and assigns it to the Appname field.
func (o *JobRest) SetAppname(v string) {
	o.Appname = &v
}

// GetApptype returns the Apptype field value if set, zero value otherwise.
func (o *JobRest) GetApptype() string {
	if o == nil || IsNil(o.Apptype) {
		var ret string
		return ret
	}
	return *o.Apptype
}

// GetApptypeOk returns a tuple with the Apptype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetApptypeOk() (*string, bool) {
	if o == nil || IsNil(o.Apptype) {
		return nil, false
	}
	return o.Apptype, true
}

// HasApptype returns a boolean if a field has been set.
func (o *JobRest) HasApptype() bool {
	if o != nil && !IsNil(o.Apptype) {
		return true
	}

	return false
}

// SetApptype gets a reference to the given string and assigns it to the Apptype field.
func (o *JobRest) SetApptype(v string) {
	o.Apptype = &v
}

// GetBackup returns the Backup field value if set, zero value otherwise.
func (o *JobRest) GetBackup() BackupRest {
	if o == nil || IsNil(o.Backup) {
		var ret BackupRest
		return ret
	}
	return *o.Backup
}

// GetBackupOk returns a tuple with the Backup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetBackupOk() (*BackupRest, bool) {
	if o == nil || IsNil(o.Backup) {
		return nil, false
	}
	return o.Backup, true
}

// HasBackup returns a boolean if a field has been set.
func (o *JobRest) HasBackup() bool {
	if o != nil && !IsNil(o.Backup) {
		return true
	}

	return false
}

// SetBackup gets a reference to the given BackupRest and assigns it to the Backup field.
func (o *JobRest) SetBackup(v BackupRest) {
	o.Backup = &v
}

// GetSourceuds returns the Sourceuds field value if set, zero value otherwise.
func (o *JobRest) GetSourceuds() int64 {
	if o == nil || IsNil(o.Sourceuds) {
		var ret int64
		return ret
	}
	return *o.Sourceuds
}

// GetSourceudsOk returns a tuple with the Sourceuds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetSourceudsOk() (*int64, bool) {
	if o == nil || IsNil(o.Sourceuds) {
		return nil, false
	}
	return o.Sourceuds, true
}

// HasSourceuds returns a boolean if a field has been set.
func (o *JobRest) HasSourceuds() bool {
	if o != nil && !IsNil(o.Sourceuds) {
		return true
	}

	return false
}

// SetSourceuds gets a reference to the given int64 and assigns it to the Sourceuds field.
func (o *JobRest) SetSourceuds(v int64) {
	o.Sourceuds = &v
}

// GetOriginatinguds returns the Originatinguds field value if set, zero value otherwise.
func (o *JobRest) GetOriginatinguds() int64 {
	if o == nil || IsNil(o.Originatinguds) {
		var ret int64
		return ret
	}
	return *o.Originatinguds
}

// GetOriginatingudsOk returns a tuple with the Originatinguds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetOriginatingudsOk() (*int64, bool) {
	if o == nil || IsNil(o.Originatinguds) {
		return nil, false
	}
	return o.Originatinguds, true
}

// HasOriginatinguds returns a boolean if a field has been set.
func (o *JobRest) HasOriginatinguds() bool {
	if o != nil && !IsNil(o.Originatinguds) {
		return true
	}

	return false
}

// SetOriginatinguds gets a reference to the given int64 and assigns it to the Originatinguds field.
func (o *JobRest) SetOriginatinguds(v int64) {
	o.Originatinguds = &v
}

// GetTargetuds returns the Targetuds field value if set, zero value otherwise.
func (o *JobRest) GetTargetuds() int64 {
	if o == nil || IsNil(o.Targetuds) {
		var ret int64
		return ret
	}
	return *o.Targetuds
}

// GetTargetudsOk returns a tuple with the Targetuds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetTargetudsOk() (*int64, bool) {
	if o == nil || IsNil(o.Targetuds) {
		return nil, false
	}
	return o.Targetuds, true
}

// HasTargetuds returns a boolean if a field has been set.
func (o *JobRest) HasTargetuds() bool {
	if o != nil && !IsNil(o.Targetuds) {
		return true
	}

	return false
}

// SetTargetuds gets a reference to the given int64 and assigns it to the Targetuds field.
func (o *JobRest) SetTargetuds(v int64) {
	o.Targetuds = &v
}

// GetParentid returns the Parentid field value if set, zero value otherwise.
func (o *JobRest) GetParentid() string {
	if o == nil || IsNil(o.Parentid) {
		var ret string
		return ret
	}
	return *o.Parentid
}

// GetParentidOk returns a tuple with the Parentid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetParentidOk() (*string, bool) {
	if o == nil || IsNil(o.Parentid) {
		return nil, false
	}
	return o.Parentid, true
}

// HasParentid returns a boolean if a field has been set.
func (o *JobRest) HasParentid() bool {
	if o != nil && !IsNil(o.Parentid) {
		return true
	}

	return false
}

// SetParentid gets a reference to the given string and assigns it to the Parentid field.
func (o *JobRest) SetParentid(v string) {
	o.Parentid = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *JobRest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *JobRest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *JobRest) SetStatus(v string) {
	o.Status = &v
}

// GetJobname returns the Jobname field value if set, zero value otherwise.
func (o *JobRest) GetJobname() string {
	if o == nil || IsNil(o.Jobname) {
		var ret string
		return ret
	}
	return *o.Jobname
}

// GetJobnameOk returns a tuple with the Jobname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetJobnameOk() (*string, bool) {
	if o == nil || IsNil(o.Jobname) {
		return nil, false
	}
	return o.Jobname, true
}

// HasJobname returns a boolean if a field has been set.
func (o *JobRest) HasJobname() bool {
	if o != nil && !IsNil(o.Jobname) {
		return true
	}

	return false
}

// SetJobname gets a reference to the given string and assigns it to the Jobname field.
func (o *JobRest) SetJobname(v string) {
	o.Jobname = &v
}

// GetTransport returns the Transport field value if set, zero value otherwise.
func (o *JobRest) GetTransport() string {
	if o == nil || IsNil(o.Transport) {
		var ret string
		return ret
	}
	return *o.Transport
}

// GetTransportOk returns a tuple with the Transport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetTransportOk() (*string, bool) {
	if o == nil || IsNil(o.Transport) {
		return nil, false
	}
	return o.Transport, true
}

// HasTransport returns a boolean if a field has been set.
func (o *JobRest) HasTransport() bool {
	if o != nil && !IsNil(o.Transport) {
		return true
	}

	return false
}

// SetTransport gets a reference to the given string and assigns it to the Transport field.
func (o *JobRest) SetTransport(v string) {
	o.Transport = &v
}

// GetStartdate returns the Startdate field value if set, zero value otherwise.
func (o *JobRest) GetStartdate() int64 {
	if o == nil || IsNil(o.Startdate) {
		var ret int64
		return ret
	}
	return *o.Startdate
}

// GetStartdateOk returns a tuple with the Startdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetStartdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Startdate) {
		return nil, false
	}
	return o.Startdate, true
}

// HasStartdate returns a boolean if a field has been set.
func (o *JobRest) HasStartdate() bool {
	if o != nil && !IsNil(o.Startdate) {
		return true
	}

	return false
}

// SetStartdate gets a reference to the given int64 and assigns it to the Startdate field.
func (o *JobRest) SetStartdate(v int64) {
	o.Startdate = &v
}

// GetEnddate returns the Enddate field value if set, zero value otherwise.
func (o *JobRest) GetEnddate() int64 {
	if o == nil || IsNil(o.Enddate) {
		var ret int64
		return ret
	}
	return *o.Enddate
}

// GetEnddateOk returns a tuple with the Enddate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetEnddateOk() (*int64, bool) {
	if o == nil || IsNil(o.Enddate) {
		return nil, false
	}
	return o.Enddate, true
}

// HasEnddate returns a boolean if a field has been set.
func (o *JobRest) HasEnddate() bool {
	if o != nil && !IsNil(o.Enddate) {
		return true
	}

	return false
}

// SetEnddate gets a reference to the given int64 and assigns it to the Enddate field.
func (o *JobRest) SetEnddate(v int64) {
	o.Enddate = &v
}

// GetImmutabilitydate returns the Immutabilitydate field value if set, zero value otherwise.
func (o *JobRest) GetImmutabilitydate() int64 {
	if o == nil || IsNil(o.Immutabilitydate) {
		var ret int64
		return ret
	}
	return *o.Immutabilitydate
}

// GetImmutabilitydateOk returns a tuple with the Immutabilitydate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetImmutabilitydateOk() (*int64, bool) {
	if o == nil || IsNil(o.Immutabilitydate) {
		return nil, false
	}
	return o.Immutabilitydate, true
}

// HasImmutabilitydate returns a boolean if a field has been set.
func (o *JobRest) HasImmutabilitydate() bool {
	if o != nil && !IsNil(o.Immutabilitydate) {
		return true
	}

	return false
}

// SetImmutabilitydate gets a reference to the given int64 and assigns it to the Immutabilitydate field.
func (o *JobRest) SetImmutabilitydate(v int64) {
	o.Immutabilitydate = &v
}

// GetConsistencydate returns the Consistencydate field value if set, zero value otherwise.
func (o *JobRest) GetConsistencydate() int64 {
	if o == nil || IsNil(o.Consistencydate) {
		var ret int64
		return ret
	}
	return *o.Consistencydate
}

// GetConsistencydateOk returns a tuple with the Consistencydate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetConsistencydateOk() (*int64, bool) {
	if o == nil || IsNil(o.Consistencydate) {
		return nil, false
	}
	return o.Consistencydate, true
}

// HasConsistencydate returns a boolean if a field has been set.
func (o *JobRest) HasConsistencydate() bool {
	if o != nil && !IsNil(o.Consistencydate) {
		return true
	}

	return false
}

// SetConsistencydate gets a reference to the given int64 and assigns it to the Consistencydate field.
func (o *JobRest) SetConsistencydate(v int64) {
	o.Consistencydate = &v
}

// GetVirtualsize returns the Virtualsize field value if set, zero value otherwise.
func (o *JobRest) GetVirtualsize() int64 {
	if o == nil || IsNil(o.Virtualsize) {
		var ret int64
		return ret
	}
	return *o.Virtualsize
}

// GetVirtualsizeOk returns a tuple with the Virtualsize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetVirtualsizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Virtualsize) {
		return nil, false
	}
	return o.Virtualsize, true
}

// HasVirtualsize returns a boolean if a field has been set.
func (o *JobRest) HasVirtualsize() bool {
	if o != nil && !IsNil(o.Virtualsize) {
		return true
	}

	return false
}

// SetVirtualsize gets a reference to the given int64 and assigns it to the Virtualsize field.
func (o *JobRest) SetVirtualsize(v int64) {
	o.Virtualsize = &v
}

// GetSltname returns the Sltname field value if set, zero value otherwise.
func (o *JobRest) GetSltname() string {
	if o == nil || IsNil(o.Sltname) {
		var ret string
		return ret
	}
	return *o.Sltname
}

// GetSltnameOk returns a tuple with the Sltname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetSltnameOk() (*string, bool) {
	if o == nil || IsNil(o.Sltname) {
		return nil, false
	}
	return o.Sltname, true
}

// HasSltname returns a boolean if a field has been set.
func (o *JobRest) HasSltname() bool {
	if o != nil && !IsNil(o.Sltname) {
		return true
	}

	return false
}

// SetSltname gets a reference to the given string and assigns it to the Sltname field.
func (o *JobRest) SetSltname(v string) {
	o.Sltname = &v
}

// GetPolicyname returns the Policyname field value if set, zero value otherwise.
func (o *JobRest) GetPolicyname() string {
	if o == nil || IsNil(o.Policyname) {
		var ret string
		return ret
	}
	return *o.Policyname
}

// GetPolicynameOk returns a tuple with the Policyname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetPolicynameOk() (*string, bool) {
	if o == nil || IsNil(o.Policyname) {
		return nil, false
	}
	return o.Policyname, true
}

// HasPolicyname returns a boolean if a field has been set.
func (o *JobRest) HasPolicyname() bool {
	if o != nil && !IsNil(o.Policyname) {
		return true
	}

	return false
}

// SetPolicyname gets a reference to the given string and assigns it to the Policyname field.
func (o *JobRest) SetPolicyname(v string) {
	o.Policyname = &v
}

// GetIsexpired returns the Isexpired field value if set, zero value otherwise.
func (o *JobRest) GetIsexpired() bool {
	if o == nil || IsNil(o.Isexpired) {
		var ret bool
		return ret
	}
	return *o.Isexpired
}

// GetIsexpiredOk returns a tuple with the Isexpired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetIsexpiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Isexpired) {
		return nil, false
	}
	return o.Isexpired, true
}

// HasIsexpired returns a boolean if a field has been set.
func (o *JobRest) HasIsexpired() bool {
	if o != nil && !IsNil(o.Isexpired) {
		return true
	}

	return false
}

// SetIsexpired gets a reference to the given bool and assigns it to the Isexpired field.
func (o *JobRest) SetIsexpired(v bool) {
	o.Isexpired = &v
}

// GetTargethost returns the Targethost field value if set, zero value otherwise.
func (o *JobRest) GetTargethost() string {
	if o == nil || IsNil(o.Targethost) {
		var ret string
		return ret
	}
	return *o.Targethost
}

// GetTargethostOk returns a tuple with the Targethost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetTargethostOk() (*string, bool) {
	if o == nil || IsNil(o.Targethost) {
		return nil, false
	}
	return o.Targethost, true
}

// HasTargethost returns a boolean if a field has been set.
func (o *JobRest) HasTargethost() bool {
	if o != nil && !IsNil(o.Targethost) {
		return true
	}

	return false
}

// SetTargethost gets a reference to the given string and assigns it to the Targethost field.
func (o *JobRest) SetTargethost(v string) {
	o.Targethost = &v
}

// GetSourceid returns the Sourceid field value if set, zero value otherwise.
func (o *JobRest) GetSourceid() string {
	if o == nil || IsNil(o.Sourceid) {
		var ret string
		return ret
	}
	return *o.Sourceid
}

// GetSourceidOk returns a tuple with the Sourceid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetSourceidOk() (*string, bool) {
	if o == nil || IsNil(o.Sourceid) {
		return nil, false
	}
	return o.Sourceid, true
}

// HasSourceid returns a boolean if a field has been set.
func (o *JobRest) HasSourceid() bool {
	if o != nil && !IsNil(o.Sourceid) {
		return true
	}

	return false
}

// SetSourceid gets a reference to the given string and assigns it to the Sourceid field.
func (o *JobRest) SetSourceid(v string) {
	o.Sourceid = &v
}

// GetJobcount returns the Jobcount field value if set, zero value otherwise.
func (o *JobRest) GetJobcount() int32 {
	if o == nil || IsNil(o.Jobcount) {
		var ret int32
		return ret
	}
	return *o.Jobcount
}

// GetJobcountOk returns a tuple with the Jobcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetJobcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Jobcount) {
		return nil, false
	}
	return o.Jobcount, true
}

// HasJobcount returns a boolean if a field has been set.
func (o *JobRest) HasJobcount() bool {
	if o != nil && !IsNil(o.Jobcount) {
		return true
	}

	return false
}

// SetJobcount gets a reference to the given int32 and assigns it to the Jobcount field.
func (o *JobRest) SetJobcount(v int32) {
	o.Jobcount = &v
}

// GetChangerequest returns the Changerequest field value if set, zero value otherwise.
func (o *JobRest) GetChangerequest() int32 {
	if o == nil || IsNil(o.Changerequest) {
		var ret int32
		return ret
	}
	return *o.Changerequest
}

// GetChangerequestOk returns a tuple with the Changerequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetChangerequestOk() (*int32, bool) {
	if o == nil || IsNil(o.Changerequest) {
		return nil, false
	}
	return o.Changerequest, true
}

// HasChangerequest returns a boolean if a field has been set.
func (o *JobRest) HasChangerequest() bool {
	if o != nil && !IsNil(o.Changerequest) {
		return true
	}

	return false
}

// SetChangerequest gets a reference to the given int32 and assigns it to the Changerequest field.
func (o *JobRest) SetChangerequest(v int32) {
	o.Changerequest = &v
}

// GetProgress returns the Progress field value if set, zero value otherwise.
func (o *JobRest) GetProgress() int64 {
	if o == nil || IsNil(o.Progress) {
		var ret int64
		return ret
	}
	return *o.Progress
}

// GetProgressOk returns a tuple with the Progress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetProgressOk() (*int64, bool) {
	if o == nil || IsNil(o.Progress) {
		return nil, false
	}
	return o.Progress, true
}

// HasProgress returns a boolean if a field has been set.
func (o *JobRest) HasProgress() bool {
	if o != nil && !IsNil(o.Progress) {
		return true
	}

	return false
}

// SetProgress gets a reference to the given int64 and assigns it to the Progress field.
func (o *JobRest) SetProgress(v int64) {
	o.Progress = &v
}

// GetRelativesize returns the Relativesize field value if set, zero value otherwise.
func (o *JobRest) GetRelativesize() int64 {
	if o == nil || IsNil(o.Relativesize) {
		var ret int64
		return ret
	}
	return *o.Relativesize
}

// GetRelativesizeOk returns a tuple with the Relativesize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetRelativesizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Relativesize) {
		return nil, false
	}
	return o.Relativesize, true
}

// HasRelativesize returns a boolean if a field has been set.
func (o *JobRest) HasRelativesize() bool {
	if o != nil && !IsNil(o.Relativesize) {
		return true
	}

	return false
}

// SetRelativesize gets a reference to the given int64 and assigns it to the Relativesize field.
func (o *JobRest) SetRelativesize(v int64) {
	o.Relativesize = &v
}

// GetRetrycount returns the Retrycount field value if set, zero value otherwise.
func (o *JobRest) GetRetrycount() int32 {
	if o == nil || IsNil(o.Retrycount) {
		var ret int32
		return ret
	}
	return *o.Retrycount
}

// GetRetrycountOk returns a tuple with the Retrycount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetRetrycountOk() (*int32, bool) {
	if o == nil || IsNil(o.Retrycount) {
		return nil, false
	}
	return o.Retrycount, true
}

// HasRetrycount returns a boolean if a field has been set.
func (o *JobRest) HasRetrycount() bool {
	if o != nil && !IsNil(o.Retrycount) {
		return true
	}

	return false
}

// SetRetrycount gets a reference to the given int32 and assigns it to the Retrycount field.
func (o *JobRest) SetRetrycount(v int32) {
	o.Retrycount = &v
}

// GetQueuedate returns the Queuedate field value if set, zero value otherwise.
func (o *JobRest) GetQueuedate() int64 {
	if o == nil || IsNil(o.Queuedate) {
		var ret int64
		return ret
	}
	return *o.Queuedate
}

// GetQueuedateOk returns a tuple with the Queuedate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetQueuedateOk() (*int64, bool) {
	if o == nil || IsNil(o.Queuedate) {
		return nil, false
	}
	return o.Queuedate, true
}

// HasQueuedate returns a boolean if a field has been set.
func (o *JobRest) HasQueuedate() bool {
	if o != nil && !IsNil(o.Queuedate) {
		return true
	}

	return false
}

// SetQueuedate gets a reference to the given int64 and assigns it to the Queuedate field.
func (o *JobRest) SetQueuedate(v int64) {
	o.Queuedate = &v
}

// GetExpirationdate returns the Expirationdate field value if set, zero value otherwise.
func (o *JobRest) GetExpirationdate() int64 {
	if o == nil || IsNil(o.Expirationdate) {
		var ret int64
		return ret
	}
	return *o.Expirationdate
}

// GetExpirationdateOk returns a tuple with the Expirationdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetExpirationdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Expirationdate) {
		return nil, false
	}
	return o.Expirationdate, true
}

// HasExpirationdate returns a boolean if a field has been set.
func (o *JobRest) HasExpirationdate() bool {
	if o != nil && !IsNil(o.Expirationdate) {
		return true
	}

	return false
}

// SetExpirationdate gets a reference to the given int64 and assigns it to the Expirationdate field.
func (o *JobRest) SetExpirationdate(v int64) {
	o.Expirationdate = &v
}

// GetIsscheduled returns the Isscheduled field value if set, zero value otherwise.
func (o *JobRest) GetIsscheduled() bool {
	if o == nil || IsNil(o.Isscheduled) {
		var ret bool
		return ret
	}
	return *o.Isscheduled
}

// GetIsscheduledOk returns a tuple with the Isscheduled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetIsscheduledOk() (*bool, bool) {
	if o == nil || IsNil(o.Isscheduled) {
		return nil, false
	}
	return o.Isscheduled, true
}

// HasIsscheduled returns a boolean if a field has been set.
func (o *JobRest) HasIsscheduled() bool {
	if o != nil && !IsNil(o.Isscheduled) {
		return true
	}

	return false
}

// SetIsscheduled gets a reference to the given bool and assigns it to the Isscheduled field.
func (o *JobRest) SetIsscheduled(v bool) {
	o.Isscheduled = &v
}

// GetJobtag returns the Jobtag field value if set, zero value otherwise.
func (o *JobRest) GetJobtag() string {
	if o == nil || IsNil(o.Jobtag) {
		var ret string
		return ret
	}
	return *o.Jobtag
}

// GetJobtagOk returns a tuple with the Jobtag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetJobtagOk() (*string, bool) {
	if o == nil || IsNil(o.Jobtag) {
		return nil, false
	}
	return o.Jobtag, true
}

// HasJobtag returns a boolean if a field has been set.
func (o *JobRest) HasJobtag() bool {
	if o != nil && !IsNil(o.Jobtag) {
		return true
	}

	return false
}

// SetJobtag gets a reference to the given string and assigns it to the Jobtag field.
func (o *JobRest) SetJobtag(v string) {
	o.Jobtag = &v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *JobRest) GetEvent() EventRest {
	if o == nil || IsNil(o.Event) {
		var ret EventRest
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetEventOk() (*EventRest, bool) {
	if o == nil || IsNil(o.Event) {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *JobRest) HasEvent() bool {
	if o != nil && !IsNil(o.Event) {
		return true
	}

	return false
}

// SetEvent gets a reference to the given EventRest and assigns it to the Event field.
func (o *JobRest) SetEvent(v EventRest) {
	o.Event = &v
}

// GetId2 returns the Id2 field value if set, zero value otherwise.
func (o *JobRest) GetId2() string {
	if o == nil || IsNil(o.Id2) {
		var ret string
		return ret
	}
	return *o.Id2
}

// GetId2Ok returns a tuple with the Id2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetId2Ok() (*string, bool) {
	if o == nil || IsNil(o.Id2) {
		return nil, false
	}
	return o.Id2, true
}

// HasId2 returns a boolean if a field has been set.
func (o *JobRest) HasId2() bool {
	if o != nil && !IsNil(o.Id2) {
		return true
	}

	return false
}

// SetId2 gets a reference to the given string and assigns it to the Id2 field.
func (o *JobRest) SetId2(v string) {
	o.Id2 = &v
}

// GetChangerequesttext returns the Changerequesttext field value if set, zero value otherwise.
func (o *JobRest) GetChangerequesttext() string {
	if o == nil || IsNil(o.Changerequesttext) {
		var ret string
		return ret
	}
	return *o.Changerequesttext
}

// GetChangerequesttextOk returns a tuple with the Changerequesttext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetChangerequesttextOk() (*string, bool) {
	if o == nil || IsNil(o.Changerequesttext) {
		return nil, false
	}
	return o.Changerequesttext, true
}

// HasChangerequesttext returns a boolean if a field has been set.
func (o *JobRest) HasChangerequesttext() bool {
	if o != nil && !IsNil(o.Changerequesttext) {
		return true
	}

	return false
}

// SetChangerequesttext gets a reference to the given string and assigns it to the Changerequesttext field.
func (o *JobRest) SetChangerequesttext(v string) {
	o.Changerequesttext = &v
}

// GetLogsmarttype returns the Logsmarttype field value if set, zero value otherwise.
func (o *JobRest) GetLogsmarttype() string {
	if o == nil || IsNil(o.Logsmarttype) {
		var ret string
		return ret
	}
	return *o.Logsmarttype
}

// GetLogsmarttypeOk returns a tuple with the Logsmarttype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetLogsmarttypeOk() (*string, bool) {
	if o == nil || IsNil(o.Logsmarttype) {
		return nil, false
	}
	return o.Logsmarttype, true
}

// HasLogsmarttype returns a boolean if a field has been set.
func (o *JobRest) HasLogsmarttype() bool {
	if o != nil && !IsNil(o.Logsmarttype) {
		return true
	}

	return false
}

// SetLogsmarttype gets a reference to the given string and assigns it to the Logsmarttype field.
func (o *JobRest) SetLogsmarttype(v string) {
	o.Logsmarttype = &v
}

// GetExtrainfo returns the Extrainfo field value if set, zero value otherwise.
func (o *JobRest) GetExtrainfo() string {
	if o == nil || IsNil(o.Extrainfo) {
		var ret string
		return ret
	}
	return *o.Extrainfo
}

// GetExtrainfoOk returns a tuple with the Extrainfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetExtrainfoOk() (*string, bool) {
	if o == nil || IsNil(o.Extrainfo) {
		return nil, false
	}
	return o.Extrainfo, true
}

// HasExtrainfo returns a boolean if a field has been set.
func (o *JobRest) HasExtrainfo() bool {
	if o != nil && !IsNil(o.Extrainfo) {
		return true
	}

	return false
}

// SetExtrainfo gets a reference to the given string and assigns it to the Extrainfo field.
func (o *JobRest) SetExtrainfo(v string) {
	o.Extrainfo = &v
}

// GetDiskpools returns the Diskpools field value if set, zero value otherwise.
func (o *JobRest) GetDiskpools() []DiskPoolRest {
	if o == nil || IsNil(o.Diskpools) {
		var ret []DiskPoolRest
		return ret
	}
	return o.Diskpools
}

// GetDiskpoolsOk returns a tuple with the Diskpools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetDiskpoolsOk() ([]DiskPoolRest, bool) {
	if o == nil || IsNil(o.Diskpools) {
		return nil, false
	}
	return o.Diskpools, true
}

// HasDiskpools returns a boolean if a field has been set.
func (o *JobRest) HasDiskpools() bool {
	if o != nil && !IsNil(o.Diskpools) {
		return true
	}

	return false
}

// SetDiskpools gets a reference to the given []DiskPoolRest and assigns it to the Diskpools field.
func (o *JobRest) SetDiskpools(v []DiskPoolRest) {
	o.Diskpools = v
}

// GetTargetdiskpool returns the Targetdiskpool field value if set, zero value otherwise.
func (o *JobRest) GetTargetdiskpool() DiskPoolRest {
	if o == nil || IsNil(o.Targetdiskpool) {
		var ret DiskPoolRest
		return ret
	}
	return *o.Targetdiskpool
}

// GetTargetdiskpoolOk returns a tuple with the Targetdiskpool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetTargetdiskpoolOk() (*DiskPoolRest, bool) {
	if o == nil || IsNil(o.Targetdiskpool) {
		return nil, false
	}
	return o.Targetdiskpool, true
}

// HasTargetdiskpool returns a boolean if a field has been set.
func (o *JobRest) HasTargetdiskpool() bool {
	if o != nil && !IsNil(o.Targetdiskpool) {
		return true
	}

	return false
}

// SetTargetdiskpool gets a reference to the given DiskPoolRest and assigns it to the Targetdiskpool field.
func (o *JobRest) SetTargetdiskpool(v DiskPoolRest) {
	o.Targetdiskpool = &v
}

// GetJobclasscode returns the Jobclasscode field value if set, zero value otherwise.
func (o *JobRest) GetJobclasscode() int32 {
	if o == nil || IsNil(o.Jobclasscode) {
		var ret int32
		return ret
	}
	return *o.Jobclasscode
}

// GetJobclasscodeOk returns a tuple with the Jobclasscode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetJobclasscodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Jobclasscode) {
		return nil, false
	}
	return o.Jobclasscode, true
}

// HasJobclasscode returns a boolean if a field has been set.
func (o *JobRest) HasJobclasscode() bool {
	if o != nil && !IsNil(o.Jobclasscode) {
		return true
	}

	return false
}

// SetJobclasscode gets a reference to the given int32 and assigns it to the Jobclasscode field.
func (o *JobRest) SetJobclasscode(v int32) {
	o.Jobclasscode = &v
}

// GetSourcediskpool returns the Sourcediskpool field value if set, zero value otherwise.
func (o *JobRest) GetSourcediskpool() DiskPoolRest {
	if o == nil || IsNil(o.Sourcediskpool) {
		var ret DiskPoolRest
		return ret
	}
	return *o.Sourcediskpool
}

// GetSourcediskpoolOk returns a tuple with the Sourcediskpool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetSourcediskpoolOk() (*DiskPoolRest, bool) {
	if o == nil || IsNil(o.Sourcediskpool) {
		return nil, false
	}
	return o.Sourcediskpool, true
}

// HasSourcediskpool returns a boolean if a field has been set.
func (o *JobRest) HasSourcediskpool() bool {
	if o != nil && !IsNil(o.Sourcediskpool) {
		return true
	}

	return false
}

// SetSourcediskpool gets a reference to the given DiskPoolRest and assigns it to the Sourcediskpool field.
func (o *JobRest) SetSourcediskpool(v DiskPoolRest) {
	o.Sourcediskpool = &v
}

// GetYaml returns the Yaml field value if set, zero value otherwise.
func (o *JobRest) GetYaml() string {
	if o == nil || IsNil(o.Yaml) {
		var ret string
		return ret
	}
	return *o.Yaml
}

// GetYamlOk returns a tuple with the Yaml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetYamlOk() (*string, bool) {
	if o == nil || IsNil(o.Yaml) {
		return nil, false
	}
	return o.Yaml, true
}

// HasYaml returns a boolean if a field has been set.
func (o *JobRest) HasYaml() bool {
	if o != nil && !IsNil(o.Yaml) {
		return true
	}

	return false
}

// SetYaml gets a reference to the given string and assigns it to the Yaml field.
func (o *JobRest) SetYaml(v string) {
	o.Yaml = &v
}

// GetAppliance returns the Appliance field value if set, zero value otherwise.
func (o *JobRest) GetAppliance() ClusterRest {
	if o == nil || IsNil(o.Appliance) {
		var ret ClusterRest
		return ret
	}
	return *o.Appliance
}

// GetApplianceOk returns a tuple with the Appliance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetApplianceOk() (*ClusterRest, bool) {
	if o == nil || IsNil(o.Appliance) {
		return nil, false
	}
	return o.Appliance, true
}

// HasAppliance returns a boolean if a field has been set.
func (o *JobRest) HasAppliance() bool {
	if o != nil && !IsNil(o.Appliance) {
		return true
	}

	return false
}

// SetAppliance gets a reference to the given ClusterRest and assigns it to the Appliance field.
func (o *JobRest) SetAppliance(v ClusterRest) {
	o.Appliance = &v
}

// GetConsistencyMode returns the ConsistencyMode field value if set, zero value otherwise.
func (o *JobRest) GetConsistencyMode() string {
	if o == nil || IsNil(o.ConsistencyMode) {
		var ret string
		return ret
	}
	return *o.ConsistencyMode
}

// GetConsistencyModeOk returns a tuple with the ConsistencyMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetConsistencyModeOk() (*string, bool) {
	if o == nil || IsNil(o.ConsistencyMode) {
		return nil, false
	}
	return o.ConsistencyMode, true
}

// HasConsistencyMode returns a boolean if a field has been set.
func (o *JobRest) HasConsistencyMode() bool {
	if o != nil && !IsNil(o.ConsistencyMode) {
		return true
	}

	return false
}

// SetConsistencyMode gets a reference to the given string and assigns it to the ConsistencyMode field.
func (o *JobRest) SetConsistencyMode(v string) {
	o.ConsistencyMode = &v
}

// GetFlagsText returns the FlagsText field value if set, zero value otherwise.
func (o *JobRest) GetFlagsText() []string {
	if o == nil || IsNil(o.FlagsText) {
		var ret []string
		return ret
	}
	return o.FlagsText
}

// GetFlagsTextOk returns a tuple with the FlagsText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetFlagsTextOk() ([]string, bool) {
	if o == nil || IsNil(o.FlagsText) {
		return nil, false
	}
	return o.FlagsText, true
}

// HasFlagsText returns a boolean if a field has been set.
func (o *JobRest) HasFlagsText() bool {
	if o != nil && !IsNil(o.FlagsText) {
		return true
	}

	return false
}

// SetFlagsText gets a reference to the given []string and assigns it to the FlagsText field.
func (o *JobRest) SetFlagsText(v []string) {
	o.FlagsText = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *JobRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *JobRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *JobRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *JobRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *JobRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *JobRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *JobRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *JobRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *JobRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *JobRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *JobRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *JobRest) SetStale(v bool) {
	o.Stale = &v
}

func (o JobRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pid) {
		toSerialize["pid"] = o.Pid
	}
	if !IsNil(o.Task) {
		toSerialize["task"] = o.Task
	}
	if !IsNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Errorcode) {
		toSerialize["errorcode"] = o.Errorcode
	}
	if !IsNil(o.Jobclass) {
		toSerialize["jobclass"] = o.Jobclass
	}
	if !IsNil(o.Appid) {
		toSerialize["appid"] = o.Appid
	}
	if !IsNil(o.Hostid) {
		toSerialize["hostid"] = o.Hostid
	}
	if !IsNil(o.Srcid) {
		toSerialize["srcid"] = o.Srcid
	}
	if !IsNil(o.Clusterid) {
		toSerialize["clusterid"] = o.Clusterid
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Appname) {
		toSerialize["appname"] = o.Appname
	}
	if !IsNil(o.Apptype) {
		toSerialize["apptype"] = o.Apptype
	}
	if !IsNil(o.Backup) {
		toSerialize["backup"] = o.Backup
	}
	if !IsNil(o.Sourceuds) {
		toSerialize["sourceuds"] = o.Sourceuds
	}
	if !IsNil(o.Originatinguds) {
		toSerialize["originatinguds"] = o.Originatinguds
	}
	if !IsNil(o.Targetuds) {
		toSerialize["targetuds"] = o.Targetuds
	}
	if !IsNil(o.Parentid) {
		toSerialize["parentid"] = o.Parentid
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Jobname) {
		toSerialize["jobname"] = o.Jobname
	}
	if !IsNil(o.Transport) {
		toSerialize["transport"] = o.Transport
	}
	if !IsNil(o.Startdate) {
		toSerialize["startdate"] = o.Startdate
	}
	if !IsNil(o.Enddate) {
		toSerialize["enddate"] = o.Enddate
	}
	if !IsNil(o.Immutabilitydate) {
		toSerialize["immutabilitydate"] = o.Immutabilitydate
	}
	if !IsNil(o.Consistencydate) {
		toSerialize["consistencydate"] = o.Consistencydate
	}
	if !IsNil(o.Virtualsize) {
		toSerialize["virtualsize"] = o.Virtualsize
	}
	if !IsNil(o.Sltname) {
		toSerialize["sltname"] = o.Sltname
	}
	if !IsNil(o.Policyname) {
		toSerialize["policyname"] = o.Policyname
	}
	if !IsNil(o.Isexpired) {
		toSerialize["isexpired"] = o.Isexpired
	}
	if !IsNil(o.Targethost) {
		toSerialize["targethost"] = o.Targethost
	}
	if !IsNil(o.Sourceid) {
		toSerialize["sourceid"] = o.Sourceid
	}
	if !IsNil(o.Jobcount) {
		toSerialize["jobcount"] = o.Jobcount
	}
	if !IsNil(o.Changerequest) {
		toSerialize["changerequest"] = o.Changerequest
	}
	if !IsNil(o.Progress) {
		toSerialize["progress"] = o.Progress
	}
	if !IsNil(o.Relativesize) {
		toSerialize["relativesize"] = o.Relativesize
	}
	if !IsNil(o.Retrycount) {
		toSerialize["retrycount"] = o.Retrycount
	}
	if !IsNil(o.Queuedate) {
		toSerialize["queuedate"] = o.Queuedate
	}
	if !IsNil(o.Expirationdate) {
		toSerialize["expirationdate"] = o.Expirationdate
	}
	if !IsNil(o.Isscheduled) {
		toSerialize["isscheduled"] = o.Isscheduled
	}
	if !IsNil(o.Jobtag) {
		toSerialize["jobtag"] = o.Jobtag
	}
	if !IsNil(o.Event) {
		toSerialize["event"] = o.Event
	}
	if !IsNil(o.Id2) {
		toSerialize["id2"] = o.Id2
	}
	if !IsNil(o.Changerequesttext) {
		toSerialize["changerequesttext"] = o.Changerequesttext
	}
	if !IsNil(o.Logsmarttype) {
		toSerialize["logsmarttype"] = o.Logsmarttype
	}
	if !IsNil(o.Extrainfo) {
		toSerialize["extrainfo"] = o.Extrainfo
	}
	if !IsNil(o.Diskpools) {
		toSerialize["diskpools"] = o.Diskpools
	}
	if !IsNil(o.Targetdiskpool) {
		toSerialize["targetdiskpool"] = o.Targetdiskpool
	}
	if !IsNil(o.Jobclasscode) {
		toSerialize["jobclasscode"] = o.Jobclasscode
	}
	if !IsNil(o.Sourcediskpool) {
		toSerialize["sourcediskpool"] = o.Sourcediskpool
	}
	if !IsNil(o.Yaml) {
		toSerialize["yaml"] = o.Yaml
	}
	if !IsNil(o.Appliance) {
		toSerialize["appliance"] = o.Appliance
	}
	if !IsNil(o.ConsistencyMode) {
		toSerialize["consistency-mode"] = o.ConsistencyMode
	}
	if !IsNil(o.FlagsText) {
		toSerialize["flags_text"] = o.FlagsText
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableJobRest struct {
	value *JobRest
	isSet bool
}

func (v NullableJobRest) Get() *JobRest {
	return v.value
}

func (v *NullableJobRest) Set(val *JobRest) {
	v.value = val
	v.isSet = true
}

func (v NullableJobRest) IsSet() bool {
	return v.isSet
}

func (v *NullableJobRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobRest(val *JobRest) *NullableJobRest {
	return &NullableJobRest{value: val, isSet: true}
}

func (v NullableJobRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


