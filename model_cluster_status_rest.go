/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ClusterStatusRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterStatusRest{}

// ClusterStatusRest struct for ClusterStatusRest
type ClusterStatusRest struct {
	Accessible *bool `json:"accessible,omitempty"`
	Vdiskcount *int32 `json:"vdiskcount,omitempty"`
	Vdisklimit *int32 `json:"vdisklimit,omitempty"`
	Vdiskcolor *string `json:"vdiskcolor,omitempty"`
	Localsnapshotcolor *string `json:"localsnapshotcolor,omitempty"`
	Localdedupcolor *string `json:"localdedupcolor,omitempty"`
	Remoteprotectioncolor *string `json:"remoteprotectioncolor,omitempty"`
	Copydata *int64 `json:"copydata,omitempty"`
}

// NewClusterStatusRest instantiates a new ClusterStatusRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterStatusRest() *ClusterStatusRest {
	this := ClusterStatusRest{}
	return &this
}

// NewClusterStatusRestWithDefaults instantiates a new ClusterStatusRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterStatusRestWithDefaults() *ClusterStatusRest {
	this := ClusterStatusRest{}
	return &this
}

// GetAccessible returns the Accessible field value if set, zero value otherwise.
func (o *ClusterStatusRest) GetAccessible() bool {
	if o == nil || IsNil(o.Accessible) {
		var ret bool
		return ret
	}
	return *o.Accessible
}

// GetAccessibleOk returns a tuple with the Accessible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusRest) GetAccessibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Accessible) {
		return nil, false
	}
	return o.Accessible, true
}

// HasAccessible returns a boolean if a field has been set.
func (o *ClusterStatusRest) HasAccessible() bool {
	if o != nil && !IsNil(o.Accessible) {
		return true
	}

	return false
}

// SetAccessible gets a reference to the given bool and assigns it to the Accessible field.
func (o *ClusterStatusRest) SetAccessible(v bool) {
	o.Accessible = &v
}

// GetVdiskcount returns the Vdiskcount field value if set, zero value otherwise.
func (o *ClusterStatusRest) GetVdiskcount() int32 {
	if o == nil || IsNil(o.Vdiskcount) {
		var ret int32
		return ret
	}
	return *o.Vdiskcount
}

// GetVdiskcountOk returns a tuple with the Vdiskcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusRest) GetVdiskcountOk() (*int32, bool) {
	if o == nil || IsNil(o.Vdiskcount) {
		return nil, false
	}
	return o.Vdiskcount, true
}

// HasVdiskcount returns a boolean if a field has been set.
func (o *ClusterStatusRest) HasVdiskcount() bool {
	if o != nil && !IsNil(o.Vdiskcount) {
		return true
	}

	return false
}

// SetVdiskcount gets a reference to the given int32 and assigns it to the Vdiskcount field.
func (o *ClusterStatusRest) SetVdiskcount(v int32) {
	o.Vdiskcount = &v
}

// GetVdisklimit returns the Vdisklimit field value if set, zero value otherwise.
func (o *ClusterStatusRest) GetVdisklimit() int32 {
	if o == nil || IsNil(o.Vdisklimit) {
		var ret int32
		return ret
	}
	return *o.Vdisklimit
}

// GetVdisklimitOk returns a tuple with the Vdisklimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusRest) GetVdisklimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Vdisklimit) {
		return nil, false
	}
	return o.Vdisklimit, true
}

// HasVdisklimit returns a boolean if a field has been set.
func (o *ClusterStatusRest) HasVdisklimit() bool {
	if o != nil && !IsNil(o.Vdisklimit) {
		return true
	}

	return false
}

// SetVdisklimit gets a reference to the given int32 and assigns it to the Vdisklimit field.
func (o *ClusterStatusRest) SetVdisklimit(v int32) {
	o.Vdisklimit = &v
}

// GetVdiskcolor returns the Vdiskcolor field value if set, zero value otherwise.
func (o *ClusterStatusRest) GetVdiskcolor() string {
	if o == nil || IsNil(o.Vdiskcolor) {
		var ret string
		return ret
	}
	return *o.Vdiskcolor
}

// GetVdiskcolorOk returns a tuple with the Vdiskcolor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusRest) GetVdiskcolorOk() (*string, bool) {
	if o == nil || IsNil(o.Vdiskcolor) {
		return nil, false
	}
	return o.Vdiskcolor, true
}

// HasVdiskcolor returns a boolean if a field has been set.
func (o *ClusterStatusRest) HasVdiskcolor() bool {
	if o != nil && !IsNil(o.Vdiskcolor) {
		return true
	}

	return false
}

// SetVdiskcolor gets a reference to the given string and assigns it to the Vdiskcolor field.
func (o *ClusterStatusRest) SetVdiskcolor(v string) {
	o.Vdiskcolor = &v
}

// GetLocalsnapshotcolor returns the Localsnapshotcolor field value if set, zero value otherwise.
func (o *ClusterStatusRest) GetLocalsnapshotcolor() string {
	if o == nil || IsNil(o.Localsnapshotcolor) {
		var ret string
		return ret
	}
	return *o.Localsnapshotcolor
}

// GetLocalsnapshotcolorOk returns a tuple with the Localsnapshotcolor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusRest) GetLocalsnapshotcolorOk() (*string, bool) {
	if o == nil || IsNil(o.Localsnapshotcolor) {
		return nil, false
	}
	return o.Localsnapshotcolor, true
}

// HasLocalsnapshotcolor returns a boolean if a field has been set.
func (o *ClusterStatusRest) HasLocalsnapshotcolor() bool {
	if o != nil && !IsNil(o.Localsnapshotcolor) {
		return true
	}

	return false
}

// SetLocalsnapshotcolor gets a reference to the given string and assigns it to the Localsnapshotcolor field.
func (o *ClusterStatusRest) SetLocalsnapshotcolor(v string) {
	o.Localsnapshotcolor = &v
}

// GetLocaldedupcolor returns the Localdedupcolor field value if set, zero value otherwise.
func (o *ClusterStatusRest) GetLocaldedupcolor() string {
	if o == nil || IsNil(o.Localdedupcolor) {
		var ret string
		return ret
	}
	return *o.Localdedupcolor
}

// GetLocaldedupcolorOk returns a tuple with the Localdedupcolor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusRest) GetLocaldedupcolorOk() (*string, bool) {
	if o == nil || IsNil(o.Localdedupcolor) {
		return nil, false
	}
	return o.Localdedupcolor, true
}

// HasLocaldedupcolor returns a boolean if a field has been set.
func (o *ClusterStatusRest) HasLocaldedupcolor() bool {
	if o != nil && !IsNil(o.Localdedupcolor) {
		return true
	}

	return false
}

// SetLocaldedupcolor gets a reference to the given string and assigns it to the Localdedupcolor field.
func (o *ClusterStatusRest) SetLocaldedupcolor(v string) {
	o.Localdedupcolor = &v
}

// GetRemoteprotectioncolor returns the Remoteprotectioncolor field value if set, zero value otherwise.
func (o *ClusterStatusRest) GetRemoteprotectioncolor() string {
	if o == nil || IsNil(o.Remoteprotectioncolor) {
		var ret string
		return ret
	}
	return *o.Remoteprotectioncolor
}

// GetRemoteprotectioncolorOk returns a tuple with the Remoteprotectioncolor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusRest) GetRemoteprotectioncolorOk() (*string, bool) {
	if o == nil || IsNil(o.Remoteprotectioncolor) {
		return nil, false
	}
	return o.Remoteprotectioncolor, true
}

// HasRemoteprotectioncolor returns a boolean if a field has been set.
func (o *ClusterStatusRest) HasRemoteprotectioncolor() bool {
	if o != nil && !IsNil(o.Remoteprotectioncolor) {
		return true
	}

	return false
}

// SetRemoteprotectioncolor gets a reference to the given string and assigns it to the Remoteprotectioncolor field.
func (o *ClusterStatusRest) SetRemoteprotectioncolor(v string) {
	o.Remoteprotectioncolor = &v
}

// GetCopydata returns the Copydata field value if set, zero value otherwise.
func (o *ClusterStatusRest) GetCopydata() int64 {
	if o == nil || IsNil(o.Copydata) {
		var ret int64
		return ret
	}
	return *o.Copydata
}

// GetCopydataOk returns a tuple with the Copydata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClusterStatusRest) GetCopydataOk() (*int64, bool) {
	if o == nil || IsNil(o.Copydata) {
		return nil, false
	}
	return o.Copydata, true
}

// HasCopydata returns a boolean if a field has been set.
func (o *ClusterStatusRest) HasCopydata() bool {
	if o != nil && !IsNil(o.Copydata) {
		return true
	}

	return false
}

// SetCopydata gets a reference to the given int64 and assigns it to the Copydata field.
func (o *ClusterStatusRest) SetCopydata(v int64) {
	o.Copydata = &v
}

func (o ClusterStatusRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterStatusRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Accessible) {
		toSerialize["accessible"] = o.Accessible
	}
	if !IsNil(o.Vdiskcount) {
		toSerialize["vdiskcount"] = o.Vdiskcount
	}
	if !IsNil(o.Vdisklimit) {
		toSerialize["vdisklimit"] = o.Vdisklimit
	}
	if !IsNil(o.Vdiskcolor) {
		toSerialize["vdiskcolor"] = o.Vdiskcolor
	}
	if !IsNil(o.Localsnapshotcolor) {
		toSerialize["localsnapshotcolor"] = o.Localsnapshotcolor
	}
	if !IsNil(o.Localdedupcolor) {
		toSerialize["localdedupcolor"] = o.Localdedupcolor
	}
	if !IsNil(o.Remoteprotectioncolor) {
		toSerialize["remoteprotectioncolor"] = o.Remoteprotectioncolor
	}
	if !IsNil(o.Copydata) {
		toSerialize["copydata"] = o.Copydata
	}
	return toSerialize, nil
}

type NullableClusterStatusRest struct {
	value *ClusterStatusRest
	isSet bool
}

func (v NullableClusterStatusRest) Get() *ClusterStatusRest {
	return v.value
}

func (v *NullableClusterStatusRest) Set(val *ClusterStatusRest) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterStatusRest) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterStatusRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterStatusRest(val *ClusterStatusRest) *NullableClusterStatusRest {
	return &NullableClusterStatusRest{value: val, isSet: true}
}

func (v NullableClusterStatusRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterStatusRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


