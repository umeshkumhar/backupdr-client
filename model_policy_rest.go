/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PolicyRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyRest{}

// PolicyRest struct for PolicyRest
type PolicyRest struct {
	Source []SourceRest `json:"source,omitempty"`
	Description *string `json:"description,omitempty"`
	Name *string `json:"name,omitempty"`
	Priority *string `json:"priority,omitempty"`
	Slt *SltRest `json:"slt,omitempty"`
	Endtime *string `json:"endtime,omitempty"`
	Rpom *string `json:"rpom,omitempty"`
	Rpo *string `json:"rpo,omitempty"`
	Predecessor *PolicyRest `json:"predecessor,omitempty"`
	Exclusiontype *string `json:"exclusiontype,omitempty"`
	Iscontinuous *bool `json:"iscontinuous,omitempty"`
	Starttime *string `json:"starttime,omitempty"`
	Targetvault *int32 `json:"targetvault,omitempty"`
	Sourcevault *int32 `json:"sourcevault,omitempty"`
	Selection *string `json:"selection,omitempty"`
	Scheduletype *string `json:"scheduletype,omitempty"`
	Exclusion *string `json:"exclusion,omitempty"`
	Reptype *string `json:"reptype,omitempty"`
	Retention *string `json:"retention,omitempty"`
	Retentionm *string `json:"retentionm,omitempty"`
	Encrypt *string `json:"encrypt,omitempty"`
	Repeatinterval *string `json:"repeatinterval,omitempty"`
	Exclusioninterval *string `json:"exclusioninterval,omitempty"`
	Remoteretention *int32 `json:"remoteretention,omitempty"`
	Compliancesettings *ComplianceSettingsRest `json:"compliancesettings,omitempty"`
	Options []AdvancedOptionRest `json:"options,omitempty"`
	PolicyType *string `json:"policyType,omitempty"`
	Truncatelog *string `json:"truncatelog,omitempty"`
	Verifychoice *string `json:"verifychoice,omitempty"`
	Op *string `json:"op,omitempty"`
	Verification *bool `json:"verification,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewPolicyRest instantiates a new PolicyRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyRest() *PolicyRest {
	this := PolicyRest{}
	return &this
}

// NewPolicyRestWithDefaults instantiates a new PolicyRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyRestWithDefaults() *PolicyRest {
	this := PolicyRest{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *PolicyRest) GetSource() []SourceRest {
	if o == nil || IsNil(o.Source) {
		var ret []SourceRest
		return ret
	}
	return o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetSourceOk() ([]SourceRest, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *PolicyRest) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given []SourceRest and assigns it to the Source field.
func (o *PolicyRest) SetSource(v []SourceRest) {
	o.Source = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PolicyRest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PolicyRest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PolicyRest) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PolicyRest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PolicyRest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PolicyRest) SetName(v string) {
	o.Name = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *PolicyRest) GetPriority() string {
	if o == nil || IsNil(o.Priority) {
		var ret string
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetPriorityOk() (*string, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *PolicyRest) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given string and assigns it to the Priority field.
func (o *PolicyRest) SetPriority(v string) {
	o.Priority = &v
}

// GetSlt returns the Slt field value if set, zero value otherwise.
func (o *PolicyRest) GetSlt() SltRest {
	if o == nil || IsNil(o.Slt) {
		var ret SltRest
		return ret
	}
	return *o.Slt
}

// GetSltOk returns a tuple with the Slt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetSltOk() (*SltRest, bool) {
	if o == nil || IsNil(o.Slt) {
		return nil, false
	}
	return o.Slt, true
}

// HasSlt returns a boolean if a field has been set.
func (o *PolicyRest) HasSlt() bool {
	if o != nil && !IsNil(o.Slt) {
		return true
	}

	return false
}

// SetSlt gets a reference to the given SltRest and assigns it to the Slt field.
func (o *PolicyRest) SetSlt(v SltRest) {
	o.Slt = &v
}

// GetEndtime returns the Endtime field value if set, zero value otherwise.
func (o *PolicyRest) GetEndtime() string {
	if o == nil || IsNil(o.Endtime) {
		var ret string
		return ret
	}
	return *o.Endtime
}

// GetEndtimeOk returns a tuple with the Endtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetEndtimeOk() (*string, bool) {
	if o == nil || IsNil(o.Endtime) {
		return nil, false
	}
	return o.Endtime, true
}

// HasEndtime returns a boolean if a field has been set.
func (o *PolicyRest) HasEndtime() bool {
	if o != nil && !IsNil(o.Endtime) {
		return true
	}

	return false
}

// SetEndtime gets a reference to the given string and assigns it to the Endtime field.
func (o *PolicyRest) SetEndtime(v string) {
	o.Endtime = &v
}

// GetRpom returns the Rpom field value if set, zero value otherwise.
func (o *PolicyRest) GetRpom() string {
	if o == nil || IsNil(o.Rpom) {
		var ret string
		return ret
	}
	return *o.Rpom
}

// GetRpomOk returns a tuple with the Rpom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetRpomOk() (*string, bool) {
	if o == nil || IsNil(o.Rpom) {
		return nil, false
	}
	return o.Rpom, true
}

// HasRpom returns a boolean if a field has been set.
func (o *PolicyRest) HasRpom() bool {
	if o != nil && !IsNil(o.Rpom) {
		return true
	}

	return false
}

// SetRpom gets a reference to the given string and assigns it to the Rpom field.
func (o *PolicyRest) SetRpom(v string) {
	o.Rpom = &v
}

// GetRpo returns the Rpo field value if set, zero value otherwise.
func (o *PolicyRest) GetRpo() string {
	if o == nil || IsNil(o.Rpo) {
		var ret string
		return ret
	}
	return *o.Rpo
}

// GetRpoOk returns a tuple with the Rpo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetRpoOk() (*string, bool) {
	if o == nil || IsNil(o.Rpo) {
		return nil, false
	}
	return o.Rpo, true
}

// HasRpo returns a boolean if a field has been set.
func (o *PolicyRest) HasRpo() bool {
	if o != nil && !IsNil(o.Rpo) {
		return true
	}

	return false
}

// SetRpo gets a reference to the given string and assigns it to the Rpo field.
func (o *PolicyRest) SetRpo(v string) {
	o.Rpo = &v
}

// GetPredecessor returns the Predecessor field value if set, zero value otherwise.
func (o *PolicyRest) GetPredecessor() PolicyRest {
	if o == nil || IsNil(o.Predecessor) {
		var ret PolicyRest
		return ret
	}
	return *o.Predecessor
}

// GetPredecessorOk returns a tuple with the Predecessor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetPredecessorOk() (*PolicyRest, bool) {
	if o == nil || IsNil(o.Predecessor) {
		return nil, false
	}
	return o.Predecessor, true
}

// HasPredecessor returns a boolean if a field has been set.
func (o *PolicyRest) HasPredecessor() bool {
	if o != nil && !IsNil(o.Predecessor) {
		return true
	}

	return false
}

// SetPredecessor gets a reference to the given PolicyRest and assigns it to the Predecessor field.
func (o *PolicyRest) SetPredecessor(v PolicyRest) {
	o.Predecessor = &v
}

// GetExclusiontype returns the Exclusiontype field value if set, zero value otherwise.
func (o *PolicyRest) GetExclusiontype() string {
	if o == nil || IsNil(o.Exclusiontype) {
		var ret string
		return ret
	}
	return *o.Exclusiontype
}

// GetExclusiontypeOk returns a tuple with the Exclusiontype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetExclusiontypeOk() (*string, bool) {
	if o == nil || IsNil(o.Exclusiontype) {
		return nil, false
	}
	return o.Exclusiontype, true
}

// HasExclusiontype returns a boolean if a field has been set.
func (o *PolicyRest) HasExclusiontype() bool {
	if o != nil && !IsNil(o.Exclusiontype) {
		return true
	}

	return false
}

// SetExclusiontype gets a reference to the given string and assigns it to the Exclusiontype field.
func (o *PolicyRest) SetExclusiontype(v string) {
	o.Exclusiontype = &v
}

// GetIscontinuous returns the Iscontinuous field value if set, zero value otherwise.
func (o *PolicyRest) GetIscontinuous() bool {
	if o == nil || IsNil(o.Iscontinuous) {
		var ret bool
		return ret
	}
	return *o.Iscontinuous
}

// GetIscontinuousOk returns a tuple with the Iscontinuous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetIscontinuousOk() (*bool, bool) {
	if o == nil || IsNil(o.Iscontinuous) {
		return nil, false
	}
	return o.Iscontinuous, true
}

// HasIscontinuous returns a boolean if a field has been set.
func (o *PolicyRest) HasIscontinuous() bool {
	if o != nil && !IsNil(o.Iscontinuous) {
		return true
	}

	return false
}

// SetIscontinuous gets a reference to the given bool and assigns it to the Iscontinuous field.
func (o *PolicyRest) SetIscontinuous(v bool) {
	o.Iscontinuous = &v
}

// GetStarttime returns the Starttime field value if set, zero value otherwise.
func (o *PolicyRest) GetStarttime() string {
	if o == nil || IsNil(o.Starttime) {
		var ret string
		return ret
	}
	return *o.Starttime
}

// GetStarttimeOk returns a tuple with the Starttime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetStarttimeOk() (*string, bool) {
	if o == nil || IsNil(o.Starttime) {
		return nil, false
	}
	return o.Starttime, true
}

// HasStarttime returns a boolean if a field has been set.
func (o *PolicyRest) HasStarttime() bool {
	if o != nil && !IsNil(o.Starttime) {
		return true
	}

	return false
}

// SetStarttime gets a reference to the given string and assigns it to the Starttime field.
func (o *PolicyRest) SetStarttime(v string) {
	o.Starttime = &v
}

// GetTargetvault returns the Targetvault field value if set, zero value otherwise.
func (o *PolicyRest) GetTargetvault() int32 {
	if o == nil || IsNil(o.Targetvault) {
		var ret int32
		return ret
	}
	return *o.Targetvault
}

// GetTargetvaultOk returns a tuple with the Targetvault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetTargetvaultOk() (*int32, bool) {
	if o == nil || IsNil(o.Targetvault) {
		return nil, false
	}
	return o.Targetvault, true
}

// HasTargetvault returns a boolean if a field has been set.
func (o *PolicyRest) HasTargetvault() bool {
	if o != nil && !IsNil(o.Targetvault) {
		return true
	}

	return false
}

// SetTargetvault gets a reference to the given int32 and assigns it to the Targetvault field.
func (o *PolicyRest) SetTargetvault(v int32) {
	o.Targetvault = &v
}

// GetSourcevault returns the Sourcevault field value if set, zero value otherwise.
func (o *PolicyRest) GetSourcevault() int32 {
	if o == nil || IsNil(o.Sourcevault) {
		var ret int32
		return ret
	}
	return *o.Sourcevault
}

// GetSourcevaultOk returns a tuple with the Sourcevault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetSourcevaultOk() (*int32, bool) {
	if o == nil || IsNil(o.Sourcevault) {
		return nil, false
	}
	return o.Sourcevault, true
}

// HasSourcevault returns a boolean if a field has been set.
func (o *PolicyRest) HasSourcevault() bool {
	if o != nil && !IsNil(o.Sourcevault) {
		return true
	}

	return false
}

// SetSourcevault gets a reference to the given int32 and assigns it to the Sourcevault field.
func (o *PolicyRest) SetSourcevault(v int32) {
	o.Sourcevault = &v
}

// GetSelection returns the Selection field value if set, zero value otherwise.
func (o *PolicyRest) GetSelection() string {
	if o == nil || IsNil(o.Selection) {
		var ret string
		return ret
	}
	return *o.Selection
}

// GetSelectionOk returns a tuple with the Selection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetSelectionOk() (*string, bool) {
	if o == nil || IsNil(o.Selection) {
		return nil, false
	}
	return o.Selection, true
}

// HasSelection returns a boolean if a field has been set.
func (o *PolicyRest) HasSelection() bool {
	if o != nil && !IsNil(o.Selection) {
		return true
	}

	return false
}

// SetSelection gets a reference to the given string and assigns it to the Selection field.
func (o *PolicyRest) SetSelection(v string) {
	o.Selection = &v
}

// GetScheduletype returns the Scheduletype field value if set, zero value otherwise.
func (o *PolicyRest) GetScheduletype() string {
	if o == nil || IsNil(o.Scheduletype) {
		var ret string
		return ret
	}
	return *o.Scheduletype
}

// GetScheduletypeOk returns a tuple with the Scheduletype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetScheduletypeOk() (*string, bool) {
	if o == nil || IsNil(o.Scheduletype) {
		return nil, false
	}
	return o.Scheduletype, true
}

// HasScheduletype returns a boolean if a field has been set.
func (o *PolicyRest) HasScheduletype() bool {
	if o != nil && !IsNil(o.Scheduletype) {
		return true
	}

	return false
}

// SetScheduletype gets a reference to the given string and assigns it to the Scheduletype field.
func (o *PolicyRest) SetScheduletype(v string) {
	o.Scheduletype = &v
}

// GetExclusion returns the Exclusion field value if set, zero value otherwise.
func (o *PolicyRest) GetExclusion() string {
	if o == nil || IsNil(o.Exclusion) {
		var ret string
		return ret
	}
	return *o.Exclusion
}

// GetExclusionOk returns a tuple with the Exclusion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetExclusionOk() (*string, bool) {
	if o == nil || IsNil(o.Exclusion) {
		return nil, false
	}
	return o.Exclusion, true
}

// HasExclusion returns a boolean if a field has been set.
func (o *PolicyRest) HasExclusion() bool {
	if o != nil && !IsNil(o.Exclusion) {
		return true
	}

	return false
}

// SetExclusion gets a reference to the given string and assigns it to the Exclusion field.
func (o *PolicyRest) SetExclusion(v string) {
	o.Exclusion = &v
}

// GetReptype returns the Reptype field value if set, zero value otherwise.
func (o *PolicyRest) GetReptype() string {
	if o == nil || IsNil(o.Reptype) {
		var ret string
		return ret
	}
	return *o.Reptype
}

// GetReptypeOk returns a tuple with the Reptype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetReptypeOk() (*string, bool) {
	if o == nil || IsNil(o.Reptype) {
		return nil, false
	}
	return o.Reptype, true
}

// HasReptype returns a boolean if a field has been set.
func (o *PolicyRest) HasReptype() bool {
	if o != nil && !IsNil(o.Reptype) {
		return true
	}

	return false
}

// SetReptype gets a reference to the given string and assigns it to the Reptype field.
func (o *PolicyRest) SetReptype(v string) {
	o.Reptype = &v
}

// GetRetention returns the Retention field value if set, zero value otherwise.
func (o *PolicyRest) GetRetention() string {
	if o == nil || IsNil(o.Retention) {
		var ret string
		return ret
	}
	return *o.Retention
}

// GetRetentionOk returns a tuple with the Retention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetRetentionOk() (*string, bool) {
	if o == nil || IsNil(o.Retention) {
		return nil, false
	}
	return o.Retention, true
}

// HasRetention returns a boolean if a field has been set.
func (o *PolicyRest) HasRetention() bool {
	if o != nil && !IsNil(o.Retention) {
		return true
	}

	return false
}

// SetRetention gets a reference to the given string and assigns it to the Retention field.
func (o *PolicyRest) SetRetention(v string) {
	o.Retention = &v
}

// GetRetentionm returns the Retentionm field value if set, zero value otherwise.
func (o *PolicyRest) GetRetentionm() string {
	if o == nil || IsNil(o.Retentionm) {
		var ret string
		return ret
	}
	return *o.Retentionm
}

// GetRetentionmOk returns a tuple with the Retentionm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetRetentionmOk() (*string, bool) {
	if o == nil || IsNil(o.Retentionm) {
		return nil, false
	}
	return o.Retentionm, true
}

// HasRetentionm returns a boolean if a field has been set.
func (o *PolicyRest) HasRetentionm() bool {
	if o != nil && !IsNil(o.Retentionm) {
		return true
	}

	return false
}

// SetRetentionm gets a reference to the given string and assigns it to the Retentionm field.
func (o *PolicyRest) SetRetentionm(v string) {
	o.Retentionm = &v
}

// GetEncrypt returns the Encrypt field value if set, zero value otherwise.
func (o *PolicyRest) GetEncrypt() string {
	if o == nil || IsNil(o.Encrypt) {
		var ret string
		return ret
	}
	return *o.Encrypt
}

// GetEncryptOk returns a tuple with the Encrypt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetEncryptOk() (*string, bool) {
	if o == nil || IsNil(o.Encrypt) {
		return nil, false
	}
	return o.Encrypt, true
}

// HasEncrypt returns a boolean if a field has been set.
func (o *PolicyRest) HasEncrypt() bool {
	if o != nil && !IsNil(o.Encrypt) {
		return true
	}

	return false
}

// SetEncrypt gets a reference to the given string and assigns it to the Encrypt field.
func (o *PolicyRest) SetEncrypt(v string) {
	o.Encrypt = &v
}

// GetRepeatinterval returns the Repeatinterval field value if set, zero value otherwise.
func (o *PolicyRest) GetRepeatinterval() string {
	if o == nil || IsNil(o.Repeatinterval) {
		var ret string
		return ret
	}
	return *o.Repeatinterval
}

// GetRepeatintervalOk returns a tuple with the Repeatinterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetRepeatintervalOk() (*string, bool) {
	if o == nil || IsNil(o.Repeatinterval) {
		return nil, false
	}
	return o.Repeatinterval, true
}

// HasRepeatinterval returns a boolean if a field has been set.
func (o *PolicyRest) HasRepeatinterval() bool {
	if o != nil && !IsNil(o.Repeatinterval) {
		return true
	}

	return false
}

// SetRepeatinterval gets a reference to the given string and assigns it to the Repeatinterval field.
func (o *PolicyRest) SetRepeatinterval(v string) {
	o.Repeatinterval = &v
}

// GetExclusioninterval returns the Exclusioninterval field value if set, zero value otherwise.
func (o *PolicyRest) GetExclusioninterval() string {
	if o == nil || IsNil(o.Exclusioninterval) {
		var ret string
		return ret
	}
	return *o.Exclusioninterval
}

// GetExclusionintervalOk returns a tuple with the Exclusioninterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetExclusionintervalOk() (*string, bool) {
	if o == nil || IsNil(o.Exclusioninterval) {
		return nil, false
	}
	return o.Exclusioninterval, true
}

// HasExclusioninterval returns a boolean if a field has been set.
func (o *PolicyRest) HasExclusioninterval() bool {
	if o != nil && !IsNil(o.Exclusioninterval) {
		return true
	}

	return false
}

// SetExclusioninterval gets a reference to the given string and assigns it to the Exclusioninterval field.
func (o *PolicyRest) SetExclusioninterval(v string) {
	o.Exclusioninterval = &v
}

// GetRemoteretention returns the Remoteretention field value if set, zero value otherwise.
func (o *PolicyRest) GetRemoteretention() int32 {
	if o == nil || IsNil(o.Remoteretention) {
		var ret int32
		return ret
	}
	return *o.Remoteretention
}

// GetRemoteretentionOk returns a tuple with the Remoteretention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetRemoteretentionOk() (*int32, bool) {
	if o == nil || IsNil(o.Remoteretention) {
		return nil, false
	}
	return o.Remoteretention, true
}

// HasRemoteretention returns a boolean if a field has been set.
func (o *PolicyRest) HasRemoteretention() bool {
	if o != nil && !IsNil(o.Remoteretention) {
		return true
	}

	return false
}

// SetRemoteretention gets a reference to the given int32 and assigns it to the Remoteretention field.
func (o *PolicyRest) SetRemoteretention(v int32) {
	o.Remoteretention = &v
}

// GetCompliancesettings returns the Compliancesettings field value if set, zero value otherwise.
func (o *PolicyRest) GetCompliancesettings() ComplianceSettingsRest {
	if o == nil || IsNil(o.Compliancesettings) {
		var ret ComplianceSettingsRest
		return ret
	}
	return *o.Compliancesettings
}

// GetCompliancesettingsOk returns a tuple with the Compliancesettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetCompliancesettingsOk() (*ComplianceSettingsRest, bool) {
	if o == nil || IsNil(o.Compliancesettings) {
		return nil, false
	}
	return o.Compliancesettings, true
}

// HasCompliancesettings returns a boolean if a field has been set.
func (o *PolicyRest) HasCompliancesettings() bool {
	if o != nil && !IsNil(o.Compliancesettings) {
		return true
	}

	return false
}

// SetCompliancesettings gets a reference to the given ComplianceSettingsRest and assigns it to the Compliancesettings field.
func (o *PolicyRest) SetCompliancesettings(v ComplianceSettingsRest) {
	o.Compliancesettings = &v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *PolicyRest) GetOptions() []AdvancedOptionRest {
	if o == nil || IsNil(o.Options) {
		var ret []AdvancedOptionRest
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetOptionsOk() ([]AdvancedOptionRest, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *PolicyRest) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []AdvancedOptionRest and assigns it to the Options field.
func (o *PolicyRest) SetOptions(v []AdvancedOptionRest) {
	o.Options = v
}

// GetPolicyType returns the PolicyType field value if set, zero value otherwise.
func (o *PolicyRest) GetPolicyType() string {
	if o == nil || IsNil(o.PolicyType) {
		var ret string
		return ret
	}
	return *o.PolicyType
}

// GetPolicyTypeOk returns a tuple with the PolicyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetPolicyTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PolicyType) {
		return nil, false
	}
	return o.PolicyType, true
}

// HasPolicyType returns a boolean if a field has been set.
func (o *PolicyRest) HasPolicyType() bool {
	if o != nil && !IsNil(o.PolicyType) {
		return true
	}

	return false
}

// SetPolicyType gets a reference to the given string and assigns it to the PolicyType field.
func (o *PolicyRest) SetPolicyType(v string) {
	o.PolicyType = &v
}

// GetTruncatelog returns the Truncatelog field value if set, zero value otherwise.
func (o *PolicyRest) GetTruncatelog() string {
	if o == nil || IsNil(o.Truncatelog) {
		var ret string
		return ret
	}
	return *o.Truncatelog
}

// GetTruncatelogOk returns a tuple with the Truncatelog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetTruncatelogOk() (*string, bool) {
	if o == nil || IsNil(o.Truncatelog) {
		return nil, false
	}
	return o.Truncatelog, true
}

// HasTruncatelog returns a boolean if a field has been set.
func (o *PolicyRest) HasTruncatelog() bool {
	if o != nil && !IsNil(o.Truncatelog) {
		return true
	}

	return false
}

// SetTruncatelog gets a reference to the given string and assigns it to the Truncatelog field.
func (o *PolicyRest) SetTruncatelog(v string) {
	o.Truncatelog = &v
}

// GetVerifychoice returns the Verifychoice field value if set, zero value otherwise.
func (o *PolicyRest) GetVerifychoice() string {
	if o == nil || IsNil(o.Verifychoice) {
		var ret string
		return ret
	}
	return *o.Verifychoice
}

// GetVerifychoiceOk returns a tuple with the Verifychoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetVerifychoiceOk() (*string, bool) {
	if o == nil || IsNil(o.Verifychoice) {
		return nil, false
	}
	return o.Verifychoice, true
}

// HasVerifychoice returns a boolean if a field has been set.
func (o *PolicyRest) HasVerifychoice() bool {
	if o != nil && !IsNil(o.Verifychoice) {
		return true
	}

	return false
}

// SetVerifychoice gets a reference to the given string and assigns it to the Verifychoice field.
func (o *PolicyRest) SetVerifychoice(v string) {
	o.Verifychoice = &v
}

// GetOp returns the Op field value if set, zero value otherwise.
func (o *PolicyRest) GetOp() string {
	if o == nil || IsNil(o.Op) {
		var ret string
		return ret
	}
	return *o.Op
}

// GetOpOk returns a tuple with the Op field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetOpOk() (*string, bool) {
	if o == nil || IsNil(o.Op) {
		return nil, false
	}
	return o.Op, true
}

// HasOp returns a boolean if a field has been set.
func (o *PolicyRest) HasOp() bool {
	if o != nil && !IsNil(o.Op) {
		return true
	}

	return false
}

// SetOp gets a reference to the given string and assigns it to the Op field.
func (o *PolicyRest) SetOp(v string) {
	o.Op = &v
}

// GetVerification returns the Verification field value if set, zero value otherwise.
func (o *PolicyRest) GetVerification() bool {
	if o == nil || IsNil(o.Verification) {
		var ret bool
		return ret
	}
	return *o.Verification
}

// GetVerificationOk returns a tuple with the Verification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetVerificationOk() (*bool, bool) {
	if o == nil || IsNil(o.Verification) {
		return nil, false
	}
	return o.Verification, true
}

// HasVerification returns a boolean if a field has been set.
func (o *PolicyRest) HasVerification() bool {
	if o != nil && !IsNil(o.Verification) {
		return true
	}

	return false
}

// SetVerification gets a reference to the given bool and assigns it to the Verification field.
func (o *PolicyRest) SetVerification(v bool) {
	o.Verification = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PolicyRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PolicyRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PolicyRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *PolicyRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *PolicyRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *PolicyRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *PolicyRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *PolicyRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *PolicyRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *PolicyRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *PolicyRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *PolicyRest) SetStale(v bool) {
	o.Stale = &v
}

func (o PolicyRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !IsNil(o.Slt) {
		toSerialize["slt"] = o.Slt
	}
	if !IsNil(o.Endtime) {
		toSerialize["endtime"] = o.Endtime
	}
	if !IsNil(o.Rpom) {
		toSerialize["rpom"] = o.Rpom
	}
	if !IsNil(o.Rpo) {
		toSerialize["rpo"] = o.Rpo
	}
	if !IsNil(o.Predecessor) {
		toSerialize["predecessor"] = o.Predecessor
	}
	if !IsNil(o.Exclusiontype) {
		toSerialize["exclusiontype"] = o.Exclusiontype
	}
	if !IsNil(o.Iscontinuous) {
		toSerialize["iscontinuous"] = o.Iscontinuous
	}
	if !IsNil(o.Starttime) {
		toSerialize["starttime"] = o.Starttime
	}
	if !IsNil(o.Targetvault) {
		toSerialize["targetvault"] = o.Targetvault
	}
	if !IsNil(o.Sourcevault) {
		toSerialize["sourcevault"] = o.Sourcevault
	}
	if !IsNil(o.Selection) {
		toSerialize["selection"] = o.Selection
	}
	if !IsNil(o.Scheduletype) {
		toSerialize["scheduletype"] = o.Scheduletype
	}
	if !IsNil(o.Exclusion) {
		toSerialize["exclusion"] = o.Exclusion
	}
	if !IsNil(o.Reptype) {
		toSerialize["reptype"] = o.Reptype
	}
	if !IsNil(o.Retention) {
		toSerialize["retention"] = o.Retention
	}
	if !IsNil(o.Retentionm) {
		toSerialize["retentionm"] = o.Retentionm
	}
	if !IsNil(o.Encrypt) {
		toSerialize["encrypt"] = o.Encrypt
	}
	if !IsNil(o.Repeatinterval) {
		toSerialize["repeatinterval"] = o.Repeatinterval
	}
	if !IsNil(o.Exclusioninterval) {
		toSerialize["exclusioninterval"] = o.Exclusioninterval
	}
	if !IsNil(o.Remoteretention) {
		toSerialize["remoteretention"] = o.Remoteretention
	}
	if !IsNil(o.Compliancesettings) {
		toSerialize["compliancesettings"] = o.Compliancesettings
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	if !IsNil(o.PolicyType) {
		toSerialize["policyType"] = o.PolicyType
	}
	if !IsNil(o.Truncatelog) {
		toSerialize["truncatelog"] = o.Truncatelog
	}
	if !IsNil(o.Verifychoice) {
		toSerialize["verifychoice"] = o.Verifychoice
	}
	if !IsNil(o.Op) {
		toSerialize["op"] = o.Op
	}
	if !IsNil(o.Verification) {
		toSerialize["verification"] = o.Verification
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullablePolicyRest struct {
	value *PolicyRest
	isSet bool
}

func (v NullablePolicyRest) Get() *PolicyRest {
	return v.value
}

func (v *NullablePolicyRest) Set(val *PolicyRest) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyRest) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyRest(val *PolicyRest) *NullablePolicyRest {
	return &NullablePolicyRest{value: val, isSet: true}
}

func (v NullablePolicyRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


