/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CollectionRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CollectionRest{}

// CollectionRest struct for CollectionRest
type CollectionRest struct {
	Userlist []string `json:"userlist,omitempty"`
	Sltlist []string `json:"sltlist,omitempty"`
	Slplist []string `json:"slplist,omitempty"`
	Hostlist []string `json:"hostlist,omitempty"`
	Poollist []string `json:"poollist,omitempty"`
	Applist []string `json:"applist,omitempty"`
	Arraylist []string `json:"arraylist,omitempty"`
	Lglist []string `json:"lglist,omitempty"`
	Cloudcredentiallist []string `json:"cloudcredentiallist,omitempty"`
	Sltlistcount *int64 `json:"sltlistcount,omitempty"`
	Hostlistcount *int64 `json:"hostlistcount,omitempty"`
	Slplistcount *int64 `json:"slplistcount,omitempty"`
	Userlistcount *int64 `json:"userlistcount,omitempty"`
	Poollistcount *int64 `json:"poollistcount,omitempty"`
	Applistcount *int64 `json:"applistcount,omitempty"`
	Arraylistcount *int64 `json:"arraylistcount,omitempty"`
	Lglistcount *int64 `json:"lglistcount,omitempty"`
	Cloudcredentiallistcount *int64 `json:"cloudcredentiallistcount,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewCollectionRest instantiates a new CollectionRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCollectionRest() *CollectionRest {
	this := CollectionRest{}
	return &this
}

// NewCollectionRestWithDefaults instantiates a new CollectionRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCollectionRestWithDefaults() *CollectionRest {
	this := CollectionRest{}
	return &this
}

// GetUserlist returns the Userlist field value if set, zero value otherwise.
func (o *CollectionRest) GetUserlist() []string {
	if o == nil || IsNil(o.Userlist) {
		var ret []string
		return ret
	}
	return o.Userlist
}

// GetUserlistOk returns a tuple with the Userlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetUserlistOk() ([]string, bool) {
	if o == nil || IsNil(o.Userlist) {
		return nil, false
	}
	return o.Userlist, true
}

// HasUserlist returns a boolean if a field has been set.
func (o *CollectionRest) HasUserlist() bool {
	if o != nil && !IsNil(o.Userlist) {
		return true
	}

	return false
}

// SetUserlist gets a reference to the given []string and assigns it to the Userlist field.
func (o *CollectionRest) SetUserlist(v []string) {
	o.Userlist = v
}

// GetSltlist returns the Sltlist field value if set, zero value otherwise.
func (o *CollectionRest) GetSltlist() []string {
	if o == nil || IsNil(o.Sltlist) {
		var ret []string
		return ret
	}
	return o.Sltlist
}

// GetSltlistOk returns a tuple with the Sltlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetSltlistOk() ([]string, bool) {
	if o == nil || IsNil(o.Sltlist) {
		return nil, false
	}
	return o.Sltlist, true
}

// HasSltlist returns a boolean if a field has been set.
func (o *CollectionRest) HasSltlist() bool {
	if o != nil && !IsNil(o.Sltlist) {
		return true
	}

	return false
}

// SetSltlist gets a reference to the given []string and assigns it to the Sltlist field.
func (o *CollectionRest) SetSltlist(v []string) {
	o.Sltlist = v
}

// GetSlplist returns the Slplist field value if set, zero value otherwise.
func (o *CollectionRest) GetSlplist() []string {
	if o == nil || IsNil(o.Slplist) {
		var ret []string
		return ret
	}
	return o.Slplist
}

// GetSlplistOk returns a tuple with the Slplist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetSlplistOk() ([]string, bool) {
	if o == nil || IsNil(o.Slplist) {
		return nil, false
	}
	return o.Slplist, true
}

// HasSlplist returns a boolean if a field has been set.
func (o *CollectionRest) HasSlplist() bool {
	if o != nil && !IsNil(o.Slplist) {
		return true
	}

	return false
}

// SetSlplist gets a reference to the given []string and assigns it to the Slplist field.
func (o *CollectionRest) SetSlplist(v []string) {
	o.Slplist = v
}

// GetHostlist returns the Hostlist field value if set, zero value otherwise.
func (o *CollectionRest) GetHostlist() []string {
	if o == nil || IsNil(o.Hostlist) {
		var ret []string
		return ret
	}
	return o.Hostlist
}

// GetHostlistOk returns a tuple with the Hostlist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetHostlistOk() ([]string, bool) {
	if o == nil || IsNil(o.Hostlist) {
		return nil, false
	}
	return o.Hostlist, true
}

// HasHostlist returns a boolean if a field has been set.
func (o *CollectionRest) HasHostlist() bool {
	if o != nil && !IsNil(o.Hostlist) {
		return true
	}

	return false
}

// SetHostlist gets a reference to the given []string and assigns it to the Hostlist field.
func (o *CollectionRest) SetHostlist(v []string) {
	o.Hostlist = v
}

// GetPoollist returns the Poollist field value if set, zero value otherwise.
func (o *CollectionRest) GetPoollist() []string {
	if o == nil || IsNil(o.Poollist) {
		var ret []string
		return ret
	}
	return o.Poollist
}

// GetPoollistOk returns a tuple with the Poollist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetPoollistOk() ([]string, bool) {
	if o == nil || IsNil(o.Poollist) {
		return nil, false
	}
	return o.Poollist, true
}

// HasPoollist returns a boolean if a field has been set.
func (o *CollectionRest) HasPoollist() bool {
	if o != nil && !IsNil(o.Poollist) {
		return true
	}

	return false
}

// SetPoollist gets a reference to the given []string and assigns it to the Poollist field.
func (o *CollectionRest) SetPoollist(v []string) {
	o.Poollist = v
}

// GetApplist returns the Applist field value if set, zero value otherwise.
func (o *CollectionRest) GetApplist() []string {
	if o == nil || IsNil(o.Applist) {
		var ret []string
		return ret
	}
	return o.Applist
}

// GetApplistOk returns a tuple with the Applist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetApplistOk() ([]string, bool) {
	if o == nil || IsNil(o.Applist) {
		return nil, false
	}
	return o.Applist, true
}

// HasApplist returns a boolean if a field has been set.
func (o *CollectionRest) HasApplist() bool {
	if o != nil && !IsNil(o.Applist) {
		return true
	}

	return false
}

// SetApplist gets a reference to the given []string and assigns it to the Applist field.
func (o *CollectionRest) SetApplist(v []string) {
	o.Applist = v
}

// GetArraylist returns the Arraylist field value if set, zero value otherwise.
func (o *CollectionRest) GetArraylist() []string {
	if o == nil || IsNil(o.Arraylist) {
		var ret []string
		return ret
	}
	return o.Arraylist
}

// GetArraylistOk returns a tuple with the Arraylist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetArraylistOk() ([]string, bool) {
	if o == nil || IsNil(o.Arraylist) {
		return nil, false
	}
	return o.Arraylist, true
}

// HasArraylist returns a boolean if a field has been set.
func (o *CollectionRest) HasArraylist() bool {
	if o != nil && !IsNil(o.Arraylist) {
		return true
	}

	return false
}

// SetArraylist gets a reference to the given []string and assigns it to the Arraylist field.
func (o *CollectionRest) SetArraylist(v []string) {
	o.Arraylist = v
}

// GetLglist returns the Lglist field value if set, zero value otherwise.
func (o *CollectionRest) GetLglist() []string {
	if o == nil || IsNil(o.Lglist) {
		var ret []string
		return ret
	}
	return o.Lglist
}

// GetLglistOk returns a tuple with the Lglist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetLglistOk() ([]string, bool) {
	if o == nil || IsNil(o.Lglist) {
		return nil, false
	}
	return o.Lglist, true
}

// HasLglist returns a boolean if a field has been set.
func (o *CollectionRest) HasLglist() bool {
	if o != nil && !IsNil(o.Lglist) {
		return true
	}

	return false
}

// SetLglist gets a reference to the given []string and assigns it to the Lglist field.
func (o *CollectionRest) SetLglist(v []string) {
	o.Lglist = v
}

// GetCloudcredentiallist returns the Cloudcredentiallist field value if set, zero value otherwise.
func (o *CollectionRest) GetCloudcredentiallist() []string {
	if o == nil || IsNil(o.Cloudcredentiallist) {
		var ret []string
		return ret
	}
	return o.Cloudcredentiallist
}

// GetCloudcredentiallistOk returns a tuple with the Cloudcredentiallist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetCloudcredentiallistOk() ([]string, bool) {
	if o == nil || IsNil(o.Cloudcredentiallist) {
		return nil, false
	}
	return o.Cloudcredentiallist, true
}

// HasCloudcredentiallist returns a boolean if a field has been set.
func (o *CollectionRest) HasCloudcredentiallist() bool {
	if o != nil && !IsNil(o.Cloudcredentiallist) {
		return true
	}

	return false
}

// SetCloudcredentiallist gets a reference to the given []string and assigns it to the Cloudcredentiallist field.
func (o *CollectionRest) SetCloudcredentiallist(v []string) {
	o.Cloudcredentiallist = v
}

// GetSltlistcount returns the Sltlistcount field value if set, zero value otherwise.
func (o *CollectionRest) GetSltlistcount() int64 {
	if o == nil || IsNil(o.Sltlistcount) {
		var ret int64
		return ret
	}
	return *o.Sltlistcount
}

// GetSltlistcountOk returns a tuple with the Sltlistcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetSltlistcountOk() (*int64, bool) {
	if o == nil || IsNil(o.Sltlistcount) {
		return nil, false
	}
	return o.Sltlistcount, true
}

// HasSltlistcount returns a boolean if a field has been set.
func (o *CollectionRest) HasSltlistcount() bool {
	if o != nil && !IsNil(o.Sltlistcount) {
		return true
	}

	return false
}

// SetSltlistcount gets a reference to the given int64 and assigns it to the Sltlistcount field.
func (o *CollectionRest) SetSltlistcount(v int64) {
	o.Sltlistcount = &v
}

// GetHostlistcount returns the Hostlistcount field value if set, zero value otherwise.
func (o *CollectionRest) GetHostlistcount() int64 {
	if o == nil || IsNil(o.Hostlistcount) {
		var ret int64
		return ret
	}
	return *o.Hostlistcount
}

// GetHostlistcountOk returns a tuple with the Hostlistcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetHostlistcountOk() (*int64, bool) {
	if o == nil || IsNil(o.Hostlistcount) {
		return nil, false
	}
	return o.Hostlistcount, true
}

// HasHostlistcount returns a boolean if a field has been set.
func (o *CollectionRest) HasHostlistcount() bool {
	if o != nil && !IsNil(o.Hostlistcount) {
		return true
	}

	return false
}

// SetHostlistcount gets a reference to the given int64 and assigns it to the Hostlistcount field.
func (o *CollectionRest) SetHostlistcount(v int64) {
	o.Hostlistcount = &v
}

// GetSlplistcount returns the Slplistcount field value if set, zero value otherwise.
func (o *CollectionRest) GetSlplistcount() int64 {
	if o == nil || IsNil(o.Slplistcount) {
		var ret int64
		return ret
	}
	return *o.Slplistcount
}

// GetSlplistcountOk returns a tuple with the Slplistcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetSlplistcountOk() (*int64, bool) {
	if o == nil || IsNil(o.Slplistcount) {
		return nil, false
	}
	return o.Slplistcount, true
}

// HasSlplistcount returns a boolean if a field has been set.
func (o *CollectionRest) HasSlplistcount() bool {
	if o != nil && !IsNil(o.Slplistcount) {
		return true
	}

	return false
}

// SetSlplistcount gets a reference to the given int64 and assigns it to the Slplistcount field.
func (o *CollectionRest) SetSlplistcount(v int64) {
	o.Slplistcount = &v
}

// GetUserlistcount returns the Userlistcount field value if set, zero value otherwise.
func (o *CollectionRest) GetUserlistcount() int64 {
	if o == nil || IsNil(o.Userlistcount) {
		var ret int64
		return ret
	}
	return *o.Userlistcount
}

// GetUserlistcountOk returns a tuple with the Userlistcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetUserlistcountOk() (*int64, bool) {
	if o == nil || IsNil(o.Userlistcount) {
		return nil, false
	}
	return o.Userlistcount, true
}

// HasUserlistcount returns a boolean if a field has been set.
func (o *CollectionRest) HasUserlistcount() bool {
	if o != nil && !IsNil(o.Userlistcount) {
		return true
	}

	return false
}

// SetUserlistcount gets a reference to the given int64 and assigns it to the Userlistcount field.
func (o *CollectionRest) SetUserlistcount(v int64) {
	o.Userlistcount = &v
}

// GetPoollistcount returns the Poollistcount field value if set, zero value otherwise.
func (o *CollectionRest) GetPoollistcount() int64 {
	if o == nil || IsNil(o.Poollistcount) {
		var ret int64
		return ret
	}
	return *o.Poollistcount
}

// GetPoollistcountOk returns a tuple with the Poollistcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetPoollistcountOk() (*int64, bool) {
	if o == nil || IsNil(o.Poollistcount) {
		return nil, false
	}
	return o.Poollistcount, true
}

// HasPoollistcount returns a boolean if a field has been set.
func (o *CollectionRest) HasPoollistcount() bool {
	if o != nil && !IsNil(o.Poollistcount) {
		return true
	}

	return false
}

// SetPoollistcount gets a reference to the given int64 and assigns it to the Poollistcount field.
func (o *CollectionRest) SetPoollistcount(v int64) {
	o.Poollistcount = &v
}

// GetApplistcount returns the Applistcount field value if set, zero value otherwise.
func (o *CollectionRest) GetApplistcount() int64 {
	if o == nil || IsNil(o.Applistcount) {
		var ret int64
		return ret
	}
	return *o.Applistcount
}

// GetApplistcountOk returns a tuple with the Applistcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetApplistcountOk() (*int64, bool) {
	if o == nil || IsNil(o.Applistcount) {
		return nil, false
	}
	return o.Applistcount, true
}

// HasApplistcount returns a boolean if a field has been set.
func (o *CollectionRest) HasApplistcount() bool {
	if o != nil && !IsNil(o.Applistcount) {
		return true
	}

	return false
}

// SetApplistcount gets a reference to the given int64 and assigns it to the Applistcount field.
func (o *CollectionRest) SetApplistcount(v int64) {
	o.Applistcount = &v
}

// GetArraylistcount returns the Arraylistcount field value if set, zero value otherwise.
func (o *CollectionRest) GetArraylistcount() int64 {
	if o == nil || IsNil(o.Arraylistcount) {
		var ret int64
		return ret
	}
	return *o.Arraylistcount
}

// GetArraylistcountOk returns a tuple with the Arraylistcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetArraylistcountOk() (*int64, bool) {
	if o == nil || IsNil(o.Arraylistcount) {
		return nil, false
	}
	return o.Arraylistcount, true
}

// HasArraylistcount returns a boolean if a field has been set.
func (o *CollectionRest) HasArraylistcount() bool {
	if o != nil && !IsNil(o.Arraylistcount) {
		return true
	}

	return false
}

// SetArraylistcount gets a reference to the given int64 and assigns it to the Arraylistcount field.
func (o *CollectionRest) SetArraylistcount(v int64) {
	o.Arraylistcount = &v
}

// GetLglistcount returns the Lglistcount field value if set, zero value otherwise.
func (o *CollectionRest) GetLglistcount() int64 {
	if o == nil || IsNil(o.Lglistcount) {
		var ret int64
		return ret
	}
	return *o.Lglistcount
}

// GetLglistcountOk returns a tuple with the Lglistcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetLglistcountOk() (*int64, bool) {
	if o == nil || IsNil(o.Lglistcount) {
		return nil, false
	}
	return o.Lglistcount, true
}

// HasLglistcount returns a boolean if a field has been set.
func (o *CollectionRest) HasLglistcount() bool {
	if o != nil && !IsNil(o.Lglistcount) {
		return true
	}

	return false
}

// SetLglistcount gets a reference to the given int64 and assigns it to the Lglistcount field.
func (o *CollectionRest) SetLglistcount(v int64) {
	o.Lglistcount = &v
}

// GetCloudcredentiallistcount returns the Cloudcredentiallistcount field value if set, zero value otherwise.
func (o *CollectionRest) GetCloudcredentiallistcount() int64 {
	if o == nil || IsNil(o.Cloudcredentiallistcount) {
		var ret int64
		return ret
	}
	return *o.Cloudcredentiallistcount
}

// GetCloudcredentiallistcountOk returns a tuple with the Cloudcredentiallistcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetCloudcredentiallistcountOk() (*int64, bool) {
	if o == nil || IsNil(o.Cloudcredentiallistcount) {
		return nil, false
	}
	return o.Cloudcredentiallistcount, true
}

// HasCloudcredentiallistcount returns a boolean if a field has been set.
func (o *CollectionRest) HasCloudcredentiallistcount() bool {
	if o != nil && !IsNil(o.Cloudcredentiallistcount) {
		return true
	}

	return false
}

// SetCloudcredentiallistcount gets a reference to the given int64 and assigns it to the Cloudcredentiallistcount field.
func (o *CollectionRest) SetCloudcredentiallistcount(v int64) {
	o.Cloudcredentiallistcount = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CollectionRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CollectionRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CollectionRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *CollectionRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *CollectionRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *CollectionRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *CollectionRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *CollectionRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *CollectionRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *CollectionRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CollectionRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *CollectionRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *CollectionRest) SetStale(v bool) {
	o.Stale = &v
}

func (o CollectionRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CollectionRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Userlist) {
		toSerialize["userlist"] = o.Userlist
	}
	if !IsNil(o.Sltlist) {
		toSerialize["sltlist"] = o.Sltlist
	}
	if !IsNil(o.Slplist) {
		toSerialize["slplist"] = o.Slplist
	}
	if !IsNil(o.Hostlist) {
		toSerialize["hostlist"] = o.Hostlist
	}
	if !IsNil(o.Poollist) {
		toSerialize["poollist"] = o.Poollist
	}
	if !IsNil(o.Applist) {
		toSerialize["applist"] = o.Applist
	}
	if !IsNil(o.Arraylist) {
		toSerialize["arraylist"] = o.Arraylist
	}
	if !IsNil(o.Lglist) {
		toSerialize["lglist"] = o.Lglist
	}
	if !IsNil(o.Cloudcredentiallist) {
		toSerialize["cloudcredentiallist"] = o.Cloudcredentiallist
	}
	if !IsNil(o.Sltlistcount) {
		toSerialize["sltlistcount"] = o.Sltlistcount
	}
	if !IsNil(o.Hostlistcount) {
		toSerialize["hostlistcount"] = o.Hostlistcount
	}
	if !IsNil(o.Slplistcount) {
		toSerialize["slplistcount"] = o.Slplistcount
	}
	if !IsNil(o.Userlistcount) {
		toSerialize["userlistcount"] = o.Userlistcount
	}
	if !IsNil(o.Poollistcount) {
		toSerialize["poollistcount"] = o.Poollistcount
	}
	if !IsNil(o.Applistcount) {
		toSerialize["applistcount"] = o.Applistcount
	}
	if !IsNil(o.Arraylistcount) {
		toSerialize["arraylistcount"] = o.Arraylistcount
	}
	if !IsNil(o.Lglistcount) {
		toSerialize["lglistcount"] = o.Lglistcount
	}
	if !IsNil(o.Cloudcredentiallistcount) {
		toSerialize["cloudcredentiallistcount"] = o.Cloudcredentiallistcount
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableCollectionRest struct {
	value *CollectionRest
	isSet bool
}

func (v NullableCollectionRest) Get() *CollectionRest {
	return v.value
}

func (v *NullableCollectionRest) Set(val *CollectionRest) {
	v.value = val
	v.isSet = true
}

func (v NullableCollectionRest) IsSet() bool {
	return v.isSet
}

func (v *NullableCollectionRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCollectionRest(val *CollectionRest) *NullableCollectionRest {
	return &NullableCollectionRest{value: val, isSet: true}
}

func (v NullableCollectionRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCollectionRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


