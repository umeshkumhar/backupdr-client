/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateListRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateListRest{}

// UpdateListRest struct for UpdateListRest
type UpdateListRest struct {
	Scheduletime *int64 `json:"scheduletime,omitempty"`
	Updateids []int64 `json:"updateids,omitempty"`
}

// NewUpdateListRest instantiates a new UpdateListRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateListRest() *UpdateListRest {
	this := UpdateListRest{}
	return &this
}

// NewUpdateListRestWithDefaults instantiates a new UpdateListRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateListRestWithDefaults() *UpdateListRest {
	this := UpdateListRest{}
	return &this
}

// GetScheduletime returns the Scheduletime field value if set, zero value otherwise.
func (o *UpdateListRest) GetScheduletime() int64 {
	if o == nil || IsNil(o.Scheduletime) {
		var ret int64
		return ret
	}
	return *o.Scheduletime
}

// GetScheduletimeOk returns a tuple with the Scheduletime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateListRest) GetScheduletimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Scheduletime) {
		return nil, false
	}
	return o.Scheduletime, true
}

// HasScheduletime returns a boolean if a field has been set.
func (o *UpdateListRest) HasScheduletime() bool {
	if o != nil && !IsNil(o.Scheduletime) {
		return true
	}

	return false
}

// SetScheduletime gets a reference to the given int64 and assigns it to the Scheduletime field.
func (o *UpdateListRest) SetScheduletime(v int64) {
	o.Scheduletime = &v
}

// GetUpdateids returns the Updateids field value if set, zero value otherwise.
func (o *UpdateListRest) GetUpdateids() []int64 {
	if o == nil || IsNil(o.Updateids) {
		var ret []int64
		return ret
	}
	return o.Updateids
}

// GetUpdateidsOk returns a tuple with the Updateids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateListRest) GetUpdateidsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Updateids) {
		return nil, false
	}
	return o.Updateids, true
}

// HasUpdateids returns a boolean if a field has been set.
func (o *UpdateListRest) HasUpdateids() bool {
	if o != nil && !IsNil(o.Updateids) {
		return true
	}

	return false
}

// SetUpdateids gets a reference to the given []int64 and assigns it to the Updateids field.
func (o *UpdateListRest) SetUpdateids(v []int64) {
	o.Updateids = v
}

func (o UpdateListRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateListRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Scheduletime) {
		toSerialize["scheduletime"] = o.Scheduletime
	}
	if !IsNil(o.Updateids) {
		toSerialize["updateids"] = o.Updateids
	}
	return toSerialize, nil
}

type NullableUpdateListRest struct {
	value *UpdateListRest
	isSet bool
}

func (v NullableUpdateListRest) Get() *UpdateListRest {
	return v.value
}

func (v *NullableUpdateListRest) Set(val *UpdateListRest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateListRest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateListRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateListRest(val *UpdateListRest) *NullableUpdateListRest {
	return &NullableUpdateListRest{value: val, isSet: true}
}

func (v NullableUpdateListRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateListRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


