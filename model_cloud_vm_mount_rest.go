/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CloudVmMountRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudVmMountRest{}

// CloudVmMountRest struct for CloudVmMountRest
type CloudVmMountRest struct {
	Version *int32 `json:"version,omitempty"`
	Name *string `json:"name,omitempty"`
	Fields []FormFieldRest `json:"fields,omitempty"`
	Cloudtype *string `json:"cloudtype,omitempty"`
	Transaction *int32 `json:"transaction,omitempty"`
	Image *string `json:"image,omitempty"`
	Getformtype *string `json:"getformtype,omitempty"`
	Jobstatus *string `json:"jobstatus,omitempty"`
	MissingPermissions *MissingPermissionsRest `json:"missingPermissions,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewCloudVmMountRest instantiates a new CloudVmMountRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudVmMountRest() *CloudVmMountRest {
	this := CloudVmMountRest{}
	return &this
}

// NewCloudVmMountRestWithDefaults instantiates a new CloudVmMountRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudVmMountRestWithDefaults() *CloudVmMountRest {
	this := CloudVmMountRest{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetVersion() int32 {
	if o == nil || IsNil(o.Version) {
		var ret int32
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetVersionOk() (*int32, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given int32 and assigns it to the Version field.
func (o *CloudVmMountRest) SetVersion(v int32) {
	o.Version = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CloudVmMountRest) SetName(v string) {
	o.Name = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetFields() []FormFieldRest {
	if o == nil || IsNil(o.Fields) {
		var ret []FormFieldRest
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetFieldsOk() ([]FormFieldRest, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []FormFieldRest and assigns it to the Fields field.
func (o *CloudVmMountRest) SetFields(v []FormFieldRest) {
	o.Fields = v
}

// GetCloudtype returns the Cloudtype field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetCloudtype() string {
	if o == nil || IsNil(o.Cloudtype) {
		var ret string
		return ret
	}
	return *o.Cloudtype
}

// GetCloudtypeOk returns a tuple with the Cloudtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetCloudtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Cloudtype) {
		return nil, false
	}
	return o.Cloudtype, true
}

// HasCloudtype returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasCloudtype() bool {
	if o != nil && !IsNil(o.Cloudtype) {
		return true
	}

	return false
}

// SetCloudtype gets a reference to the given string and assigns it to the Cloudtype field.
func (o *CloudVmMountRest) SetCloudtype(v string) {
	o.Cloudtype = &v
}

// GetTransaction returns the Transaction field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetTransaction() int32 {
	if o == nil || IsNil(o.Transaction) {
		var ret int32
		return ret
	}
	return *o.Transaction
}

// GetTransactionOk returns a tuple with the Transaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetTransactionOk() (*int32, bool) {
	if o == nil || IsNil(o.Transaction) {
		return nil, false
	}
	return o.Transaction, true
}

// HasTransaction returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasTransaction() bool {
	if o != nil && !IsNil(o.Transaction) {
		return true
	}

	return false
}

// SetTransaction gets a reference to the given int32 and assigns it to the Transaction field.
func (o *CloudVmMountRest) SetTransaction(v int32) {
	o.Transaction = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetImage() string {
	if o == nil || IsNil(o.Image) {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetImageOk() (*string, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *CloudVmMountRest) SetImage(v string) {
	o.Image = &v
}

// GetGetformtype returns the Getformtype field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetGetformtype() string {
	if o == nil || IsNil(o.Getformtype) {
		var ret string
		return ret
	}
	return *o.Getformtype
}

// GetGetformtypeOk returns a tuple with the Getformtype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetGetformtypeOk() (*string, bool) {
	if o == nil || IsNil(o.Getformtype) {
		return nil, false
	}
	return o.Getformtype, true
}

// HasGetformtype returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasGetformtype() bool {
	if o != nil && !IsNil(o.Getformtype) {
		return true
	}

	return false
}

// SetGetformtype gets a reference to the given string and assigns it to the Getformtype field.
func (o *CloudVmMountRest) SetGetformtype(v string) {
	o.Getformtype = &v
}

// GetJobstatus returns the Jobstatus field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetJobstatus() string {
	if o == nil || IsNil(o.Jobstatus) {
		var ret string
		return ret
	}
	return *o.Jobstatus
}

// GetJobstatusOk returns a tuple with the Jobstatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetJobstatusOk() (*string, bool) {
	if o == nil || IsNil(o.Jobstatus) {
		return nil, false
	}
	return o.Jobstatus, true
}

// HasJobstatus returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasJobstatus() bool {
	if o != nil && !IsNil(o.Jobstatus) {
		return true
	}

	return false
}

// SetJobstatus gets a reference to the given string and assigns it to the Jobstatus field.
func (o *CloudVmMountRest) SetJobstatus(v string) {
	o.Jobstatus = &v
}

// GetMissingPermissions returns the MissingPermissions field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetMissingPermissions() MissingPermissionsRest {
	if o == nil || IsNil(o.MissingPermissions) {
		var ret MissingPermissionsRest
		return ret
	}
	return *o.MissingPermissions
}

// GetMissingPermissionsOk returns a tuple with the MissingPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetMissingPermissionsOk() (*MissingPermissionsRest, bool) {
	if o == nil || IsNil(o.MissingPermissions) {
		return nil, false
	}
	return o.MissingPermissions, true
}

// HasMissingPermissions returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasMissingPermissions() bool {
	if o != nil && !IsNil(o.MissingPermissions) {
		return true
	}

	return false
}

// SetMissingPermissions gets a reference to the given MissingPermissionsRest and assigns it to the MissingPermissions field.
func (o *CloudVmMountRest) SetMissingPermissions(v MissingPermissionsRest) {
	o.MissingPermissions = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CloudVmMountRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *CloudVmMountRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *CloudVmMountRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *CloudVmMountRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudVmMountRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *CloudVmMountRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *CloudVmMountRest) SetStale(v bool) {
	o.Stale = &v
}

func (o CloudVmMountRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudVmMountRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	if !IsNil(o.Cloudtype) {
		toSerialize["cloudtype"] = o.Cloudtype
	}
	if !IsNil(o.Transaction) {
		toSerialize["transaction"] = o.Transaction
	}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !IsNil(o.Getformtype) {
		toSerialize["getformtype"] = o.Getformtype
	}
	if !IsNil(o.Jobstatus) {
		toSerialize["jobstatus"] = o.Jobstatus
	}
	if !IsNil(o.MissingPermissions) {
		toSerialize["missingPermissions"] = o.MissingPermissions
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableCloudVmMountRest struct {
	value *CloudVmMountRest
	isSet bool
}

func (v NullableCloudVmMountRest) Get() *CloudVmMountRest {
	return v.value
}

func (v *NullableCloudVmMountRest) Set(val *CloudVmMountRest) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudVmMountRest) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudVmMountRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudVmMountRest(val *CloudVmMountRest) *NullableCloudVmMountRest {
	return &NullableCloudVmMountRest{value: val, isSet: true}
}

func (v NullableCloudVmMountRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudVmMountRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


