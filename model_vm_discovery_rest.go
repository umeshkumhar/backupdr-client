/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VmDiscoveryRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VmDiscoveryRest{}

// VmDiscoveryRest struct for VmDiscoveryRest
type VmDiscoveryRest struct {
	Cluster *string `json:"cluster,omitempty"`
	Addvms *bool `json:"addvms,omitempty"`
	VcenterHostId *string `json:"vcenterHostId,omitempty"`
	Esxcluster *string `json:"esxcluster,omitempty"`
	Addall *bool `json:"addall,omitempty"`
	Vms []string `json:"vms,omitempty"`
	Dc *string `json:"dc,omitempty"`
	Discoverclusters *bool `json:"discoverclusters,omitempty"`
	Discovervms *bool `json:"discovervms,omitempty"`
	Org *string `json:"org,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewVmDiscoveryRest instantiates a new VmDiscoveryRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVmDiscoveryRest() *VmDiscoveryRest {
	this := VmDiscoveryRest{}
	return &this
}

// NewVmDiscoveryRestWithDefaults instantiates a new VmDiscoveryRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVmDiscoveryRestWithDefaults() *VmDiscoveryRest {
	this := VmDiscoveryRest{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetCluster() string {
	if o == nil || IsNil(o.Cluster) {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetClusterOk() (*string, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *VmDiscoveryRest) SetCluster(v string) {
	o.Cluster = &v
}

// GetAddvms returns the Addvms field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetAddvms() bool {
	if o == nil || IsNil(o.Addvms) {
		var ret bool
		return ret
	}
	return *o.Addvms
}

// GetAddvmsOk returns a tuple with the Addvms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetAddvmsOk() (*bool, bool) {
	if o == nil || IsNil(o.Addvms) {
		return nil, false
	}
	return o.Addvms, true
}

// HasAddvms returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasAddvms() bool {
	if o != nil && !IsNil(o.Addvms) {
		return true
	}

	return false
}

// SetAddvms gets a reference to the given bool and assigns it to the Addvms field.
func (o *VmDiscoveryRest) SetAddvms(v bool) {
	o.Addvms = &v
}

// GetVcenterHostId returns the VcenterHostId field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetVcenterHostId() string {
	if o == nil || IsNil(o.VcenterHostId) {
		var ret string
		return ret
	}
	return *o.VcenterHostId
}

// GetVcenterHostIdOk returns a tuple with the VcenterHostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetVcenterHostIdOk() (*string, bool) {
	if o == nil || IsNil(o.VcenterHostId) {
		return nil, false
	}
	return o.VcenterHostId, true
}

// HasVcenterHostId returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasVcenterHostId() bool {
	if o != nil && !IsNil(o.VcenterHostId) {
		return true
	}

	return false
}

// SetVcenterHostId gets a reference to the given string and assigns it to the VcenterHostId field.
func (o *VmDiscoveryRest) SetVcenterHostId(v string) {
	o.VcenterHostId = &v
}

// GetEsxcluster returns the Esxcluster field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetEsxcluster() string {
	if o == nil || IsNil(o.Esxcluster) {
		var ret string
		return ret
	}
	return *o.Esxcluster
}

// GetEsxclusterOk returns a tuple with the Esxcluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetEsxclusterOk() (*string, bool) {
	if o == nil || IsNil(o.Esxcluster) {
		return nil, false
	}
	return o.Esxcluster, true
}

// HasEsxcluster returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasEsxcluster() bool {
	if o != nil && !IsNil(o.Esxcluster) {
		return true
	}

	return false
}

// SetEsxcluster gets a reference to the given string and assigns it to the Esxcluster field.
func (o *VmDiscoveryRest) SetEsxcluster(v string) {
	o.Esxcluster = &v
}

// GetAddall returns the Addall field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetAddall() bool {
	if o == nil || IsNil(o.Addall) {
		var ret bool
		return ret
	}
	return *o.Addall
}

// GetAddallOk returns a tuple with the Addall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetAddallOk() (*bool, bool) {
	if o == nil || IsNil(o.Addall) {
		return nil, false
	}
	return o.Addall, true
}

// HasAddall returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasAddall() bool {
	if o != nil && !IsNil(o.Addall) {
		return true
	}

	return false
}

// SetAddall gets a reference to the given bool and assigns it to the Addall field.
func (o *VmDiscoveryRest) SetAddall(v bool) {
	o.Addall = &v
}

// GetVms returns the Vms field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetVms() []string {
	if o == nil || IsNil(o.Vms) {
		var ret []string
		return ret
	}
	return o.Vms
}

// GetVmsOk returns a tuple with the Vms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetVmsOk() ([]string, bool) {
	if o == nil || IsNil(o.Vms) {
		return nil, false
	}
	return o.Vms, true
}

// HasVms returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasVms() bool {
	if o != nil && !IsNil(o.Vms) {
		return true
	}

	return false
}

// SetVms gets a reference to the given []string and assigns it to the Vms field.
func (o *VmDiscoveryRest) SetVms(v []string) {
	o.Vms = v
}

// GetDc returns the Dc field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetDc() string {
	if o == nil || IsNil(o.Dc) {
		var ret string
		return ret
	}
	return *o.Dc
}

// GetDcOk returns a tuple with the Dc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetDcOk() (*string, bool) {
	if o == nil || IsNil(o.Dc) {
		return nil, false
	}
	return o.Dc, true
}

// HasDc returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasDc() bool {
	if o != nil && !IsNil(o.Dc) {
		return true
	}

	return false
}

// SetDc gets a reference to the given string and assigns it to the Dc field.
func (o *VmDiscoveryRest) SetDc(v string) {
	o.Dc = &v
}

// GetDiscoverclusters returns the Discoverclusters field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetDiscoverclusters() bool {
	if o == nil || IsNil(o.Discoverclusters) {
		var ret bool
		return ret
	}
	return *o.Discoverclusters
}

// GetDiscoverclustersOk returns a tuple with the Discoverclusters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetDiscoverclustersOk() (*bool, bool) {
	if o == nil || IsNil(o.Discoverclusters) {
		return nil, false
	}
	return o.Discoverclusters, true
}

// HasDiscoverclusters returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasDiscoverclusters() bool {
	if o != nil && !IsNil(o.Discoverclusters) {
		return true
	}

	return false
}

// SetDiscoverclusters gets a reference to the given bool and assigns it to the Discoverclusters field.
func (o *VmDiscoveryRest) SetDiscoverclusters(v bool) {
	o.Discoverclusters = &v
}

// GetDiscovervms returns the Discovervms field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetDiscovervms() bool {
	if o == nil || IsNil(o.Discovervms) {
		var ret bool
		return ret
	}
	return *o.Discovervms
}

// GetDiscovervmsOk returns a tuple with the Discovervms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetDiscovervmsOk() (*bool, bool) {
	if o == nil || IsNil(o.Discovervms) {
		return nil, false
	}
	return o.Discovervms, true
}

// HasDiscovervms returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasDiscovervms() bool {
	if o != nil && !IsNil(o.Discovervms) {
		return true
	}

	return false
}

// SetDiscovervms gets a reference to the given bool and assigns it to the Discovervms field.
func (o *VmDiscoveryRest) SetDiscovervms(v bool) {
	o.Discovervms = &v
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetOrg() string {
	if o == nil || IsNil(o.Org) {
		var ret string
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetOrgOk() (*string, bool) {
	if o == nil || IsNil(o.Org) {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasOrg() bool {
	if o != nil && !IsNil(o.Org) {
		return true
	}

	return false
}

// SetOrg gets a reference to the given string and assigns it to the Org field.
func (o *VmDiscoveryRest) SetOrg(v string) {
	o.Org = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VmDiscoveryRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *VmDiscoveryRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *VmDiscoveryRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *VmDiscoveryRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VmDiscoveryRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *VmDiscoveryRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *VmDiscoveryRest) SetStale(v bool) {
	o.Stale = &v
}

func (o VmDiscoveryRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VmDiscoveryRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Addvms) {
		toSerialize["addvms"] = o.Addvms
	}
	if !IsNil(o.VcenterHostId) {
		toSerialize["vcenterHostId"] = o.VcenterHostId
	}
	if !IsNil(o.Esxcluster) {
		toSerialize["esxcluster"] = o.Esxcluster
	}
	if !IsNil(o.Addall) {
		toSerialize["addall"] = o.Addall
	}
	if !IsNil(o.Vms) {
		toSerialize["vms"] = o.Vms
	}
	if !IsNil(o.Dc) {
		toSerialize["dc"] = o.Dc
	}
	if !IsNil(o.Discoverclusters) {
		toSerialize["discoverclusters"] = o.Discoverclusters
	}
	if !IsNil(o.Discovervms) {
		toSerialize["discovervms"] = o.Discovervms
	}
	if !IsNil(o.Org) {
		toSerialize["org"] = o.Org
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableVmDiscoveryRest struct {
	value *VmDiscoveryRest
	isSet bool
}

func (v NullableVmDiscoveryRest) Get() *VmDiscoveryRest {
	return v.value
}

func (v *NullableVmDiscoveryRest) Set(val *VmDiscoveryRest) {
	v.value = val
	v.isSet = true
}

func (v NullableVmDiscoveryRest) IsSet() bool {
	return v.isSet
}

func (v *NullableVmDiscoveryRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVmDiscoveryRest(val *VmDiscoveryRest) *NullableVmDiscoveryRest {
	return &NullableVmDiscoveryRest{value: val, isSet: true}
}

func (v NullableVmDiscoveryRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVmDiscoveryRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


