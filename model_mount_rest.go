/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the MountRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MountRest{}

// MountRest struct for MountRest
type MountRest struct {
	Path *string `json:"path,omitempty"`
	Host *HostRest `json:"host,omitempty"`
	Label *string `json:"label,omitempty"`
	// Mutually exclusive with host, when mounting as a brand new host(VM)
	Hostname *string `json:"hostname,omitempty"`
	Container *bool `json:"container,omitempty"`
	Diskpool *DiskPoolRest `json:"diskpool,omitempty"`
	Cloudvmoptions *CloudVmMountRest `json:"cloudvmoptions,omitempty"`
	Rdmmode *string `json:"rdmmode,omitempty"`
	Rehydrationmode *string `json:"rehydrationmode,omitempty"`
	Appaware *bool `json:"appaware,omitempty"`
	Systemstateoptions []SystemStateOptionRest `json:"systemstateoptions,omitempty"`
	Migratevm *bool `json:"migratevm,omitempty"`
	Allowedips []string `json:"allowedips,omitempty"`
	// Mutually exclusive with diskpool
	Datastore *string `json:"datastore,omitempty"`
	// Can be used when log backup is available. Microseconds since Epoch in UTC
	Recoverytime *int64 `json:"recoverytime,omitempty"`
	Poweronvm *bool `json:"poweronvm,omitempty"`
	Scripts []ScriptRest `json:"scripts,omitempty"`
	// A customized mapping from the volumes to their mount points
	Restoreobjectmappings []RestoreObjectMappingRest `json:"restoreobjectmappings,omitempty"`
	Restoreoptions []RestoreOptionRest `json:"restoreoptions,omitempty"`
	// List of provisioning options when appaware is true
	Provisioningoptions []ProvisioningOptionRest `json:"provisioningoptions,omitempty"`
	// A subset of restorable objects to be mounted
	Selectedobjects []SelectedObjectRest `json:"selectedobjects,omitempty"`
	Nfsoptions *NfsOptionsRest `json:"nfsoptions,omitempty"`
	Instantmount *bool `json:"instantmount,omitempty"`
	Mgmtserver *HostRest `json:"mgmtserver,omitempty"`
	Hypervisor *HostRest `json:"hypervisor,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewMountRest instantiates a new MountRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMountRest() *MountRest {
	this := MountRest{}
	return &this
}

// NewMountRestWithDefaults instantiates a new MountRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMountRestWithDefaults() *MountRest {
	this := MountRest{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *MountRest) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *MountRest) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *MountRest) SetPath(v string) {
	o.Path = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *MountRest) GetHost() HostRest {
	if o == nil || IsNil(o.Host) {
		var ret HostRest
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetHostOk() (*HostRest, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *MountRest) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostRest and assigns it to the Host field.
func (o *MountRest) SetHost(v HostRest) {
	o.Host = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *MountRest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *MountRest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *MountRest) SetLabel(v string) {
	o.Label = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *MountRest) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *MountRest) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *MountRest) SetHostname(v string) {
	o.Hostname = &v
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *MountRest) GetContainer() bool {
	if o == nil || IsNil(o.Container) {
		var ret bool
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetContainerOk() (*bool, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *MountRest) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given bool and assigns it to the Container field.
func (o *MountRest) SetContainer(v bool) {
	o.Container = &v
}

// GetDiskpool returns the Diskpool field value if set, zero value otherwise.
func (o *MountRest) GetDiskpool() DiskPoolRest {
	if o == nil || IsNil(o.Diskpool) {
		var ret DiskPoolRest
		return ret
	}
	return *o.Diskpool
}

// GetDiskpoolOk returns a tuple with the Diskpool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetDiskpoolOk() (*DiskPoolRest, bool) {
	if o == nil || IsNil(o.Diskpool) {
		return nil, false
	}
	return o.Diskpool, true
}

// HasDiskpool returns a boolean if a field has been set.
func (o *MountRest) HasDiskpool() bool {
	if o != nil && !IsNil(o.Diskpool) {
		return true
	}

	return false
}

// SetDiskpool gets a reference to the given DiskPoolRest and assigns it to the Diskpool field.
func (o *MountRest) SetDiskpool(v DiskPoolRest) {
	o.Diskpool = &v
}

// GetCloudvmoptions returns the Cloudvmoptions field value if set, zero value otherwise.
func (o *MountRest) GetCloudvmoptions() CloudVmMountRest {
	if o == nil || IsNil(o.Cloudvmoptions) {
		var ret CloudVmMountRest
		return ret
	}
	return *o.Cloudvmoptions
}

// GetCloudvmoptionsOk returns a tuple with the Cloudvmoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetCloudvmoptionsOk() (*CloudVmMountRest, bool) {
	if o == nil || IsNil(o.Cloudvmoptions) {
		return nil, false
	}
	return o.Cloudvmoptions, true
}

// HasCloudvmoptions returns a boolean if a field has been set.
func (o *MountRest) HasCloudvmoptions() bool {
	if o != nil && !IsNil(o.Cloudvmoptions) {
		return true
	}

	return false
}

// SetCloudvmoptions gets a reference to the given CloudVmMountRest and assigns it to the Cloudvmoptions field.
func (o *MountRest) SetCloudvmoptions(v CloudVmMountRest) {
	o.Cloudvmoptions = &v
}

// GetRdmmode returns the Rdmmode field value if set, zero value otherwise.
func (o *MountRest) GetRdmmode() string {
	if o == nil || IsNil(o.Rdmmode) {
		var ret string
		return ret
	}
	return *o.Rdmmode
}

// GetRdmmodeOk returns a tuple with the Rdmmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetRdmmodeOk() (*string, bool) {
	if o == nil || IsNil(o.Rdmmode) {
		return nil, false
	}
	return o.Rdmmode, true
}

// HasRdmmode returns a boolean if a field has been set.
func (o *MountRest) HasRdmmode() bool {
	if o != nil && !IsNil(o.Rdmmode) {
		return true
	}

	return false
}

// SetRdmmode gets a reference to the given string and assigns it to the Rdmmode field.
func (o *MountRest) SetRdmmode(v string) {
	o.Rdmmode = &v
}

// GetRehydrationmode returns the Rehydrationmode field value if set, zero value otherwise.
func (o *MountRest) GetRehydrationmode() string {
	if o == nil || IsNil(o.Rehydrationmode) {
		var ret string
		return ret
	}
	return *o.Rehydrationmode
}

// GetRehydrationmodeOk returns a tuple with the Rehydrationmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetRehydrationmodeOk() (*string, bool) {
	if o == nil || IsNil(o.Rehydrationmode) {
		return nil, false
	}
	return o.Rehydrationmode, true
}

// HasRehydrationmode returns a boolean if a field has been set.
func (o *MountRest) HasRehydrationmode() bool {
	if o != nil && !IsNil(o.Rehydrationmode) {
		return true
	}

	return false
}

// SetRehydrationmode gets a reference to the given string and assigns it to the Rehydrationmode field.
func (o *MountRest) SetRehydrationmode(v string) {
	o.Rehydrationmode = &v
}

// GetAppaware returns the Appaware field value if set, zero value otherwise.
func (o *MountRest) GetAppaware() bool {
	if o == nil || IsNil(o.Appaware) {
		var ret bool
		return ret
	}
	return *o.Appaware
}

// GetAppawareOk returns a tuple with the Appaware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetAppawareOk() (*bool, bool) {
	if o == nil || IsNil(o.Appaware) {
		return nil, false
	}
	return o.Appaware, true
}

// HasAppaware returns a boolean if a field has been set.
func (o *MountRest) HasAppaware() bool {
	if o != nil && !IsNil(o.Appaware) {
		return true
	}

	return false
}

// SetAppaware gets a reference to the given bool and assigns it to the Appaware field.
func (o *MountRest) SetAppaware(v bool) {
	o.Appaware = &v
}

// GetSystemstateoptions returns the Systemstateoptions field value if set, zero value otherwise.
func (o *MountRest) GetSystemstateoptions() []SystemStateOptionRest {
	if o == nil || IsNil(o.Systemstateoptions) {
		var ret []SystemStateOptionRest
		return ret
	}
	return o.Systemstateoptions
}

// GetSystemstateoptionsOk returns a tuple with the Systemstateoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetSystemstateoptionsOk() ([]SystemStateOptionRest, bool) {
	if o == nil || IsNil(o.Systemstateoptions) {
		return nil, false
	}
	return o.Systemstateoptions, true
}

// HasSystemstateoptions returns a boolean if a field has been set.
func (o *MountRest) HasSystemstateoptions() bool {
	if o != nil && !IsNil(o.Systemstateoptions) {
		return true
	}

	return false
}

// SetSystemstateoptions gets a reference to the given []SystemStateOptionRest and assigns it to the Systemstateoptions field.
func (o *MountRest) SetSystemstateoptions(v []SystemStateOptionRest) {
	o.Systemstateoptions = v
}

// GetMigratevm returns the Migratevm field value if set, zero value otherwise.
func (o *MountRest) GetMigratevm() bool {
	if o == nil || IsNil(o.Migratevm) {
		var ret bool
		return ret
	}
	return *o.Migratevm
}

// GetMigratevmOk returns a tuple with the Migratevm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetMigratevmOk() (*bool, bool) {
	if o == nil || IsNil(o.Migratevm) {
		return nil, false
	}
	return o.Migratevm, true
}

// HasMigratevm returns a boolean if a field has been set.
func (o *MountRest) HasMigratevm() bool {
	if o != nil && !IsNil(o.Migratevm) {
		return true
	}

	return false
}

// SetMigratevm gets a reference to the given bool and assigns it to the Migratevm field.
func (o *MountRest) SetMigratevm(v bool) {
	o.Migratevm = &v
}

// GetAllowedips returns the Allowedips field value if set, zero value otherwise.
func (o *MountRest) GetAllowedips() []string {
	if o == nil || IsNil(o.Allowedips) {
		var ret []string
		return ret
	}
	return o.Allowedips
}

// GetAllowedipsOk returns a tuple with the Allowedips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetAllowedipsOk() ([]string, bool) {
	if o == nil || IsNil(o.Allowedips) {
		return nil, false
	}
	return o.Allowedips, true
}

// HasAllowedips returns a boolean if a field has been set.
func (o *MountRest) HasAllowedips() bool {
	if o != nil && !IsNil(o.Allowedips) {
		return true
	}

	return false
}

// SetAllowedips gets a reference to the given []string and assigns it to the Allowedips field.
func (o *MountRest) SetAllowedips(v []string) {
	o.Allowedips = v
}

// GetDatastore returns the Datastore field value if set, zero value otherwise.
func (o *MountRest) GetDatastore() string {
	if o == nil || IsNil(o.Datastore) {
		var ret string
		return ret
	}
	return *o.Datastore
}

// GetDatastoreOk returns a tuple with the Datastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetDatastoreOk() (*string, bool) {
	if o == nil || IsNil(o.Datastore) {
		return nil, false
	}
	return o.Datastore, true
}

// HasDatastore returns a boolean if a field has been set.
func (o *MountRest) HasDatastore() bool {
	if o != nil && !IsNil(o.Datastore) {
		return true
	}

	return false
}

// SetDatastore gets a reference to the given string and assigns it to the Datastore field.
func (o *MountRest) SetDatastore(v string) {
	o.Datastore = &v
}

// GetRecoverytime returns the Recoverytime field value if set, zero value otherwise.
func (o *MountRest) GetRecoverytime() int64 {
	if o == nil || IsNil(o.Recoverytime) {
		var ret int64
		return ret
	}
	return *o.Recoverytime
}

// GetRecoverytimeOk returns a tuple with the Recoverytime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetRecoverytimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Recoverytime) {
		return nil, false
	}
	return o.Recoverytime, true
}

// HasRecoverytime returns a boolean if a field has been set.
func (o *MountRest) HasRecoverytime() bool {
	if o != nil && !IsNil(o.Recoverytime) {
		return true
	}

	return false
}

// SetRecoverytime gets a reference to the given int64 and assigns it to the Recoverytime field.
func (o *MountRest) SetRecoverytime(v int64) {
	o.Recoverytime = &v
}

// GetPoweronvm returns the Poweronvm field value if set, zero value otherwise.
func (o *MountRest) GetPoweronvm() bool {
	if o == nil || IsNil(o.Poweronvm) {
		var ret bool
		return ret
	}
	return *o.Poweronvm
}

// GetPoweronvmOk returns a tuple with the Poweronvm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetPoweronvmOk() (*bool, bool) {
	if o == nil || IsNil(o.Poweronvm) {
		return nil, false
	}
	return o.Poweronvm, true
}

// HasPoweronvm returns a boolean if a field has been set.
func (o *MountRest) HasPoweronvm() bool {
	if o != nil && !IsNil(o.Poweronvm) {
		return true
	}

	return false
}

// SetPoweronvm gets a reference to the given bool and assigns it to the Poweronvm field.
func (o *MountRest) SetPoweronvm(v bool) {
	o.Poweronvm = &v
}

// GetScripts returns the Scripts field value if set, zero value otherwise.
func (o *MountRest) GetScripts() []ScriptRest {
	if o == nil || IsNil(o.Scripts) {
		var ret []ScriptRest
		return ret
	}
	return o.Scripts
}

// GetScriptsOk returns a tuple with the Scripts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetScriptsOk() ([]ScriptRest, bool) {
	if o == nil || IsNil(o.Scripts) {
		return nil, false
	}
	return o.Scripts, true
}

// HasScripts returns a boolean if a field has been set.
func (o *MountRest) HasScripts() bool {
	if o != nil && !IsNil(o.Scripts) {
		return true
	}

	return false
}

// SetScripts gets a reference to the given []ScriptRest and assigns it to the Scripts field.
func (o *MountRest) SetScripts(v []ScriptRest) {
	o.Scripts = v
}

// GetRestoreobjectmappings returns the Restoreobjectmappings field value if set, zero value otherwise.
func (o *MountRest) GetRestoreobjectmappings() []RestoreObjectMappingRest {
	if o == nil || IsNil(o.Restoreobjectmappings) {
		var ret []RestoreObjectMappingRest
		return ret
	}
	return o.Restoreobjectmappings
}

// GetRestoreobjectmappingsOk returns a tuple with the Restoreobjectmappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetRestoreobjectmappingsOk() ([]RestoreObjectMappingRest, bool) {
	if o == nil || IsNil(o.Restoreobjectmappings) {
		return nil, false
	}
	return o.Restoreobjectmappings, true
}

// HasRestoreobjectmappings returns a boolean if a field has been set.
func (o *MountRest) HasRestoreobjectmappings() bool {
	if o != nil && !IsNil(o.Restoreobjectmappings) {
		return true
	}

	return false
}

// SetRestoreobjectmappings gets a reference to the given []RestoreObjectMappingRest and assigns it to the Restoreobjectmappings field.
func (o *MountRest) SetRestoreobjectmappings(v []RestoreObjectMappingRest) {
	o.Restoreobjectmappings = v
}

// GetRestoreoptions returns the Restoreoptions field value if set, zero value otherwise.
func (o *MountRest) GetRestoreoptions() []RestoreOptionRest {
	if o == nil || IsNil(o.Restoreoptions) {
		var ret []RestoreOptionRest
		return ret
	}
	return o.Restoreoptions
}

// GetRestoreoptionsOk returns a tuple with the Restoreoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetRestoreoptionsOk() ([]RestoreOptionRest, bool) {
	if o == nil || IsNil(o.Restoreoptions) {
		return nil, false
	}
	return o.Restoreoptions, true
}

// HasRestoreoptions returns a boolean if a field has been set.
func (o *MountRest) HasRestoreoptions() bool {
	if o != nil && !IsNil(o.Restoreoptions) {
		return true
	}

	return false
}

// SetRestoreoptions gets a reference to the given []RestoreOptionRest and assigns it to the Restoreoptions field.
func (o *MountRest) SetRestoreoptions(v []RestoreOptionRest) {
	o.Restoreoptions = v
}

// GetProvisioningoptions returns the Provisioningoptions field value if set, zero value otherwise.
func (o *MountRest) GetProvisioningoptions() []ProvisioningOptionRest {
	if o == nil || IsNil(o.Provisioningoptions) {
		var ret []ProvisioningOptionRest
		return ret
	}
	return o.Provisioningoptions
}

// GetProvisioningoptionsOk returns a tuple with the Provisioningoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetProvisioningoptionsOk() ([]ProvisioningOptionRest, bool) {
	if o == nil || IsNil(o.Provisioningoptions) {
		return nil, false
	}
	return o.Provisioningoptions, true
}

// HasProvisioningoptions returns a boolean if a field has been set.
func (o *MountRest) HasProvisioningoptions() bool {
	if o != nil && !IsNil(o.Provisioningoptions) {
		return true
	}

	return false
}

// SetProvisioningoptions gets a reference to the given []ProvisioningOptionRest and assigns it to the Provisioningoptions field.
func (o *MountRest) SetProvisioningoptions(v []ProvisioningOptionRest) {
	o.Provisioningoptions = v
}

// GetSelectedobjects returns the Selectedobjects field value if set, zero value otherwise.
func (o *MountRest) GetSelectedobjects() []SelectedObjectRest {
	if o == nil || IsNil(o.Selectedobjects) {
		var ret []SelectedObjectRest
		return ret
	}
	return o.Selectedobjects
}

// GetSelectedobjectsOk returns a tuple with the Selectedobjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetSelectedobjectsOk() ([]SelectedObjectRest, bool) {
	if o == nil || IsNil(o.Selectedobjects) {
		return nil, false
	}
	return o.Selectedobjects, true
}

// HasSelectedobjects returns a boolean if a field has been set.
func (o *MountRest) HasSelectedobjects() bool {
	if o != nil && !IsNil(o.Selectedobjects) {
		return true
	}

	return false
}

// SetSelectedobjects gets a reference to the given []SelectedObjectRest and assigns it to the Selectedobjects field.
func (o *MountRest) SetSelectedobjects(v []SelectedObjectRest) {
	o.Selectedobjects = v
}

// GetNfsoptions returns the Nfsoptions field value if set, zero value otherwise.
func (o *MountRest) GetNfsoptions() NfsOptionsRest {
	if o == nil || IsNil(o.Nfsoptions) {
		var ret NfsOptionsRest
		return ret
	}
	return *o.Nfsoptions
}

// GetNfsoptionsOk returns a tuple with the Nfsoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetNfsoptionsOk() (*NfsOptionsRest, bool) {
	if o == nil || IsNil(o.Nfsoptions) {
		return nil, false
	}
	return o.Nfsoptions, true
}

// HasNfsoptions returns a boolean if a field has been set.
func (o *MountRest) HasNfsoptions() bool {
	if o != nil && !IsNil(o.Nfsoptions) {
		return true
	}

	return false
}

// SetNfsoptions gets a reference to the given NfsOptionsRest and assigns it to the Nfsoptions field.
func (o *MountRest) SetNfsoptions(v NfsOptionsRest) {
	o.Nfsoptions = &v
}

// GetInstantmount returns the Instantmount field value if set, zero value otherwise.
func (o *MountRest) GetInstantmount() bool {
	if o == nil || IsNil(o.Instantmount) {
		var ret bool
		return ret
	}
	return *o.Instantmount
}

// GetInstantmountOk returns a tuple with the Instantmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetInstantmountOk() (*bool, bool) {
	if o == nil || IsNil(o.Instantmount) {
		return nil, false
	}
	return o.Instantmount, true
}

// HasInstantmount returns a boolean if a field has been set.
func (o *MountRest) HasInstantmount() bool {
	if o != nil && !IsNil(o.Instantmount) {
		return true
	}

	return false
}

// SetInstantmount gets a reference to the given bool and assigns it to the Instantmount field.
func (o *MountRest) SetInstantmount(v bool) {
	o.Instantmount = &v
}

// GetMgmtserver returns the Mgmtserver field value if set, zero value otherwise.
func (o *MountRest) GetMgmtserver() HostRest {
	if o == nil || IsNil(o.Mgmtserver) {
		var ret HostRest
		return ret
	}
	return *o.Mgmtserver
}

// GetMgmtserverOk returns a tuple with the Mgmtserver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetMgmtserverOk() (*HostRest, bool) {
	if o == nil || IsNil(o.Mgmtserver) {
		return nil, false
	}
	return o.Mgmtserver, true
}

// HasMgmtserver returns a boolean if a field has been set.
func (o *MountRest) HasMgmtserver() bool {
	if o != nil && !IsNil(o.Mgmtserver) {
		return true
	}

	return false
}

// SetMgmtserver gets a reference to the given HostRest and assigns it to the Mgmtserver field.
func (o *MountRest) SetMgmtserver(v HostRest) {
	o.Mgmtserver = &v
}

// GetHypervisor returns the Hypervisor field value if set, zero value otherwise.
func (o *MountRest) GetHypervisor() HostRest {
	if o == nil || IsNil(o.Hypervisor) {
		var ret HostRest
		return ret
	}
	return *o.Hypervisor
}

// GetHypervisorOk returns a tuple with the Hypervisor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetHypervisorOk() (*HostRest, bool) {
	if o == nil || IsNil(o.Hypervisor) {
		return nil, false
	}
	return o.Hypervisor, true
}

// HasHypervisor returns a boolean if a field has been set.
func (o *MountRest) HasHypervisor() bool {
	if o != nil && !IsNil(o.Hypervisor) {
		return true
	}

	return false
}

// SetHypervisor gets a reference to the given HostRest and assigns it to the Hypervisor field.
func (o *MountRest) SetHypervisor(v HostRest) {
	o.Hypervisor = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MountRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MountRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *MountRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *MountRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *MountRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *MountRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *MountRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *MountRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *MountRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *MountRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MountRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *MountRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *MountRest) SetStale(v bool) {
	o.Stale = &v
}

func (o MountRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MountRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Container) {
		toSerialize["container"] = o.Container
	}
	if !IsNil(o.Diskpool) {
		toSerialize["diskpool"] = o.Diskpool
	}
	if !IsNil(o.Cloudvmoptions) {
		toSerialize["cloudvmoptions"] = o.Cloudvmoptions
	}
	if !IsNil(o.Rdmmode) {
		toSerialize["rdmmode"] = o.Rdmmode
	}
	if !IsNil(o.Rehydrationmode) {
		toSerialize["rehydrationmode"] = o.Rehydrationmode
	}
	if !IsNil(o.Appaware) {
		toSerialize["appaware"] = o.Appaware
	}
	if !IsNil(o.Systemstateoptions) {
		toSerialize["systemstateoptions"] = o.Systemstateoptions
	}
	if !IsNil(o.Migratevm) {
		toSerialize["migratevm"] = o.Migratevm
	}
	if !IsNil(o.Allowedips) {
		toSerialize["allowedips"] = o.Allowedips
	}
	if !IsNil(o.Datastore) {
		toSerialize["datastore"] = o.Datastore
	}
	if !IsNil(o.Recoverytime) {
		toSerialize["recoverytime"] = o.Recoverytime
	}
	if !IsNil(o.Poweronvm) {
		toSerialize["poweronvm"] = o.Poweronvm
	}
	if !IsNil(o.Scripts) {
		toSerialize["scripts"] = o.Scripts
	}
	if !IsNil(o.Restoreobjectmappings) {
		toSerialize["restoreobjectmappings"] = o.Restoreobjectmappings
	}
	if !IsNil(o.Restoreoptions) {
		toSerialize["restoreoptions"] = o.Restoreoptions
	}
	if !IsNil(o.Provisioningoptions) {
		toSerialize["provisioningoptions"] = o.Provisioningoptions
	}
	if !IsNil(o.Selectedobjects) {
		toSerialize["selectedobjects"] = o.Selectedobjects
	}
	if !IsNil(o.Nfsoptions) {
		toSerialize["nfsoptions"] = o.Nfsoptions
	}
	if !IsNil(o.Instantmount) {
		toSerialize["instantmount"] = o.Instantmount
	}
	if !IsNil(o.Mgmtserver) {
		toSerialize["mgmtserver"] = o.Mgmtserver
	}
	if !IsNil(o.Hypervisor) {
		toSerialize["hypervisor"] = o.Hypervisor
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableMountRest struct {
	value *MountRest
	isSet bool
}

func (v NullableMountRest) Get() *MountRest {
	return v.value
}

func (v *NullableMountRest) Set(val *MountRest) {
	v.value = val
	v.isSet = true
}

func (v NullableMountRest) IsSet() bool {
	return v.isSet
}

func (v *NullableMountRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMountRest(val *MountRest) *NullableMountRest {
	return &NullableMountRest{value: val, isSet: true}
}

func (v NullableMountRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMountRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


