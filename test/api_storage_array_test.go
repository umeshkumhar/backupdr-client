/*
Backup and DR Service: Management Console API Spec

Testing StorageArrayAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	openapiclient "github.com/umeshkumhar/backupdr-client"
)

func Test_openapi_StorageArrayAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test StorageArrayAPIService CountArrays", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.StorageArrayAPI.CountArrays(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageArrayAPIService CreateArray", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.StorageArrayAPI.CreateArray(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageArrayAPIService CredentialTest", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.StorageArrayAPI.CredentialTest(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageArrayAPIService DeleteArray", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var arrayId string

		httpRes, err := apiClient.StorageArrayAPI.DeleteArray(context.Background(), arrayId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageArrayAPIService GetArray", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var arrayId string

		resp, httpRes, err := apiClient.StorageArrayAPI.GetArray(context.Background(), arrayId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageArrayAPIService GetArrayTypes", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.StorageArrayAPI.GetArrayTypes(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageArrayAPIService ListArrays", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.StorageArrayAPI.ListArrays(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageArrayAPIService OptionsForList3", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.StorageArrayAPI.OptionsForList3(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageArrayAPIService TestArray", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var arrayId string

		resp, httpRes, err := apiClient.StorageArrayAPI.TestArray(context.Background(), arrayId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageArrayAPIService UpdateArray", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var arrayId string

		resp, httpRes, err := apiClient.StorageArrayAPI.UpdateArray(context.Background(), arrayId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
