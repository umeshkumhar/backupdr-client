/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateInformationRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInformationRest{}

// UpdateInformationRest struct for UpdateInformationRest
type UpdateInformationRest struct {
	Rebootrequired *bool `json:"rebootrequired,omitempty"`
	Componentname *string `json:"componentname,omitempty"`
	Updateid *string `json:"updateid,omitempty"`
	Readmelink *string `json:"readmelink,omitempty"`
	Expectedduration *int64 `json:"expectedduration,omitempty"`
	Releasedate *int64 `json:"releasedate,omitempty"`
	Duedate *int64 `json:"duedate,omitempty"`
}

// NewUpdateInformationRest instantiates a new UpdateInformationRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInformationRest() *UpdateInformationRest {
	this := UpdateInformationRest{}
	return &this
}

// NewUpdateInformationRestWithDefaults instantiates a new UpdateInformationRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInformationRestWithDefaults() *UpdateInformationRest {
	this := UpdateInformationRest{}
	return &this
}

// GetRebootrequired returns the Rebootrequired field value if set, zero value otherwise.
func (o *UpdateInformationRest) GetRebootrequired() bool {
	if o == nil || IsNil(o.Rebootrequired) {
		var ret bool
		return ret
	}
	return *o.Rebootrequired
}

// GetRebootrequiredOk returns a tuple with the Rebootrequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInformationRest) GetRebootrequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.Rebootrequired) {
		return nil, false
	}
	return o.Rebootrequired, true
}

// HasRebootrequired returns a boolean if a field has been set.
func (o *UpdateInformationRest) HasRebootrequired() bool {
	if o != nil && !IsNil(o.Rebootrequired) {
		return true
	}

	return false
}

// SetRebootrequired gets a reference to the given bool and assigns it to the Rebootrequired field.
func (o *UpdateInformationRest) SetRebootrequired(v bool) {
	o.Rebootrequired = &v
}

// GetComponentname returns the Componentname field value if set, zero value otherwise.
func (o *UpdateInformationRest) GetComponentname() string {
	if o == nil || IsNil(o.Componentname) {
		var ret string
		return ret
	}
	return *o.Componentname
}

// GetComponentnameOk returns a tuple with the Componentname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInformationRest) GetComponentnameOk() (*string, bool) {
	if o == nil || IsNil(o.Componentname) {
		return nil, false
	}
	return o.Componentname, true
}

// HasComponentname returns a boolean if a field has been set.
func (o *UpdateInformationRest) HasComponentname() bool {
	if o != nil && !IsNil(o.Componentname) {
		return true
	}

	return false
}

// SetComponentname gets a reference to the given string and assigns it to the Componentname field.
func (o *UpdateInformationRest) SetComponentname(v string) {
	o.Componentname = &v
}

// GetUpdateid returns the Updateid field value if set, zero value otherwise.
func (o *UpdateInformationRest) GetUpdateid() string {
	if o == nil || IsNil(o.Updateid) {
		var ret string
		return ret
	}
	return *o.Updateid
}

// GetUpdateidOk returns a tuple with the Updateid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInformationRest) GetUpdateidOk() (*string, bool) {
	if o == nil || IsNil(o.Updateid) {
		return nil, false
	}
	return o.Updateid, true
}

// HasUpdateid returns a boolean if a field has been set.
func (o *UpdateInformationRest) HasUpdateid() bool {
	if o != nil && !IsNil(o.Updateid) {
		return true
	}

	return false
}

// SetUpdateid gets a reference to the given string and assigns it to the Updateid field.
func (o *UpdateInformationRest) SetUpdateid(v string) {
	o.Updateid = &v
}

// GetReadmelink returns the Readmelink field value if set, zero value otherwise.
func (o *UpdateInformationRest) GetReadmelink() string {
	if o == nil || IsNil(o.Readmelink) {
		var ret string
		return ret
	}
	return *o.Readmelink
}

// GetReadmelinkOk returns a tuple with the Readmelink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInformationRest) GetReadmelinkOk() (*string, bool) {
	if o == nil || IsNil(o.Readmelink) {
		return nil, false
	}
	return o.Readmelink, true
}

// HasReadmelink returns a boolean if a field has been set.
func (o *UpdateInformationRest) HasReadmelink() bool {
	if o != nil && !IsNil(o.Readmelink) {
		return true
	}

	return false
}

// SetReadmelink gets a reference to the given string and assigns it to the Readmelink field.
func (o *UpdateInformationRest) SetReadmelink(v string) {
	o.Readmelink = &v
}

// GetExpectedduration returns the Expectedduration field value if set, zero value otherwise.
func (o *UpdateInformationRest) GetExpectedduration() int64 {
	if o == nil || IsNil(o.Expectedduration) {
		var ret int64
		return ret
	}
	return *o.Expectedduration
}

// GetExpecteddurationOk returns a tuple with the Expectedduration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInformationRest) GetExpecteddurationOk() (*int64, bool) {
	if o == nil || IsNil(o.Expectedduration) {
		return nil, false
	}
	return o.Expectedduration, true
}

// HasExpectedduration returns a boolean if a field has been set.
func (o *UpdateInformationRest) HasExpectedduration() bool {
	if o != nil && !IsNil(o.Expectedduration) {
		return true
	}

	return false
}

// SetExpectedduration gets a reference to the given int64 and assigns it to the Expectedduration field.
func (o *UpdateInformationRest) SetExpectedduration(v int64) {
	o.Expectedduration = &v
}

// GetReleasedate returns the Releasedate field value if set, zero value otherwise.
func (o *UpdateInformationRest) GetReleasedate() int64 {
	if o == nil || IsNil(o.Releasedate) {
		var ret int64
		return ret
	}
	return *o.Releasedate
}

// GetReleasedateOk returns a tuple with the Releasedate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInformationRest) GetReleasedateOk() (*int64, bool) {
	if o == nil || IsNil(o.Releasedate) {
		return nil, false
	}
	return o.Releasedate, true
}

// HasReleasedate returns a boolean if a field has been set.
func (o *UpdateInformationRest) HasReleasedate() bool {
	if o != nil && !IsNil(o.Releasedate) {
		return true
	}

	return false
}

// SetReleasedate gets a reference to the given int64 and assigns it to the Releasedate field.
func (o *UpdateInformationRest) SetReleasedate(v int64) {
	o.Releasedate = &v
}

// GetDuedate returns the Duedate field value if set, zero value otherwise.
func (o *UpdateInformationRest) GetDuedate() int64 {
	if o == nil || IsNil(o.Duedate) {
		var ret int64
		return ret
	}
	return *o.Duedate
}

// GetDuedateOk returns a tuple with the Duedate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInformationRest) GetDuedateOk() (*int64, bool) {
	if o == nil || IsNil(o.Duedate) {
		return nil, false
	}
	return o.Duedate, true
}

// HasDuedate returns a boolean if a field has been set.
func (o *UpdateInformationRest) HasDuedate() bool {
	if o != nil && !IsNil(o.Duedate) {
		return true
	}

	return false
}

// SetDuedate gets a reference to the given int64 and assigns it to the Duedate field.
func (o *UpdateInformationRest) SetDuedate(v int64) {
	o.Duedate = &v
}

func (o UpdateInformationRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInformationRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rebootrequired) {
		toSerialize["rebootrequired"] = o.Rebootrequired
	}
	if !IsNil(o.Componentname) {
		toSerialize["componentname"] = o.Componentname
	}
	if !IsNil(o.Updateid) {
		toSerialize["updateid"] = o.Updateid
	}
	if !IsNil(o.Readmelink) {
		toSerialize["readmelink"] = o.Readmelink
	}
	if !IsNil(o.Expectedduration) {
		toSerialize["expectedduration"] = o.Expectedduration
	}
	if !IsNil(o.Releasedate) {
		toSerialize["releasedate"] = o.Releasedate
	}
	if !IsNil(o.Duedate) {
		toSerialize["duedate"] = o.Duedate
	}
	return toSerialize, nil
}

type NullableUpdateInformationRest struct {
	value *UpdateInformationRest
	isSet bool
}

func (v NullableUpdateInformationRest) Get() *UpdateInformationRest {
	return v.value
}

func (v *NullableUpdateInformationRest) Set(val *UpdateInformationRest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInformationRest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInformationRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInformationRest(val *UpdateInformationRest) *NullableUpdateInformationRest {
	return &NullableUpdateInformationRest{value: val, isSet: true}
}

func (v NullableUpdateInformationRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInformationRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


