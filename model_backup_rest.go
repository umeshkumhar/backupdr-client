/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BackupRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackupRest{}

// BackupRest Backup Rest Object
type BackupRest struct {
	Mountmigrateflag *bool `json:"mountmigrateflag,omitempty"`
	Eligiblestoragetypes *string `json:"eligiblestoragetypes,omitempty"`
	Targetstoragetype *string `json:"targetstoragetype,omitempty"`
	Migrationstate *string `json:"migrationstate,omitempty"`
	Datafilemovestarted *bool `json:"datafilemovestarted,omitempty"`
	// source to target storage mapping
	Migratemapping *string `json:"migratemapping,omitempty"`
	Version *string `json:"version,omitempty"`
	Flags *string `json:"flags,omitempty"`
	Zone *string `json:"zone,omitempty"`
	Name *string `json:"name,omitempty"`
	Host *HostRest `json:"host,omitempty"`
	Expiration *int64 `json:"expiration,omitempty"`
	Label *string `json:"label,omitempty"`
	Application *ApplicationRest `json:"application,omitempty"`
	Jobclass *string `json:"jobclass,omitempty"`
	Srcid *string `json:"srcid,omitempty"`
	Clusterid *string `json:"clusterid,omitempty"`
	Appname *string `json:"appname,omitempty"`
	Modifydate *int64 `json:"modifydate,omitempty"`
	Isasm *bool `json:"isasm,omitempty"`
	Apptype *string `json:"apptype,omitempty"`
	Snapshottype *string `json:"snapshottype,omitempty"`
	Consumedsize *int64 `json:"consumedsize,omitempty"`
	Catalogstate *string `json:"catalogstate,omitempty"`
	Backupname *string `json:"backupname,omitempty"`
	Sourceuds *string `json:"sourceuds,omitempty"`
	Originatinguds *string `json:"originatinguds,omitempty"`
	Targetuds *string `json:"targetuds,omitempty"`
	Appclass *string `json:"appclass,omitempty"`
	Cluster *ClusterRest `json:"cluster,omitempty"`
	Diskpool *DiskPoolRest `json:"diskpool,omitempty"`
	Status *string `json:"status,omitempty"`
	Transport *string `json:"transport,omitempty"`
	Multiregion *string `json:"multiregion,omitempty"`
	Sensitivity *int32 `json:"sensitivity,omitempty"`
	Originalbackupid *string `json:"originalbackupid,omitempty"`
	Backupdate *int64 `json:"backupdate,omitempty"`
	Immutabilitydate *int64 `json:"immutabilitydate,omitempty"`
	Consistencydate *int64 `json:"consistencydate,omitempty"`
	Mappedhost *string `json:"mappedhost,omitempty"`
	Virtualsize *string `json:"virtualsize,omitempty"`
	Slpname *string `json:"slpname,omitempty"`
	Sltname *string `json:"sltname,omitempty"`
	Policyname *string `json:"policyname,omitempty"`
	Characteristic *string `json:"characteristic,omitempty"`
	Sourceimage *BackupRest `json:"sourceimage,omitempty"`
	Snapshotlocation *string `json:"snapshotlocation,omitempty"`
	Endpit *int64 `json:"endpit,omitempty"`
	Beginpit *int64 `json:"beginpit,omitempty"`
	Uniquehostname *string `json:"uniquehostname,omitempty"`
	Modifiedbytes *string `json:"modifiedbytes,omitempty"`
	Hasdependency *bool `json:"hasdependency,omitempty"`
	Vaultowner *bool `json:"vaultowner,omitempty"`
	Mountedhost []HostRest `json:"mountedhost,omitempty"`
	Jobclasscode *int32 `json:"jobclasscode,omitempty"`
	Cloudcredential *CloudCredentialRest `json:"cloudcredential,omitempty"`
	Releaselogs *bool `json:"releaselogs,omitempty"`
	Retainlogs *bool `json:"retainlogs,omitempty"`
	Sourcediskpool *DiskPoolRest `json:"sourcediskpool,omitempty"`
	Clonemigrateeligible *bool `json:"clonemigrateeligible,omitempty"`
	MigrateFrequency *int32 `json:"migrate-frequency,omitempty"`
	MigrateCopythreadcount *int32 `json:"migrate-copythreadcount,omitempty"`
	MigrateConfigured *bool `json:"migrate-configured,omitempty"`
	Yaml *string `json:"yaml,omitempty"`
	Yamlavailable *bool `json:"yamlavailable,omitempty"`
	Allowedips []string `json:"allowedips,omitempty"`
	Volgroupname *string `json:"volgroupname,omitempty"`
	Racnodelist []string `json:"racnodelist,omitempty"`
	Restorableobjects []RestorableRest `json:"restorableobjects,omitempty"`
	Powerfactor *int32 `json:"powerfactor,omitempty"`
	Provisioningoptions []KeyValueRest `json:"provisioningoptions,omitempty"`
	Vmname *string `json:"vmname,omitempty"`
	Copies []BackupRest `json:"copies,omitempty"`
	Hasmountedmap *bool `json:"hasmountedmap,omitempty"`
	Childapp *ApplicationRest `json:"childapp,omitempty"`
	Restorelock *string `json:"restorelock,omitempty"`
	Mountcapacity *int64 `json:"mountcapacity,omitempty"`
	Nvolumes *string `json:"nvolumes,omitempty"`
	Originalbackup *BackupRest `json:"originalbackup,omitempty"`
	Dnsname *string `json:"dnsname,omitempty"`
	Vmpath *string `json:"vmpath,omitempty"`
	Esxhost *string `json:"esxhost,omitempty"`
	Backuplock *string `json:"backuplock,omitempty"`
	Mountedmountpoint *string `json:"mountedmountpoint,omitempty"`
	Consistencymode *string `json:"consistencymode,omitempty"`
	Mountedvdisk *string `json:"mountedvdisk,omitempty"`
	Sourcemountpoint *string `json:"sourcemountpoint,omitempty"`
	FlagsText []string `json:"flags_text,omitempty"`
	Expirytries *string `json:"expirytries,omitempty"`
	Logsequences []LogSequenceRest `json:"logsequences,omitempty"`
	Hosttimezone *string `json:"hosttimezone,omitempty"`
	Hostisdst *bool `json:"hostisdst,omitempty"`
	Asmswitchcapable *bool `json:"asmswitchcapable,omitempty"`
	Incarnation *string `json:"incarnation,omitempty"`
	Hananodelist []string `json:"hananodelist,omitempty"`
	ApplicationAllocatedSize *int64 `json:"application_allocated_size,omitempty"`
	Exportvolume []ExportVolumeInfoRest `json:"exportvolume,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewBackupRest instantiates a new BackupRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackupRest() *BackupRest {
	this := BackupRest{}
	return &this
}

// NewBackupRestWithDefaults instantiates a new BackupRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackupRestWithDefaults() *BackupRest {
	this := BackupRest{}
	return &this
}

// GetMountmigrateflag returns the Mountmigrateflag field value if set, zero value otherwise.
func (o *BackupRest) GetMountmigrateflag() bool {
	if o == nil || IsNil(o.Mountmigrateflag) {
		var ret bool
		return ret
	}
	return *o.Mountmigrateflag
}

// GetMountmigrateflagOk returns a tuple with the Mountmigrateflag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetMountmigrateflagOk() (*bool, bool) {
	if o == nil || IsNil(o.Mountmigrateflag) {
		return nil, false
	}
	return o.Mountmigrateflag, true
}

// HasMountmigrateflag returns a boolean if a field has been set.
func (o *BackupRest) HasMountmigrateflag() bool {
	if o != nil && !IsNil(o.Mountmigrateflag) {
		return true
	}

	return false
}

// SetMountmigrateflag gets a reference to the given bool and assigns it to the Mountmigrateflag field.
func (o *BackupRest) SetMountmigrateflag(v bool) {
	o.Mountmigrateflag = &v
}

// GetEligiblestoragetypes returns the Eligiblestoragetypes field value if set, zero value otherwise.
func (o *BackupRest) GetEligiblestoragetypes() string {
	if o == nil || IsNil(o.Eligiblestoragetypes) {
		var ret string
		return ret
	}
	return *o.Eligiblestoragetypes
}

// GetEligiblestoragetypesOk returns a tuple with the Eligiblestoragetypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetEligiblestoragetypesOk() (*string, bool) {
	if o == nil || IsNil(o.Eligiblestoragetypes) {
		return nil, false
	}
	return o.Eligiblestoragetypes, true
}

// HasEligiblestoragetypes returns a boolean if a field has been set.
func (o *BackupRest) HasEligiblestoragetypes() bool {
	if o != nil && !IsNil(o.Eligiblestoragetypes) {
		return true
	}

	return false
}

// SetEligiblestoragetypes gets a reference to the given string and assigns it to the Eligiblestoragetypes field.
func (o *BackupRest) SetEligiblestoragetypes(v string) {
	o.Eligiblestoragetypes = &v
}

// GetTargetstoragetype returns the Targetstoragetype field value if set, zero value otherwise.
func (o *BackupRest) GetTargetstoragetype() string {
	if o == nil || IsNil(o.Targetstoragetype) {
		var ret string
		return ret
	}
	return *o.Targetstoragetype
}

// GetTargetstoragetypeOk returns a tuple with the Targetstoragetype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetTargetstoragetypeOk() (*string, bool) {
	if o == nil || IsNil(o.Targetstoragetype) {
		return nil, false
	}
	return o.Targetstoragetype, true
}

// HasTargetstoragetype returns a boolean if a field has been set.
func (o *BackupRest) HasTargetstoragetype() bool {
	if o != nil && !IsNil(o.Targetstoragetype) {
		return true
	}

	return false
}

// SetTargetstoragetype gets a reference to the given string and assigns it to the Targetstoragetype field.
func (o *BackupRest) SetTargetstoragetype(v string) {
	o.Targetstoragetype = &v
}

// GetMigrationstate returns the Migrationstate field value if set, zero value otherwise.
func (o *BackupRest) GetMigrationstate() string {
	if o == nil || IsNil(o.Migrationstate) {
		var ret string
		return ret
	}
	return *o.Migrationstate
}

// GetMigrationstateOk returns a tuple with the Migrationstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetMigrationstateOk() (*string, bool) {
	if o == nil || IsNil(o.Migrationstate) {
		return nil, false
	}
	return o.Migrationstate, true
}

// HasMigrationstate returns a boolean if a field has been set.
func (o *BackupRest) HasMigrationstate() bool {
	if o != nil && !IsNil(o.Migrationstate) {
		return true
	}

	return false
}

// SetMigrationstate gets a reference to the given string and assigns it to the Migrationstate field.
func (o *BackupRest) SetMigrationstate(v string) {
	o.Migrationstate = &v
}

// GetDatafilemovestarted returns the Datafilemovestarted field value if set, zero value otherwise.
func (o *BackupRest) GetDatafilemovestarted() bool {
	if o == nil || IsNil(o.Datafilemovestarted) {
		var ret bool
		return ret
	}
	return *o.Datafilemovestarted
}

// GetDatafilemovestartedOk returns a tuple with the Datafilemovestarted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetDatafilemovestartedOk() (*bool, bool) {
	if o == nil || IsNil(o.Datafilemovestarted) {
		return nil, false
	}
	return o.Datafilemovestarted, true
}

// HasDatafilemovestarted returns a boolean if a field has been set.
func (o *BackupRest) HasDatafilemovestarted() bool {
	if o != nil && !IsNil(o.Datafilemovestarted) {
		return true
	}

	return false
}

// SetDatafilemovestarted gets a reference to the given bool and assigns it to the Datafilemovestarted field.
func (o *BackupRest) SetDatafilemovestarted(v bool) {
	o.Datafilemovestarted = &v
}

// GetMigratemapping returns the Migratemapping field value if set, zero value otherwise.
func (o *BackupRest) GetMigratemapping() string {
	if o == nil || IsNil(o.Migratemapping) {
		var ret string
		return ret
	}
	return *o.Migratemapping
}

// GetMigratemappingOk returns a tuple with the Migratemapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetMigratemappingOk() (*string, bool) {
	if o == nil || IsNil(o.Migratemapping) {
		return nil, false
	}
	return o.Migratemapping, true
}

// HasMigratemapping returns a boolean if a field has been set.
func (o *BackupRest) HasMigratemapping() bool {
	if o != nil && !IsNil(o.Migratemapping) {
		return true
	}

	return false
}

// SetMigratemapping gets a reference to the given string and assigns it to the Migratemapping field.
func (o *BackupRest) SetMigratemapping(v string) {
	o.Migratemapping = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *BackupRest) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *BackupRest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *BackupRest) SetVersion(v string) {
	o.Version = &v
}

// GetFlags returns the Flags field value if set, zero value otherwise.
func (o *BackupRest) GetFlags() string {
	if o == nil || IsNil(o.Flags) {
		var ret string
		return ret
	}
	return *o.Flags
}

// GetFlagsOk returns a tuple with the Flags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetFlagsOk() (*string, bool) {
	if o == nil || IsNil(o.Flags) {
		return nil, false
	}
	return o.Flags, true
}

// HasFlags returns a boolean if a field has been set.
func (o *BackupRest) HasFlags() bool {
	if o != nil && !IsNil(o.Flags) {
		return true
	}

	return false
}

// SetFlags gets a reference to the given string and assigns it to the Flags field.
func (o *BackupRest) SetFlags(v string) {
	o.Flags = &v
}

// GetZone returns the Zone field value if set, zero value otherwise.
func (o *BackupRest) GetZone() string {
	if o == nil || IsNil(o.Zone) {
		var ret string
		return ret
	}
	return *o.Zone
}

// GetZoneOk returns a tuple with the Zone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetZoneOk() (*string, bool) {
	if o == nil || IsNil(o.Zone) {
		return nil, false
	}
	return o.Zone, true
}

// HasZone returns a boolean if a field has been set.
func (o *BackupRest) HasZone() bool {
	if o != nil && !IsNil(o.Zone) {
		return true
	}

	return false
}

// SetZone gets a reference to the given string and assigns it to the Zone field.
func (o *BackupRest) SetZone(v string) {
	o.Zone = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *BackupRest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *BackupRest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *BackupRest) SetName(v string) {
	o.Name = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *BackupRest) GetHost() HostRest {
	if o == nil || IsNil(o.Host) {
		var ret HostRest
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetHostOk() (*HostRest, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *BackupRest) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostRest and assigns it to the Host field.
func (o *BackupRest) SetHost(v HostRest) {
	o.Host = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *BackupRest) GetExpiration() int64 {
	if o == nil || IsNil(o.Expiration) {
		var ret int64
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetExpirationOk() (*int64, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *BackupRest) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given int64 and assigns it to the Expiration field.
func (o *BackupRest) SetExpiration(v int64) {
	o.Expiration = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *BackupRest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *BackupRest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *BackupRest) SetLabel(v string) {
	o.Label = &v
}

// GetApplication returns the Application field value if set, zero value otherwise.
func (o *BackupRest) GetApplication() ApplicationRest {
	if o == nil || IsNil(o.Application) {
		var ret ApplicationRest
		return ret
	}
	return *o.Application
}

// GetApplicationOk returns a tuple with the Application field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetApplicationOk() (*ApplicationRest, bool) {
	if o == nil || IsNil(o.Application) {
		return nil, false
	}
	return o.Application, true
}

// HasApplication returns a boolean if a field has been set.
func (o *BackupRest) HasApplication() bool {
	if o != nil && !IsNil(o.Application) {
		return true
	}

	return false
}

// SetApplication gets a reference to the given ApplicationRest and assigns it to the Application field.
func (o *BackupRest) SetApplication(v ApplicationRest) {
	o.Application = &v
}

// GetJobclass returns the Jobclass field value if set, zero value otherwise.
func (o *BackupRest) GetJobclass() string {
	if o == nil || IsNil(o.Jobclass) {
		var ret string
		return ret
	}
	return *o.Jobclass
}

// GetJobclassOk returns a tuple with the Jobclass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetJobclassOk() (*string, bool) {
	if o == nil || IsNil(o.Jobclass) {
		return nil, false
	}
	return o.Jobclass, true
}

// HasJobclass returns a boolean if a field has been set.
func (o *BackupRest) HasJobclass() bool {
	if o != nil && !IsNil(o.Jobclass) {
		return true
	}

	return false
}

// SetJobclass gets a reference to the given string and assigns it to the Jobclass field.
func (o *BackupRest) SetJobclass(v string) {
	o.Jobclass = &v
}

// GetSrcid returns the Srcid field value if set, zero value otherwise.
func (o *BackupRest) GetSrcid() string {
	if o == nil || IsNil(o.Srcid) {
		var ret string
		return ret
	}
	return *o.Srcid
}

// GetSrcidOk returns a tuple with the Srcid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetSrcidOk() (*string, bool) {
	if o == nil || IsNil(o.Srcid) {
		return nil, false
	}
	return o.Srcid, true
}

// HasSrcid returns a boolean if a field has been set.
func (o *BackupRest) HasSrcid() bool {
	if o != nil && !IsNil(o.Srcid) {
		return true
	}

	return false
}

// SetSrcid gets a reference to the given string and assigns it to the Srcid field.
func (o *BackupRest) SetSrcid(v string) {
	o.Srcid = &v
}

// GetClusterid returns the Clusterid field value if set, zero value otherwise.
func (o *BackupRest) GetClusterid() string {
	if o == nil || IsNil(o.Clusterid) {
		var ret string
		return ret
	}
	return *o.Clusterid
}

// GetClusteridOk returns a tuple with the Clusterid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetClusteridOk() (*string, bool) {
	if o == nil || IsNil(o.Clusterid) {
		return nil, false
	}
	return o.Clusterid, true
}

// HasClusterid returns a boolean if a field has been set.
func (o *BackupRest) HasClusterid() bool {
	if o != nil && !IsNil(o.Clusterid) {
		return true
	}

	return false
}

// SetClusterid gets a reference to the given string and assigns it to the Clusterid field.
func (o *BackupRest) SetClusterid(v string) {
	o.Clusterid = &v
}

// GetAppname returns the Appname field value if set, zero value otherwise.
func (o *BackupRest) GetAppname() string {
	if o == nil || IsNil(o.Appname) {
		var ret string
		return ret
	}
	return *o.Appname
}

// GetAppnameOk returns a tuple with the Appname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetAppnameOk() (*string, bool) {
	if o == nil || IsNil(o.Appname) {
		return nil, false
	}
	return o.Appname, true
}

// HasAppname returns a boolean if a field has been set.
func (o *BackupRest) HasAppname() bool {
	if o != nil && !IsNil(o.Appname) {
		return true
	}

	return false
}

// SetAppname gets a reference to the given string and assigns it to the Appname field.
func (o *BackupRest) SetAppname(v string) {
	o.Appname = &v
}

// GetModifydate returns the Modifydate field value if set, zero value otherwise.
func (o *BackupRest) GetModifydate() int64 {
	if o == nil || IsNil(o.Modifydate) {
		var ret int64
		return ret
	}
	return *o.Modifydate
}

// GetModifydateOk returns a tuple with the Modifydate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetModifydateOk() (*int64, bool) {
	if o == nil || IsNil(o.Modifydate) {
		return nil, false
	}
	return o.Modifydate, true
}

// HasModifydate returns a boolean if a field has been set.
func (o *BackupRest) HasModifydate() bool {
	if o != nil && !IsNil(o.Modifydate) {
		return true
	}

	return false
}

// SetModifydate gets a reference to the given int64 and assigns it to the Modifydate field.
func (o *BackupRest) SetModifydate(v int64) {
	o.Modifydate = &v
}

// GetIsasm returns the Isasm field value if set, zero value otherwise.
func (o *BackupRest) GetIsasm() bool {
	if o == nil || IsNil(o.Isasm) {
		var ret bool
		return ret
	}
	return *o.Isasm
}

// GetIsasmOk returns a tuple with the Isasm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetIsasmOk() (*bool, bool) {
	if o == nil || IsNil(o.Isasm) {
		return nil, false
	}
	return o.Isasm, true
}

// HasIsasm returns a boolean if a field has been set.
func (o *BackupRest) HasIsasm() bool {
	if o != nil && !IsNil(o.Isasm) {
		return true
	}

	return false
}

// SetIsasm gets a reference to the given bool and assigns it to the Isasm field.
func (o *BackupRest) SetIsasm(v bool) {
	o.Isasm = &v
}

// GetApptype returns the Apptype field value if set, zero value otherwise.
func (o *BackupRest) GetApptype() string {
	if o == nil || IsNil(o.Apptype) {
		var ret string
		return ret
	}
	return *o.Apptype
}

// GetApptypeOk returns a tuple with the Apptype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetApptypeOk() (*string, bool) {
	if o == nil || IsNil(o.Apptype) {
		return nil, false
	}
	return o.Apptype, true
}

// HasApptype returns a boolean if a field has been set.
func (o *BackupRest) HasApptype() bool {
	if o != nil && !IsNil(o.Apptype) {
		return true
	}

	return false
}

// SetApptype gets a reference to the given string and assigns it to the Apptype field.
func (o *BackupRest) SetApptype(v string) {
	o.Apptype = &v
}

// GetSnapshottype returns the Snapshottype field value if set, zero value otherwise.
func (o *BackupRest) GetSnapshottype() string {
	if o == nil || IsNil(o.Snapshottype) {
		var ret string
		return ret
	}
	return *o.Snapshottype
}

// GetSnapshottypeOk returns a tuple with the Snapshottype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetSnapshottypeOk() (*string, bool) {
	if o == nil || IsNil(o.Snapshottype) {
		return nil, false
	}
	return o.Snapshottype, true
}

// HasSnapshottype returns a boolean if a field has been set.
func (o *BackupRest) HasSnapshottype() bool {
	if o != nil && !IsNil(o.Snapshottype) {
		return true
	}

	return false
}

// SetSnapshottype gets a reference to the given string and assigns it to the Snapshottype field.
func (o *BackupRest) SetSnapshottype(v string) {
	o.Snapshottype = &v
}

// GetConsumedsize returns the Consumedsize field value if set, zero value otherwise.
func (o *BackupRest) GetConsumedsize() int64 {
	if o == nil || IsNil(o.Consumedsize) {
		var ret int64
		return ret
	}
	return *o.Consumedsize
}

// GetConsumedsizeOk returns a tuple with the Consumedsize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetConsumedsizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Consumedsize) {
		return nil, false
	}
	return o.Consumedsize, true
}

// HasConsumedsize returns a boolean if a field has been set.
func (o *BackupRest) HasConsumedsize() bool {
	if o != nil && !IsNil(o.Consumedsize) {
		return true
	}

	return false
}

// SetConsumedsize gets a reference to the given int64 and assigns it to the Consumedsize field.
func (o *BackupRest) SetConsumedsize(v int64) {
	o.Consumedsize = &v
}

// GetCatalogstate returns the Catalogstate field value if set, zero value otherwise.
func (o *BackupRest) GetCatalogstate() string {
	if o == nil || IsNil(o.Catalogstate) {
		var ret string
		return ret
	}
	return *o.Catalogstate
}

// GetCatalogstateOk returns a tuple with the Catalogstate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetCatalogstateOk() (*string, bool) {
	if o == nil || IsNil(o.Catalogstate) {
		return nil, false
	}
	return o.Catalogstate, true
}

// HasCatalogstate returns a boolean if a field has been set.
func (o *BackupRest) HasCatalogstate() bool {
	if o != nil && !IsNil(o.Catalogstate) {
		return true
	}

	return false
}

// SetCatalogstate gets a reference to the given string and assigns it to the Catalogstate field.
func (o *BackupRest) SetCatalogstate(v string) {
	o.Catalogstate = &v
}

// GetBackupname returns the Backupname field value if set, zero value otherwise.
func (o *BackupRest) GetBackupname() string {
	if o == nil || IsNil(o.Backupname) {
		var ret string
		return ret
	}
	return *o.Backupname
}

// GetBackupnameOk returns a tuple with the Backupname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetBackupnameOk() (*string, bool) {
	if o == nil || IsNil(o.Backupname) {
		return nil, false
	}
	return o.Backupname, true
}

// HasBackupname returns a boolean if a field has been set.
func (o *BackupRest) HasBackupname() bool {
	if o != nil && !IsNil(o.Backupname) {
		return true
	}

	return false
}

// SetBackupname gets a reference to the given string and assigns it to the Backupname field.
func (o *BackupRest) SetBackupname(v string) {
	o.Backupname = &v
}

// GetSourceuds returns the Sourceuds field value if set, zero value otherwise.
func (o *BackupRest) GetSourceuds() string {
	if o == nil || IsNil(o.Sourceuds) {
		var ret string
		return ret
	}
	return *o.Sourceuds
}

// GetSourceudsOk returns a tuple with the Sourceuds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetSourceudsOk() (*string, bool) {
	if o == nil || IsNil(o.Sourceuds) {
		return nil, false
	}
	return o.Sourceuds, true
}

// HasSourceuds returns a boolean if a field has been set.
func (o *BackupRest) HasSourceuds() bool {
	if o != nil && !IsNil(o.Sourceuds) {
		return true
	}

	return false
}

// SetSourceuds gets a reference to the given string and assigns it to the Sourceuds field.
func (o *BackupRest) SetSourceuds(v string) {
	o.Sourceuds = &v
}

// GetOriginatinguds returns the Originatinguds field value if set, zero value otherwise.
func (o *BackupRest) GetOriginatinguds() string {
	if o == nil || IsNil(o.Originatinguds) {
		var ret string
		return ret
	}
	return *o.Originatinguds
}

// GetOriginatingudsOk returns a tuple with the Originatinguds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetOriginatingudsOk() (*string, bool) {
	if o == nil || IsNil(o.Originatinguds) {
		return nil, false
	}
	return o.Originatinguds, true
}

// HasOriginatinguds returns a boolean if a field has been set.
func (o *BackupRest) HasOriginatinguds() bool {
	if o != nil && !IsNil(o.Originatinguds) {
		return true
	}

	return false
}

// SetOriginatinguds gets a reference to the given string and assigns it to the Originatinguds field.
func (o *BackupRest) SetOriginatinguds(v string) {
	o.Originatinguds = &v
}

// GetTargetuds returns the Targetuds field value if set, zero value otherwise.
func (o *BackupRest) GetTargetuds() string {
	if o == nil || IsNil(o.Targetuds) {
		var ret string
		return ret
	}
	return *o.Targetuds
}

// GetTargetudsOk returns a tuple with the Targetuds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetTargetudsOk() (*string, bool) {
	if o == nil || IsNil(o.Targetuds) {
		return nil, false
	}
	return o.Targetuds, true
}

// HasTargetuds returns a boolean if a field has been set.
func (o *BackupRest) HasTargetuds() bool {
	if o != nil && !IsNil(o.Targetuds) {
		return true
	}

	return false
}

// SetTargetuds gets a reference to the given string and assigns it to the Targetuds field.
func (o *BackupRest) SetTargetuds(v string) {
	o.Targetuds = &v
}

// GetAppclass returns the Appclass field value if set, zero value otherwise.
func (o *BackupRest) GetAppclass() string {
	if o == nil || IsNil(o.Appclass) {
		var ret string
		return ret
	}
	return *o.Appclass
}

// GetAppclassOk returns a tuple with the Appclass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetAppclassOk() (*string, bool) {
	if o == nil || IsNil(o.Appclass) {
		return nil, false
	}
	return o.Appclass, true
}

// HasAppclass returns a boolean if a field has been set.
func (o *BackupRest) HasAppclass() bool {
	if o != nil && !IsNil(o.Appclass) {
		return true
	}

	return false
}

// SetAppclass gets a reference to the given string and assigns it to the Appclass field.
func (o *BackupRest) SetAppclass(v string) {
	o.Appclass = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *BackupRest) GetCluster() ClusterRest {
	if o == nil || IsNil(o.Cluster) {
		var ret ClusterRest
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetClusterOk() (*ClusterRest, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *BackupRest) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given ClusterRest and assigns it to the Cluster field.
func (o *BackupRest) SetCluster(v ClusterRest) {
	o.Cluster = &v
}

// GetDiskpool returns the Diskpool field value if set, zero value otherwise.
func (o *BackupRest) GetDiskpool() DiskPoolRest {
	if o == nil || IsNil(o.Diskpool) {
		var ret DiskPoolRest
		return ret
	}
	return *o.Diskpool
}

// GetDiskpoolOk returns a tuple with the Diskpool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetDiskpoolOk() (*DiskPoolRest, bool) {
	if o == nil || IsNil(o.Diskpool) {
		return nil, false
	}
	return o.Diskpool, true
}

// HasDiskpool returns a boolean if a field has been set.
func (o *BackupRest) HasDiskpool() bool {
	if o != nil && !IsNil(o.Diskpool) {
		return true
	}

	return false
}

// SetDiskpool gets a reference to the given DiskPoolRest and assigns it to the Diskpool field.
func (o *BackupRest) SetDiskpool(v DiskPoolRest) {
	o.Diskpool = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BackupRest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BackupRest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BackupRest) SetStatus(v string) {
	o.Status = &v
}

// GetTransport returns the Transport field value if set, zero value otherwise.
func (o *BackupRest) GetTransport() string {
	if o == nil || IsNil(o.Transport) {
		var ret string
		return ret
	}
	return *o.Transport
}

// GetTransportOk returns a tuple with the Transport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetTransportOk() (*string, bool) {
	if o == nil || IsNil(o.Transport) {
		return nil, false
	}
	return o.Transport, true
}

// HasTransport returns a boolean if a field has been set.
func (o *BackupRest) HasTransport() bool {
	if o != nil && !IsNil(o.Transport) {
		return true
	}

	return false
}

// SetTransport gets a reference to the given string and assigns it to the Transport field.
func (o *BackupRest) SetTransport(v string) {
	o.Transport = &v
}

// GetMultiregion returns the Multiregion field value if set, zero value otherwise.
func (o *BackupRest) GetMultiregion() string {
	if o == nil || IsNil(o.Multiregion) {
		var ret string
		return ret
	}
	return *o.Multiregion
}

// GetMultiregionOk returns a tuple with the Multiregion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetMultiregionOk() (*string, bool) {
	if o == nil || IsNil(o.Multiregion) {
		return nil, false
	}
	return o.Multiregion, true
}

// HasMultiregion returns a boolean if a field has been set.
func (o *BackupRest) HasMultiregion() bool {
	if o != nil && !IsNil(o.Multiregion) {
		return true
	}

	return false
}

// SetMultiregion gets a reference to the given string and assigns it to the Multiregion field.
func (o *BackupRest) SetMultiregion(v string) {
	o.Multiregion = &v
}

// GetSensitivity returns the Sensitivity field value if set, zero value otherwise.
func (o *BackupRest) GetSensitivity() int32 {
	if o == nil || IsNil(o.Sensitivity) {
		var ret int32
		return ret
	}
	return *o.Sensitivity
}

// GetSensitivityOk returns a tuple with the Sensitivity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetSensitivityOk() (*int32, bool) {
	if o == nil || IsNil(o.Sensitivity) {
		return nil, false
	}
	return o.Sensitivity, true
}

// HasSensitivity returns a boolean if a field has been set.
func (o *BackupRest) HasSensitivity() bool {
	if o != nil && !IsNil(o.Sensitivity) {
		return true
	}

	return false
}

// SetSensitivity gets a reference to the given int32 and assigns it to the Sensitivity field.
func (o *BackupRest) SetSensitivity(v int32) {
	o.Sensitivity = &v
}

// GetOriginalbackupid returns the Originalbackupid field value if set, zero value otherwise.
func (o *BackupRest) GetOriginalbackupid() string {
	if o == nil || IsNil(o.Originalbackupid) {
		var ret string
		return ret
	}
	return *o.Originalbackupid
}

// GetOriginalbackupidOk returns a tuple with the Originalbackupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetOriginalbackupidOk() (*string, bool) {
	if o == nil || IsNil(o.Originalbackupid) {
		return nil, false
	}
	return o.Originalbackupid, true
}

// HasOriginalbackupid returns a boolean if a field has been set.
func (o *BackupRest) HasOriginalbackupid() bool {
	if o != nil && !IsNil(o.Originalbackupid) {
		return true
	}

	return false
}

// SetOriginalbackupid gets a reference to the given string and assigns it to the Originalbackupid field.
func (o *BackupRest) SetOriginalbackupid(v string) {
	o.Originalbackupid = &v
}

// GetBackupdate returns the Backupdate field value if set, zero value otherwise.
func (o *BackupRest) GetBackupdate() int64 {
	if o == nil || IsNil(o.Backupdate) {
		var ret int64
		return ret
	}
	return *o.Backupdate
}

// GetBackupdateOk returns a tuple with the Backupdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetBackupdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Backupdate) {
		return nil, false
	}
	return o.Backupdate, true
}

// HasBackupdate returns a boolean if a field has been set.
func (o *BackupRest) HasBackupdate() bool {
	if o != nil && !IsNil(o.Backupdate) {
		return true
	}

	return false
}

// SetBackupdate gets a reference to the given int64 and assigns it to the Backupdate field.
func (o *BackupRest) SetBackupdate(v int64) {
	o.Backupdate = &v
}

// GetImmutabilitydate returns the Immutabilitydate field value if set, zero value otherwise.
func (o *BackupRest) GetImmutabilitydate() int64 {
	if o == nil || IsNil(o.Immutabilitydate) {
		var ret int64
		return ret
	}
	return *o.Immutabilitydate
}

// GetImmutabilitydateOk returns a tuple with the Immutabilitydate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetImmutabilitydateOk() (*int64, bool) {
	if o == nil || IsNil(o.Immutabilitydate) {
		return nil, false
	}
	return o.Immutabilitydate, true
}

// HasImmutabilitydate returns a boolean if a field has been set.
func (o *BackupRest) HasImmutabilitydate() bool {
	if o != nil && !IsNil(o.Immutabilitydate) {
		return true
	}

	return false
}

// SetImmutabilitydate gets a reference to the given int64 and assigns it to the Immutabilitydate field.
func (o *BackupRest) SetImmutabilitydate(v int64) {
	o.Immutabilitydate = &v
}

// GetConsistencydate returns the Consistencydate field value if set, zero value otherwise.
func (o *BackupRest) GetConsistencydate() int64 {
	if o == nil || IsNil(o.Consistencydate) {
		var ret int64
		return ret
	}
	return *o.Consistencydate
}

// GetConsistencydateOk returns a tuple with the Consistencydate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetConsistencydateOk() (*int64, bool) {
	if o == nil || IsNil(o.Consistencydate) {
		return nil, false
	}
	return o.Consistencydate, true
}

// HasConsistencydate returns a boolean if a field has been set.
func (o *BackupRest) HasConsistencydate() bool {
	if o != nil && !IsNil(o.Consistencydate) {
		return true
	}

	return false
}

// SetConsistencydate gets a reference to the given int64 and assigns it to the Consistencydate field.
func (o *BackupRest) SetConsistencydate(v int64) {
	o.Consistencydate = &v
}

// GetMappedhost returns the Mappedhost field value if set, zero value otherwise.
func (o *BackupRest) GetMappedhost() string {
	if o == nil || IsNil(o.Mappedhost) {
		var ret string
		return ret
	}
	return *o.Mappedhost
}

// GetMappedhostOk returns a tuple with the Mappedhost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetMappedhostOk() (*string, bool) {
	if o == nil || IsNil(o.Mappedhost) {
		return nil, false
	}
	return o.Mappedhost, true
}

// HasMappedhost returns a boolean if a field has been set.
func (o *BackupRest) HasMappedhost() bool {
	if o != nil && !IsNil(o.Mappedhost) {
		return true
	}

	return false
}

// SetMappedhost gets a reference to the given string and assigns it to the Mappedhost field.
func (o *BackupRest) SetMappedhost(v string) {
	o.Mappedhost = &v
}

// GetVirtualsize returns the Virtualsize field value if set, zero value otherwise.
func (o *BackupRest) GetVirtualsize() string {
	if o == nil || IsNil(o.Virtualsize) {
		var ret string
		return ret
	}
	return *o.Virtualsize
}

// GetVirtualsizeOk returns a tuple with the Virtualsize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetVirtualsizeOk() (*string, bool) {
	if o == nil || IsNil(o.Virtualsize) {
		return nil, false
	}
	return o.Virtualsize, true
}

// HasVirtualsize returns a boolean if a field has been set.
func (o *BackupRest) HasVirtualsize() bool {
	if o != nil && !IsNil(o.Virtualsize) {
		return true
	}

	return false
}

// SetVirtualsize gets a reference to the given string and assigns it to the Virtualsize field.
func (o *BackupRest) SetVirtualsize(v string) {
	o.Virtualsize = &v
}

// GetSlpname returns the Slpname field value if set, zero value otherwise.
func (o *BackupRest) GetSlpname() string {
	if o == nil || IsNil(o.Slpname) {
		var ret string
		return ret
	}
	return *o.Slpname
}

// GetSlpnameOk returns a tuple with the Slpname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetSlpnameOk() (*string, bool) {
	if o == nil || IsNil(o.Slpname) {
		return nil, false
	}
	return o.Slpname, true
}

// HasSlpname returns a boolean if a field has been set.
func (o *BackupRest) HasSlpname() bool {
	if o != nil && !IsNil(o.Slpname) {
		return true
	}

	return false
}

// SetSlpname gets a reference to the given string and assigns it to the Slpname field.
func (o *BackupRest) SetSlpname(v string) {
	o.Slpname = &v
}

// GetSltname returns the Sltname field value if set, zero value otherwise.
func (o *BackupRest) GetSltname() string {
	if o == nil || IsNil(o.Sltname) {
		var ret string
		return ret
	}
	return *o.Sltname
}

// GetSltnameOk returns a tuple with the Sltname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetSltnameOk() (*string, bool) {
	if o == nil || IsNil(o.Sltname) {
		return nil, false
	}
	return o.Sltname, true
}

// HasSltname returns a boolean if a field has been set.
func (o *BackupRest) HasSltname() bool {
	if o != nil && !IsNil(o.Sltname) {
		return true
	}

	return false
}

// SetSltname gets a reference to the given string and assigns it to the Sltname field.
func (o *BackupRest) SetSltname(v string) {
	o.Sltname = &v
}

// GetPolicyname returns the Policyname field value if set, zero value otherwise.
func (o *BackupRest) GetPolicyname() string {
	if o == nil || IsNil(o.Policyname) {
		var ret string
		return ret
	}
	return *o.Policyname
}

// GetPolicynameOk returns a tuple with the Policyname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetPolicynameOk() (*string, bool) {
	if o == nil || IsNil(o.Policyname) {
		return nil, false
	}
	return o.Policyname, true
}

// HasPolicyname returns a boolean if a field has been set.
func (o *BackupRest) HasPolicyname() bool {
	if o != nil && !IsNil(o.Policyname) {
		return true
	}

	return false
}

// SetPolicyname gets a reference to the given string and assigns it to the Policyname field.
func (o *BackupRest) SetPolicyname(v string) {
	o.Policyname = &v
}

// GetCharacteristic returns the Characteristic field value if set, zero value otherwise.
func (o *BackupRest) GetCharacteristic() string {
	if o == nil || IsNil(o.Characteristic) {
		var ret string
		return ret
	}
	return *o.Characteristic
}

// GetCharacteristicOk returns a tuple with the Characteristic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetCharacteristicOk() (*string, bool) {
	if o == nil || IsNil(o.Characteristic) {
		return nil, false
	}
	return o.Characteristic, true
}

// HasCharacteristic returns a boolean if a field has been set.
func (o *BackupRest) HasCharacteristic() bool {
	if o != nil && !IsNil(o.Characteristic) {
		return true
	}

	return false
}

// SetCharacteristic gets a reference to the given string and assigns it to the Characteristic field.
func (o *BackupRest) SetCharacteristic(v string) {
	o.Characteristic = &v
}

// GetSourceimage returns the Sourceimage field value if set, zero value otherwise.
func (o *BackupRest) GetSourceimage() BackupRest {
	if o == nil || IsNil(o.Sourceimage) {
		var ret BackupRest
		return ret
	}
	return *o.Sourceimage
}

// GetSourceimageOk returns a tuple with the Sourceimage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetSourceimageOk() (*BackupRest, bool) {
	if o == nil || IsNil(o.Sourceimage) {
		return nil, false
	}
	return o.Sourceimage, true
}

// HasSourceimage returns a boolean if a field has been set.
func (o *BackupRest) HasSourceimage() bool {
	if o != nil && !IsNil(o.Sourceimage) {
		return true
	}

	return false
}

// SetSourceimage gets a reference to the given BackupRest and assigns it to the Sourceimage field.
func (o *BackupRest) SetSourceimage(v BackupRest) {
	o.Sourceimage = &v
}

// GetSnapshotlocation returns the Snapshotlocation field value if set, zero value otherwise.
func (o *BackupRest) GetSnapshotlocation() string {
	if o == nil || IsNil(o.Snapshotlocation) {
		var ret string
		return ret
	}
	return *o.Snapshotlocation
}

// GetSnapshotlocationOk returns a tuple with the Snapshotlocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetSnapshotlocationOk() (*string, bool) {
	if o == nil || IsNil(o.Snapshotlocation) {
		return nil, false
	}
	return o.Snapshotlocation, true
}

// HasSnapshotlocation returns a boolean if a field has been set.
func (o *BackupRest) HasSnapshotlocation() bool {
	if o != nil && !IsNil(o.Snapshotlocation) {
		return true
	}

	return false
}

// SetSnapshotlocation gets a reference to the given string and assigns it to the Snapshotlocation field.
func (o *BackupRest) SetSnapshotlocation(v string) {
	o.Snapshotlocation = &v
}

// GetEndpit returns the Endpit field value if set, zero value otherwise.
func (o *BackupRest) GetEndpit() int64 {
	if o == nil || IsNil(o.Endpit) {
		var ret int64
		return ret
	}
	return *o.Endpit
}

// GetEndpitOk returns a tuple with the Endpit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetEndpitOk() (*int64, bool) {
	if o == nil || IsNil(o.Endpit) {
		return nil, false
	}
	return o.Endpit, true
}

// HasEndpit returns a boolean if a field has been set.
func (o *BackupRest) HasEndpit() bool {
	if o != nil && !IsNil(o.Endpit) {
		return true
	}

	return false
}

// SetEndpit gets a reference to the given int64 and assigns it to the Endpit field.
func (o *BackupRest) SetEndpit(v int64) {
	o.Endpit = &v
}

// GetBeginpit returns the Beginpit field value if set, zero value otherwise.
func (o *BackupRest) GetBeginpit() int64 {
	if o == nil || IsNil(o.Beginpit) {
		var ret int64
		return ret
	}
	return *o.Beginpit
}

// GetBeginpitOk returns a tuple with the Beginpit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetBeginpitOk() (*int64, bool) {
	if o == nil || IsNil(o.Beginpit) {
		return nil, false
	}
	return o.Beginpit, true
}

// HasBeginpit returns a boolean if a field has been set.
func (o *BackupRest) HasBeginpit() bool {
	if o != nil && !IsNil(o.Beginpit) {
		return true
	}

	return false
}

// SetBeginpit gets a reference to the given int64 and assigns it to the Beginpit field.
func (o *BackupRest) SetBeginpit(v int64) {
	o.Beginpit = &v
}

// GetUniquehostname returns the Uniquehostname field value if set, zero value otherwise.
func (o *BackupRest) GetUniquehostname() string {
	if o == nil || IsNil(o.Uniquehostname) {
		var ret string
		return ret
	}
	return *o.Uniquehostname
}

// GetUniquehostnameOk returns a tuple with the Uniquehostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetUniquehostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Uniquehostname) {
		return nil, false
	}
	return o.Uniquehostname, true
}

// HasUniquehostname returns a boolean if a field has been set.
func (o *BackupRest) HasUniquehostname() bool {
	if o != nil && !IsNil(o.Uniquehostname) {
		return true
	}

	return false
}

// SetUniquehostname gets a reference to the given string and assigns it to the Uniquehostname field.
func (o *BackupRest) SetUniquehostname(v string) {
	o.Uniquehostname = &v
}

// GetModifiedbytes returns the Modifiedbytes field value if set, zero value otherwise.
func (o *BackupRest) GetModifiedbytes() string {
	if o == nil || IsNil(o.Modifiedbytes) {
		var ret string
		return ret
	}
	return *o.Modifiedbytes
}

// GetModifiedbytesOk returns a tuple with the Modifiedbytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetModifiedbytesOk() (*string, bool) {
	if o == nil || IsNil(o.Modifiedbytes) {
		return nil, false
	}
	return o.Modifiedbytes, true
}

// HasModifiedbytes returns a boolean if a field has been set.
func (o *BackupRest) HasModifiedbytes() bool {
	if o != nil && !IsNil(o.Modifiedbytes) {
		return true
	}

	return false
}

// SetModifiedbytes gets a reference to the given string and assigns it to the Modifiedbytes field.
func (o *BackupRest) SetModifiedbytes(v string) {
	o.Modifiedbytes = &v
}

// GetHasdependency returns the Hasdependency field value if set, zero value otherwise.
func (o *BackupRest) GetHasdependency() bool {
	if o == nil || IsNil(o.Hasdependency) {
		var ret bool
		return ret
	}
	return *o.Hasdependency
}

// GetHasdependencyOk returns a tuple with the Hasdependency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetHasdependencyOk() (*bool, bool) {
	if o == nil || IsNil(o.Hasdependency) {
		return nil, false
	}
	return o.Hasdependency, true
}

// HasHasdependency returns a boolean if a field has been set.
func (o *BackupRest) HasHasdependency() bool {
	if o != nil && !IsNil(o.Hasdependency) {
		return true
	}

	return false
}

// SetHasdependency gets a reference to the given bool and assigns it to the Hasdependency field.
func (o *BackupRest) SetHasdependency(v bool) {
	o.Hasdependency = &v
}

// GetVaultowner returns the Vaultowner field value if set, zero value otherwise.
func (o *BackupRest) GetVaultowner() bool {
	if o == nil || IsNil(o.Vaultowner) {
		var ret bool
		return ret
	}
	return *o.Vaultowner
}

// GetVaultownerOk returns a tuple with the Vaultowner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetVaultownerOk() (*bool, bool) {
	if o == nil || IsNil(o.Vaultowner) {
		return nil, false
	}
	return o.Vaultowner, true
}

// HasVaultowner returns a boolean if a field has been set.
func (o *BackupRest) HasVaultowner() bool {
	if o != nil && !IsNil(o.Vaultowner) {
		return true
	}

	return false
}

// SetVaultowner gets a reference to the given bool and assigns it to the Vaultowner field.
func (o *BackupRest) SetVaultowner(v bool) {
	o.Vaultowner = &v
}

// GetMountedhost returns the Mountedhost field value if set, zero value otherwise.
func (o *BackupRest) GetMountedhost() []HostRest {
	if o == nil || IsNil(o.Mountedhost) {
		var ret []HostRest
		return ret
	}
	return o.Mountedhost
}

// GetMountedhostOk returns a tuple with the Mountedhost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetMountedhostOk() ([]HostRest, bool) {
	if o == nil || IsNil(o.Mountedhost) {
		return nil, false
	}
	return o.Mountedhost, true
}

// HasMountedhost returns a boolean if a field has been set.
func (o *BackupRest) HasMountedhost() bool {
	if o != nil && !IsNil(o.Mountedhost) {
		return true
	}

	return false
}

// SetMountedhost gets a reference to the given []HostRest and assigns it to the Mountedhost field.
func (o *BackupRest) SetMountedhost(v []HostRest) {
	o.Mountedhost = v
}

// GetJobclasscode returns the Jobclasscode field value if set, zero value otherwise.
func (o *BackupRest) GetJobclasscode() int32 {
	if o == nil || IsNil(o.Jobclasscode) {
		var ret int32
		return ret
	}
	return *o.Jobclasscode
}

// GetJobclasscodeOk returns a tuple with the Jobclasscode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetJobclasscodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Jobclasscode) {
		return nil, false
	}
	return o.Jobclasscode, true
}

// HasJobclasscode returns a boolean if a field has been set.
func (o *BackupRest) HasJobclasscode() bool {
	if o != nil && !IsNil(o.Jobclasscode) {
		return true
	}

	return false
}

// SetJobclasscode gets a reference to the given int32 and assigns it to the Jobclasscode field.
func (o *BackupRest) SetJobclasscode(v int32) {
	o.Jobclasscode = &v
}

// GetCloudcredential returns the Cloudcredential field value if set, zero value otherwise.
func (o *BackupRest) GetCloudcredential() CloudCredentialRest {
	if o == nil || IsNil(o.Cloudcredential) {
		var ret CloudCredentialRest
		return ret
	}
	return *o.Cloudcredential
}

// GetCloudcredentialOk returns a tuple with the Cloudcredential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetCloudcredentialOk() (*CloudCredentialRest, bool) {
	if o == nil || IsNil(o.Cloudcredential) {
		return nil, false
	}
	return o.Cloudcredential, true
}

// HasCloudcredential returns a boolean if a field has been set.
func (o *BackupRest) HasCloudcredential() bool {
	if o != nil && !IsNil(o.Cloudcredential) {
		return true
	}

	return false
}

// SetCloudcredential gets a reference to the given CloudCredentialRest and assigns it to the Cloudcredential field.
func (o *BackupRest) SetCloudcredential(v CloudCredentialRest) {
	o.Cloudcredential = &v
}

// GetReleaselogs returns the Releaselogs field value if set, zero value otherwise.
func (o *BackupRest) GetReleaselogs() bool {
	if o == nil || IsNil(o.Releaselogs) {
		var ret bool
		return ret
	}
	return *o.Releaselogs
}

// GetReleaselogsOk returns a tuple with the Releaselogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetReleaselogsOk() (*bool, bool) {
	if o == nil || IsNil(o.Releaselogs) {
		return nil, false
	}
	return o.Releaselogs, true
}

// HasReleaselogs returns a boolean if a field has been set.
func (o *BackupRest) HasReleaselogs() bool {
	if o != nil && !IsNil(o.Releaselogs) {
		return true
	}

	return false
}

// SetReleaselogs gets a reference to the given bool and assigns it to the Releaselogs field.
func (o *BackupRest) SetReleaselogs(v bool) {
	o.Releaselogs = &v
}

// GetRetainlogs returns the Retainlogs field value if set, zero value otherwise.
func (o *BackupRest) GetRetainlogs() bool {
	if o == nil || IsNil(o.Retainlogs) {
		var ret bool
		return ret
	}
	return *o.Retainlogs
}

// GetRetainlogsOk returns a tuple with the Retainlogs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetRetainlogsOk() (*bool, bool) {
	if o == nil || IsNil(o.Retainlogs) {
		return nil, false
	}
	return o.Retainlogs, true
}

// HasRetainlogs returns a boolean if a field has been set.
func (o *BackupRest) HasRetainlogs() bool {
	if o != nil && !IsNil(o.Retainlogs) {
		return true
	}

	return false
}

// SetRetainlogs gets a reference to the given bool and assigns it to the Retainlogs field.
func (o *BackupRest) SetRetainlogs(v bool) {
	o.Retainlogs = &v
}

// GetSourcediskpool returns the Sourcediskpool field value if set, zero value otherwise.
func (o *BackupRest) GetSourcediskpool() DiskPoolRest {
	if o == nil || IsNil(o.Sourcediskpool) {
		var ret DiskPoolRest
		return ret
	}
	return *o.Sourcediskpool
}

// GetSourcediskpoolOk returns a tuple with the Sourcediskpool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetSourcediskpoolOk() (*DiskPoolRest, bool) {
	if o == nil || IsNil(o.Sourcediskpool) {
		return nil, false
	}
	return o.Sourcediskpool, true
}

// HasSourcediskpool returns a boolean if a field has been set.
func (o *BackupRest) HasSourcediskpool() bool {
	if o != nil && !IsNil(o.Sourcediskpool) {
		return true
	}

	return false
}

// SetSourcediskpool gets a reference to the given DiskPoolRest and assigns it to the Sourcediskpool field.
func (o *BackupRest) SetSourcediskpool(v DiskPoolRest) {
	o.Sourcediskpool = &v
}

// GetClonemigrateeligible returns the Clonemigrateeligible field value if set, zero value otherwise.
func (o *BackupRest) GetClonemigrateeligible() bool {
	if o == nil || IsNil(o.Clonemigrateeligible) {
		var ret bool
		return ret
	}
	return *o.Clonemigrateeligible
}

// GetClonemigrateeligibleOk returns a tuple with the Clonemigrateeligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetClonemigrateeligibleOk() (*bool, bool) {
	if o == nil || IsNil(o.Clonemigrateeligible) {
		return nil, false
	}
	return o.Clonemigrateeligible, true
}

// HasClonemigrateeligible returns a boolean if a field has been set.
func (o *BackupRest) HasClonemigrateeligible() bool {
	if o != nil && !IsNil(o.Clonemigrateeligible) {
		return true
	}

	return false
}

// SetClonemigrateeligible gets a reference to the given bool and assigns it to the Clonemigrateeligible field.
func (o *BackupRest) SetClonemigrateeligible(v bool) {
	o.Clonemigrateeligible = &v
}

// GetMigrateFrequency returns the MigrateFrequency field value if set, zero value otherwise.
func (o *BackupRest) GetMigrateFrequency() int32 {
	if o == nil || IsNil(o.MigrateFrequency) {
		var ret int32
		return ret
	}
	return *o.MigrateFrequency
}

// GetMigrateFrequencyOk returns a tuple with the MigrateFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetMigrateFrequencyOk() (*int32, bool) {
	if o == nil || IsNil(o.MigrateFrequency) {
		return nil, false
	}
	return o.MigrateFrequency, true
}

// HasMigrateFrequency returns a boolean if a field has been set.
func (o *BackupRest) HasMigrateFrequency() bool {
	if o != nil && !IsNil(o.MigrateFrequency) {
		return true
	}

	return false
}

// SetMigrateFrequency gets a reference to the given int32 and assigns it to the MigrateFrequency field.
func (o *BackupRest) SetMigrateFrequency(v int32) {
	o.MigrateFrequency = &v
}

// GetMigrateCopythreadcount returns the MigrateCopythreadcount field value if set, zero value otherwise.
func (o *BackupRest) GetMigrateCopythreadcount() int32 {
	if o == nil || IsNil(o.MigrateCopythreadcount) {
		var ret int32
		return ret
	}
	return *o.MigrateCopythreadcount
}

// GetMigrateCopythreadcountOk returns a tuple with the MigrateCopythreadcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetMigrateCopythreadcountOk() (*int32, bool) {
	if o == nil || IsNil(o.MigrateCopythreadcount) {
		return nil, false
	}
	return o.MigrateCopythreadcount, true
}

// HasMigrateCopythreadcount returns a boolean if a field has been set.
func (o *BackupRest) HasMigrateCopythreadcount() bool {
	if o != nil && !IsNil(o.MigrateCopythreadcount) {
		return true
	}

	return false
}

// SetMigrateCopythreadcount gets a reference to the given int32 and assigns it to the MigrateCopythreadcount field.
func (o *BackupRest) SetMigrateCopythreadcount(v int32) {
	o.MigrateCopythreadcount = &v
}

// GetMigrateConfigured returns the MigrateConfigured field value if set, zero value otherwise.
func (o *BackupRest) GetMigrateConfigured() bool {
	if o == nil || IsNil(o.MigrateConfigured) {
		var ret bool
		return ret
	}
	return *o.MigrateConfigured
}

// GetMigrateConfiguredOk returns a tuple with the MigrateConfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetMigrateConfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.MigrateConfigured) {
		return nil, false
	}
	return o.MigrateConfigured, true
}

// HasMigrateConfigured returns a boolean if a field has been set.
func (o *BackupRest) HasMigrateConfigured() bool {
	if o != nil && !IsNil(o.MigrateConfigured) {
		return true
	}

	return false
}

// SetMigrateConfigured gets a reference to the given bool and assigns it to the MigrateConfigured field.
func (o *BackupRest) SetMigrateConfigured(v bool) {
	o.MigrateConfigured = &v
}

// GetYaml returns the Yaml field value if set, zero value otherwise.
func (o *BackupRest) GetYaml() string {
	if o == nil || IsNil(o.Yaml) {
		var ret string
		return ret
	}
	return *o.Yaml
}

// GetYamlOk returns a tuple with the Yaml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetYamlOk() (*string, bool) {
	if o == nil || IsNil(o.Yaml) {
		return nil, false
	}
	return o.Yaml, true
}

// HasYaml returns a boolean if a field has been set.
func (o *BackupRest) HasYaml() bool {
	if o != nil && !IsNil(o.Yaml) {
		return true
	}

	return false
}

// SetYaml gets a reference to the given string and assigns it to the Yaml field.
func (o *BackupRest) SetYaml(v string) {
	o.Yaml = &v
}

// GetYamlavailable returns the Yamlavailable field value if set, zero value otherwise.
func (o *BackupRest) GetYamlavailable() bool {
	if o == nil || IsNil(o.Yamlavailable) {
		var ret bool
		return ret
	}
	return *o.Yamlavailable
}

// GetYamlavailableOk returns a tuple with the Yamlavailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetYamlavailableOk() (*bool, bool) {
	if o == nil || IsNil(o.Yamlavailable) {
		return nil, false
	}
	return o.Yamlavailable, true
}

// HasYamlavailable returns a boolean if a field has been set.
func (o *BackupRest) HasYamlavailable() bool {
	if o != nil && !IsNil(o.Yamlavailable) {
		return true
	}

	return false
}

// SetYamlavailable gets a reference to the given bool and assigns it to the Yamlavailable field.
func (o *BackupRest) SetYamlavailable(v bool) {
	o.Yamlavailable = &v
}

// GetAllowedips returns the Allowedips field value if set, zero value otherwise.
func (o *BackupRest) GetAllowedips() []string {
	if o == nil || IsNil(o.Allowedips) {
		var ret []string
		return ret
	}
	return o.Allowedips
}

// GetAllowedipsOk returns a tuple with the Allowedips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetAllowedipsOk() ([]string, bool) {
	if o == nil || IsNil(o.Allowedips) {
		return nil, false
	}
	return o.Allowedips, true
}

// HasAllowedips returns a boolean if a field has been set.
func (o *BackupRest) HasAllowedips() bool {
	if o != nil && !IsNil(o.Allowedips) {
		return true
	}

	return false
}

// SetAllowedips gets a reference to the given []string and assigns it to the Allowedips field.
func (o *BackupRest) SetAllowedips(v []string) {
	o.Allowedips = v
}

// GetVolgroupname returns the Volgroupname field value if set, zero value otherwise.
func (o *BackupRest) GetVolgroupname() string {
	if o == nil || IsNil(o.Volgroupname) {
		var ret string
		return ret
	}
	return *o.Volgroupname
}

// GetVolgroupnameOk returns a tuple with the Volgroupname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetVolgroupnameOk() (*string, bool) {
	if o == nil || IsNil(o.Volgroupname) {
		return nil, false
	}
	return o.Volgroupname, true
}

// HasVolgroupname returns a boolean if a field has been set.
func (o *BackupRest) HasVolgroupname() bool {
	if o != nil && !IsNil(o.Volgroupname) {
		return true
	}

	return false
}

// SetVolgroupname gets a reference to the given string and assigns it to the Volgroupname field.
func (o *BackupRest) SetVolgroupname(v string) {
	o.Volgroupname = &v
}

// GetRacnodelist returns the Racnodelist field value if set, zero value otherwise.
func (o *BackupRest) GetRacnodelist() []string {
	if o == nil || IsNil(o.Racnodelist) {
		var ret []string
		return ret
	}
	return o.Racnodelist
}

// GetRacnodelistOk returns a tuple with the Racnodelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetRacnodelistOk() ([]string, bool) {
	if o == nil || IsNil(o.Racnodelist) {
		return nil, false
	}
	return o.Racnodelist, true
}

// HasRacnodelist returns a boolean if a field has been set.
func (o *BackupRest) HasRacnodelist() bool {
	if o != nil && !IsNil(o.Racnodelist) {
		return true
	}

	return false
}

// SetRacnodelist gets a reference to the given []string and assigns it to the Racnodelist field.
func (o *BackupRest) SetRacnodelist(v []string) {
	o.Racnodelist = v
}

// GetRestorableobjects returns the Restorableobjects field value if set, zero value otherwise.
func (o *BackupRest) GetRestorableobjects() []RestorableRest {
	if o == nil || IsNil(o.Restorableobjects) {
		var ret []RestorableRest
		return ret
	}
	return o.Restorableobjects
}

// GetRestorableobjectsOk returns a tuple with the Restorableobjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetRestorableobjectsOk() ([]RestorableRest, bool) {
	if o == nil || IsNil(o.Restorableobjects) {
		return nil, false
	}
	return o.Restorableobjects, true
}

// HasRestorableobjects returns a boolean if a field has been set.
func (o *BackupRest) HasRestorableobjects() bool {
	if o != nil && !IsNil(o.Restorableobjects) {
		return true
	}

	return false
}

// SetRestorableobjects gets a reference to the given []RestorableRest and assigns it to the Restorableobjects field.
func (o *BackupRest) SetRestorableobjects(v []RestorableRest) {
	o.Restorableobjects = v
}

// GetPowerfactor returns the Powerfactor field value if set, zero value otherwise.
func (o *BackupRest) GetPowerfactor() int32 {
	if o == nil || IsNil(o.Powerfactor) {
		var ret int32
		return ret
	}
	return *o.Powerfactor
}

// GetPowerfactorOk returns a tuple with the Powerfactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetPowerfactorOk() (*int32, bool) {
	if o == nil || IsNil(o.Powerfactor) {
		return nil, false
	}
	return o.Powerfactor, true
}

// HasPowerfactor returns a boolean if a field has been set.
func (o *BackupRest) HasPowerfactor() bool {
	if o != nil && !IsNil(o.Powerfactor) {
		return true
	}

	return false
}

// SetPowerfactor gets a reference to the given int32 and assigns it to the Powerfactor field.
func (o *BackupRest) SetPowerfactor(v int32) {
	o.Powerfactor = &v
}

// GetProvisioningoptions returns the Provisioningoptions field value if set, zero value otherwise.
func (o *BackupRest) GetProvisioningoptions() []KeyValueRest {
	if o == nil || IsNil(o.Provisioningoptions) {
		var ret []KeyValueRest
		return ret
	}
	return o.Provisioningoptions
}

// GetProvisioningoptionsOk returns a tuple with the Provisioningoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetProvisioningoptionsOk() ([]KeyValueRest, bool) {
	if o == nil || IsNil(o.Provisioningoptions) {
		return nil, false
	}
	return o.Provisioningoptions, true
}

// HasProvisioningoptions returns a boolean if a field has been set.
func (o *BackupRest) HasProvisioningoptions() bool {
	if o != nil && !IsNil(o.Provisioningoptions) {
		return true
	}

	return false
}

// SetProvisioningoptions gets a reference to the given []KeyValueRest and assigns it to the Provisioningoptions field.
func (o *BackupRest) SetProvisioningoptions(v []KeyValueRest) {
	o.Provisioningoptions = v
}

// GetVmname returns the Vmname field value if set, zero value otherwise.
func (o *BackupRest) GetVmname() string {
	if o == nil || IsNil(o.Vmname) {
		var ret string
		return ret
	}
	return *o.Vmname
}

// GetVmnameOk returns a tuple with the Vmname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetVmnameOk() (*string, bool) {
	if o == nil || IsNil(o.Vmname) {
		return nil, false
	}
	return o.Vmname, true
}

// HasVmname returns a boolean if a field has been set.
func (o *BackupRest) HasVmname() bool {
	if o != nil && !IsNil(o.Vmname) {
		return true
	}

	return false
}

// SetVmname gets a reference to the given string and assigns it to the Vmname field.
func (o *BackupRest) SetVmname(v string) {
	o.Vmname = &v
}

// GetCopies returns the Copies field value if set, zero value otherwise.
func (o *BackupRest) GetCopies() []BackupRest {
	if o == nil || IsNil(o.Copies) {
		var ret []BackupRest
		return ret
	}
	return o.Copies
}

// GetCopiesOk returns a tuple with the Copies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetCopiesOk() ([]BackupRest, bool) {
	if o == nil || IsNil(o.Copies) {
		return nil, false
	}
	return o.Copies, true
}

// HasCopies returns a boolean if a field has been set.
func (o *BackupRest) HasCopies() bool {
	if o != nil && !IsNil(o.Copies) {
		return true
	}

	return false
}

// SetCopies gets a reference to the given []BackupRest and assigns it to the Copies field.
func (o *BackupRest) SetCopies(v []BackupRest) {
	o.Copies = v
}

// GetHasmountedmap returns the Hasmountedmap field value if set, zero value otherwise.
func (o *BackupRest) GetHasmountedmap() bool {
	if o == nil || IsNil(o.Hasmountedmap) {
		var ret bool
		return ret
	}
	return *o.Hasmountedmap
}

// GetHasmountedmapOk returns a tuple with the Hasmountedmap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetHasmountedmapOk() (*bool, bool) {
	if o == nil || IsNil(o.Hasmountedmap) {
		return nil, false
	}
	return o.Hasmountedmap, true
}

// HasHasmountedmap returns a boolean if a field has been set.
func (o *BackupRest) HasHasmountedmap() bool {
	if o != nil && !IsNil(o.Hasmountedmap) {
		return true
	}

	return false
}

// SetHasmountedmap gets a reference to the given bool and assigns it to the Hasmountedmap field.
func (o *BackupRest) SetHasmountedmap(v bool) {
	o.Hasmountedmap = &v
}

// GetChildapp returns the Childapp field value if set, zero value otherwise.
func (o *BackupRest) GetChildapp() ApplicationRest {
	if o == nil || IsNil(o.Childapp) {
		var ret ApplicationRest
		return ret
	}
	return *o.Childapp
}

// GetChildappOk returns a tuple with the Childapp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetChildappOk() (*ApplicationRest, bool) {
	if o == nil || IsNil(o.Childapp) {
		return nil, false
	}
	return o.Childapp, true
}

// HasChildapp returns a boolean if a field has been set.
func (o *BackupRest) HasChildapp() bool {
	if o != nil && !IsNil(o.Childapp) {
		return true
	}

	return false
}

// SetChildapp gets a reference to the given ApplicationRest and assigns it to the Childapp field.
func (o *BackupRest) SetChildapp(v ApplicationRest) {
	o.Childapp = &v
}

// GetRestorelock returns the Restorelock field value if set, zero value otherwise.
func (o *BackupRest) GetRestorelock() string {
	if o == nil || IsNil(o.Restorelock) {
		var ret string
		return ret
	}
	return *o.Restorelock
}

// GetRestorelockOk returns a tuple with the Restorelock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetRestorelockOk() (*string, bool) {
	if o == nil || IsNil(o.Restorelock) {
		return nil, false
	}
	return o.Restorelock, true
}

// HasRestorelock returns a boolean if a field has been set.
func (o *BackupRest) HasRestorelock() bool {
	if o != nil && !IsNil(o.Restorelock) {
		return true
	}

	return false
}

// SetRestorelock gets a reference to the given string and assigns it to the Restorelock field.
func (o *BackupRest) SetRestorelock(v string) {
	o.Restorelock = &v
}

// GetMountcapacity returns the Mountcapacity field value if set, zero value otherwise.
func (o *BackupRest) GetMountcapacity() int64 {
	if o == nil || IsNil(o.Mountcapacity) {
		var ret int64
		return ret
	}
	return *o.Mountcapacity
}

// GetMountcapacityOk returns a tuple with the Mountcapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetMountcapacityOk() (*int64, bool) {
	if o == nil || IsNil(o.Mountcapacity) {
		return nil, false
	}
	return o.Mountcapacity, true
}

// HasMountcapacity returns a boolean if a field has been set.
func (o *BackupRest) HasMountcapacity() bool {
	if o != nil && !IsNil(o.Mountcapacity) {
		return true
	}

	return false
}

// SetMountcapacity gets a reference to the given int64 and assigns it to the Mountcapacity field.
func (o *BackupRest) SetMountcapacity(v int64) {
	o.Mountcapacity = &v
}

// GetNvolumes returns the Nvolumes field value if set, zero value otherwise.
func (o *BackupRest) GetNvolumes() string {
	if o == nil || IsNil(o.Nvolumes) {
		var ret string
		return ret
	}
	return *o.Nvolumes
}

// GetNvolumesOk returns a tuple with the Nvolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetNvolumesOk() (*string, bool) {
	if o == nil || IsNil(o.Nvolumes) {
		return nil, false
	}
	return o.Nvolumes, true
}

// HasNvolumes returns a boolean if a field has been set.
func (o *BackupRest) HasNvolumes() bool {
	if o != nil && !IsNil(o.Nvolumes) {
		return true
	}

	return false
}

// SetNvolumes gets a reference to the given string and assigns it to the Nvolumes field.
func (o *BackupRest) SetNvolumes(v string) {
	o.Nvolumes = &v
}

// GetOriginalbackup returns the Originalbackup field value if set, zero value otherwise.
func (o *BackupRest) GetOriginalbackup() BackupRest {
	if o == nil || IsNil(o.Originalbackup) {
		var ret BackupRest
		return ret
	}
	return *o.Originalbackup
}

// GetOriginalbackupOk returns a tuple with the Originalbackup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetOriginalbackupOk() (*BackupRest, bool) {
	if o == nil || IsNil(o.Originalbackup) {
		return nil, false
	}
	return o.Originalbackup, true
}

// HasOriginalbackup returns a boolean if a field has been set.
func (o *BackupRest) HasOriginalbackup() bool {
	if o != nil && !IsNil(o.Originalbackup) {
		return true
	}

	return false
}

// SetOriginalbackup gets a reference to the given BackupRest and assigns it to the Originalbackup field.
func (o *BackupRest) SetOriginalbackup(v BackupRest) {
	o.Originalbackup = &v
}

// GetDnsname returns the Dnsname field value if set, zero value otherwise.
func (o *BackupRest) GetDnsname() string {
	if o == nil || IsNil(o.Dnsname) {
		var ret string
		return ret
	}
	return *o.Dnsname
}

// GetDnsnameOk returns a tuple with the Dnsname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetDnsnameOk() (*string, bool) {
	if o == nil || IsNil(o.Dnsname) {
		return nil, false
	}
	return o.Dnsname, true
}

// HasDnsname returns a boolean if a field has been set.
func (o *BackupRest) HasDnsname() bool {
	if o != nil && !IsNil(o.Dnsname) {
		return true
	}

	return false
}

// SetDnsname gets a reference to the given string and assigns it to the Dnsname field.
func (o *BackupRest) SetDnsname(v string) {
	o.Dnsname = &v
}

// GetVmpath returns the Vmpath field value if set, zero value otherwise.
func (o *BackupRest) GetVmpath() string {
	if o == nil || IsNil(o.Vmpath) {
		var ret string
		return ret
	}
	return *o.Vmpath
}

// GetVmpathOk returns a tuple with the Vmpath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetVmpathOk() (*string, bool) {
	if o == nil || IsNil(o.Vmpath) {
		return nil, false
	}
	return o.Vmpath, true
}

// HasVmpath returns a boolean if a field has been set.
func (o *BackupRest) HasVmpath() bool {
	if o != nil && !IsNil(o.Vmpath) {
		return true
	}

	return false
}

// SetVmpath gets a reference to the given string and assigns it to the Vmpath field.
func (o *BackupRest) SetVmpath(v string) {
	o.Vmpath = &v
}

// GetEsxhost returns the Esxhost field value if set, zero value otherwise.
func (o *BackupRest) GetEsxhost() string {
	if o == nil || IsNil(o.Esxhost) {
		var ret string
		return ret
	}
	return *o.Esxhost
}

// GetEsxhostOk returns a tuple with the Esxhost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetEsxhostOk() (*string, bool) {
	if o == nil || IsNil(o.Esxhost) {
		return nil, false
	}
	return o.Esxhost, true
}

// HasEsxhost returns a boolean if a field has been set.
func (o *BackupRest) HasEsxhost() bool {
	if o != nil && !IsNil(o.Esxhost) {
		return true
	}

	return false
}

// SetEsxhost gets a reference to the given string and assigns it to the Esxhost field.
func (o *BackupRest) SetEsxhost(v string) {
	o.Esxhost = &v
}

// GetBackuplock returns the Backuplock field value if set, zero value otherwise.
func (o *BackupRest) GetBackuplock() string {
	if o == nil || IsNil(o.Backuplock) {
		var ret string
		return ret
	}
	return *o.Backuplock
}

// GetBackuplockOk returns a tuple with the Backuplock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetBackuplockOk() (*string, bool) {
	if o == nil || IsNil(o.Backuplock) {
		return nil, false
	}
	return o.Backuplock, true
}

// HasBackuplock returns a boolean if a field has been set.
func (o *BackupRest) HasBackuplock() bool {
	if o != nil && !IsNil(o.Backuplock) {
		return true
	}

	return false
}

// SetBackuplock gets a reference to the given string and assigns it to the Backuplock field.
func (o *BackupRest) SetBackuplock(v string) {
	o.Backuplock = &v
}

// GetMountedmountpoint returns the Mountedmountpoint field value if set, zero value otherwise.
func (o *BackupRest) GetMountedmountpoint() string {
	if o == nil || IsNil(o.Mountedmountpoint) {
		var ret string
		return ret
	}
	return *o.Mountedmountpoint
}

// GetMountedmountpointOk returns a tuple with the Mountedmountpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetMountedmountpointOk() (*string, bool) {
	if o == nil || IsNil(o.Mountedmountpoint) {
		return nil, false
	}
	return o.Mountedmountpoint, true
}

// HasMountedmountpoint returns a boolean if a field has been set.
func (o *BackupRest) HasMountedmountpoint() bool {
	if o != nil && !IsNil(o.Mountedmountpoint) {
		return true
	}

	return false
}

// SetMountedmountpoint gets a reference to the given string and assigns it to the Mountedmountpoint field.
func (o *BackupRest) SetMountedmountpoint(v string) {
	o.Mountedmountpoint = &v
}

// GetConsistencymode returns the Consistencymode field value if set, zero value otherwise.
func (o *BackupRest) GetConsistencymode() string {
	if o == nil || IsNil(o.Consistencymode) {
		var ret string
		return ret
	}
	return *o.Consistencymode
}

// GetConsistencymodeOk returns a tuple with the Consistencymode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetConsistencymodeOk() (*string, bool) {
	if o == nil || IsNil(o.Consistencymode) {
		return nil, false
	}
	return o.Consistencymode, true
}

// HasConsistencymode returns a boolean if a field has been set.
func (o *BackupRest) HasConsistencymode() bool {
	if o != nil && !IsNil(o.Consistencymode) {
		return true
	}

	return false
}

// SetConsistencymode gets a reference to the given string and assigns it to the Consistencymode field.
func (o *BackupRest) SetConsistencymode(v string) {
	o.Consistencymode = &v
}

// GetMountedvdisk returns the Mountedvdisk field value if set, zero value otherwise.
func (o *BackupRest) GetMountedvdisk() string {
	if o == nil || IsNil(o.Mountedvdisk) {
		var ret string
		return ret
	}
	return *o.Mountedvdisk
}

// GetMountedvdiskOk returns a tuple with the Mountedvdisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetMountedvdiskOk() (*string, bool) {
	if o == nil || IsNil(o.Mountedvdisk) {
		return nil, false
	}
	return o.Mountedvdisk, true
}

// HasMountedvdisk returns a boolean if a field has been set.
func (o *BackupRest) HasMountedvdisk() bool {
	if o != nil && !IsNil(o.Mountedvdisk) {
		return true
	}

	return false
}

// SetMountedvdisk gets a reference to the given string and assigns it to the Mountedvdisk field.
func (o *BackupRest) SetMountedvdisk(v string) {
	o.Mountedvdisk = &v
}

// GetSourcemountpoint returns the Sourcemountpoint field value if set, zero value otherwise.
func (o *BackupRest) GetSourcemountpoint() string {
	if o == nil || IsNil(o.Sourcemountpoint) {
		var ret string
		return ret
	}
	return *o.Sourcemountpoint
}

// GetSourcemountpointOk returns a tuple with the Sourcemountpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetSourcemountpointOk() (*string, bool) {
	if o == nil || IsNil(o.Sourcemountpoint) {
		return nil, false
	}
	return o.Sourcemountpoint, true
}

// HasSourcemountpoint returns a boolean if a field has been set.
func (o *BackupRest) HasSourcemountpoint() bool {
	if o != nil && !IsNil(o.Sourcemountpoint) {
		return true
	}

	return false
}

// SetSourcemountpoint gets a reference to the given string and assigns it to the Sourcemountpoint field.
func (o *BackupRest) SetSourcemountpoint(v string) {
	o.Sourcemountpoint = &v
}

// GetFlagsText returns the FlagsText field value if set, zero value otherwise.
func (o *BackupRest) GetFlagsText() []string {
	if o == nil || IsNil(o.FlagsText) {
		var ret []string
		return ret
	}
	return o.FlagsText
}

// GetFlagsTextOk returns a tuple with the FlagsText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetFlagsTextOk() ([]string, bool) {
	if o == nil || IsNil(o.FlagsText) {
		return nil, false
	}
	return o.FlagsText, true
}

// HasFlagsText returns a boolean if a field has been set.
func (o *BackupRest) HasFlagsText() bool {
	if o != nil && !IsNil(o.FlagsText) {
		return true
	}

	return false
}

// SetFlagsText gets a reference to the given []string and assigns it to the FlagsText field.
func (o *BackupRest) SetFlagsText(v []string) {
	o.FlagsText = v
}

// GetExpirytries returns the Expirytries field value if set, zero value otherwise.
func (o *BackupRest) GetExpirytries() string {
	if o == nil || IsNil(o.Expirytries) {
		var ret string
		return ret
	}
	return *o.Expirytries
}

// GetExpirytriesOk returns a tuple with the Expirytries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetExpirytriesOk() (*string, bool) {
	if o == nil || IsNil(o.Expirytries) {
		return nil, false
	}
	return o.Expirytries, true
}

// HasExpirytries returns a boolean if a field has been set.
func (o *BackupRest) HasExpirytries() bool {
	if o != nil && !IsNil(o.Expirytries) {
		return true
	}

	return false
}

// SetExpirytries gets a reference to the given string and assigns it to the Expirytries field.
func (o *BackupRest) SetExpirytries(v string) {
	o.Expirytries = &v
}

// GetLogsequences returns the Logsequences field value if set, zero value otherwise.
func (o *BackupRest) GetLogsequences() []LogSequenceRest {
	if o == nil || IsNil(o.Logsequences) {
		var ret []LogSequenceRest
		return ret
	}
	return o.Logsequences
}

// GetLogsequencesOk returns a tuple with the Logsequences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetLogsequencesOk() ([]LogSequenceRest, bool) {
	if o == nil || IsNil(o.Logsequences) {
		return nil, false
	}
	return o.Logsequences, true
}

// HasLogsequences returns a boolean if a field has been set.
func (o *BackupRest) HasLogsequences() bool {
	if o != nil && !IsNil(o.Logsequences) {
		return true
	}

	return false
}

// SetLogsequences gets a reference to the given []LogSequenceRest and assigns it to the Logsequences field.
func (o *BackupRest) SetLogsequences(v []LogSequenceRest) {
	o.Logsequences = v
}

// GetHosttimezone returns the Hosttimezone field value if set, zero value otherwise.
func (o *BackupRest) GetHosttimezone() string {
	if o == nil || IsNil(o.Hosttimezone) {
		var ret string
		return ret
	}
	return *o.Hosttimezone
}

// GetHosttimezoneOk returns a tuple with the Hosttimezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetHosttimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Hosttimezone) {
		return nil, false
	}
	return o.Hosttimezone, true
}

// HasHosttimezone returns a boolean if a field has been set.
func (o *BackupRest) HasHosttimezone() bool {
	if o != nil && !IsNil(o.Hosttimezone) {
		return true
	}

	return false
}

// SetHosttimezone gets a reference to the given string and assigns it to the Hosttimezone field.
func (o *BackupRest) SetHosttimezone(v string) {
	o.Hosttimezone = &v
}

// GetHostisdst returns the Hostisdst field value if set, zero value otherwise.
func (o *BackupRest) GetHostisdst() bool {
	if o == nil || IsNil(o.Hostisdst) {
		var ret bool
		return ret
	}
	return *o.Hostisdst
}

// GetHostisdstOk returns a tuple with the Hostisdst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetHostisdstOk() (*bool, bool) {
	if o == nil || IsNil(o.Hostisdst) {
		return nil, false
	}
	return o.Hostisdst, true
}

// HasHostisdst returns a boolean if a field has been set.
func (o *BackupRest) HasHostisdst() bool {
	if o != nil && !IsNil(o.Hostisdst) {
		return true
	}

	return false
}

// SetHostisdst gets a reference to the given bool and assigns it to the Hostisdst field.
func (o *BackupRest) SetHostisdst(v bool) {
	o.Hostisdst = &v
}

// GetAsmswitchcapable returns the Asmswitchcapable field value if set, zero value otherwise.
func (o *BackupRest) GetAsmswitchcapable() bool {
	if o == nil || IsNil(o.Asmswitchcapable) {
		var ret bool
		return ret
	}
	return *o.Asmswitchcapable
}

// GetAsmswitchcapableOk returns a tuple with the Asmswitchcapable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetAsmswitchcapableOk() (*bool, bool) {
	if o == nil || IsNil(o.Asmswitchcapable) {
		return nil, false
	}
	return o.Asmswitchcapable, true
}

// HasAsmswitchcapable returns a boolean if a field has been set.
func (o *BackupRest) HasAsmswitchcapable() bool {
	if o != nil && !IsNil(o.Asmswitchcapable) {
		return true
	}

	return false
}

// SetAsmswitchcapable gets a reference to the given bool and assigns it to the Asmswitchcapable field.
func (o *BackupRest) SetAsmswitchcapable(v bool) {
	o.Asmswitchcapable = &v
}

// GetIncarnation returns the Incarnation field value if set, zero value otherwise.
func (o *BackupRest) GetIncarnation() string {
	if o == nil || IsNil(o.Incarnation) {
		var ret string
		return ret
	}
	return *o.Incarnation
}

// GetIncarnationOk returns a tuple with the Incarnation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetIncarnationOk() (*string, bool) {
	if o == nil || IsNil(o.Incarnation) {
		return nil, false
	}
	return o.Incarnation, true
}

// HasIncarnation returns a boolean if a field has been set.
func (o *BackupRest) HasIncarnation() bool {
	if o != nil && !IsNil(o.Incarnation) {
		return true
	}

	return false
}

// SetIncarnation gets a reference to the given string and assigns it to the Incarnation field.
func (o *BackupRest) SetIncarnation(v string) {
	o.Incarnation = &v
}

// GetHananodelist returns the Hananodelist field value if set, zero value otherwise.
func (o *BackupRest) GetHananodelist() []string {
	if o == nil || IsNil(o.Hananodelist) {
		var ret []string
		return ret
	}
	return o.Hananodelist
}

// GetHananodelistOk returns a tuple with the Hananodelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetHananodelistOk() ([]string, bool) {
	if o == nil || IsNil(o.Hananodelist) {
		return nil, false
	}
	return o.Hananodelist, true
}

// HasHananodelist returns a boolean if a field has been set.
func (o *BackupRest) HasHananodelist() bool {
	if o != nil && !IsNil(o.Hananodelist) {
		return true
	}

	return false
}

// SetHananodelist gets a reference to the given []string and assigns it to the Hananodelist field.
func (o *BackupRest) SetHananodelist(v []string) {
	o.Hananodelist = v
}

// GetApplicationAllocatedSize returns the ApplicationAllocatedSize field value if set, zero value otherwise.
func (o *BackupRest) GetApplicationAllocatedSize() int64 {
	if o == nil || IsNil(o.ApplicationAllocatedSize) {
		var ret int64
		return ret
	}
	return *o.ApplicationAllocatedSize
}

// GetApplicationAllocatedSizeOk returns a tuple with the ApplicationAllocatedSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetApplicationAllocatedSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.ApplicationAllocatedSize) {
		return nil, false
	}
	return o.ApplicationAllocatedSize, true
}

// HasApplicationAllocatedSize returns a boolean if a field has been set.
func (o *BackupRest) HasApplicationAllocatedSize() bool {
	if o != nil && !IsNil(o.ApplicationAllocatedSize) {
		return true
	}

	return false
}

// SetApplicationAllocatedSize gets a reference to the given int64 and assigns it to the ApplicationAllocatedSize field.
func (o *BackupRest) SetApplicationAllocatedSize(v int64) {
	o.ApplicationAllocatedSize = &v
}

// GetExportvolume returns the Exportvolume field value if set, zero value otherwise.
func (o *BackupRest) GetExportvolume() []ExportVolumeInfoRest {
	if o == nil || IsNil(o.Exportvolume) {
		var ret []ExportVolumeInfoRest
		return ret
	}
	return o.Exportvolume
}

// GetExportvolumeOk returns a tuple with the Exportvolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetExportvolumeOk() ([]ExportVolumeInfoRest, bool) {
	if o == nil || IsNil(o.Exportvolume) {
		return nil, false
	}
	return o.Exportvolume, true
}

// HasExportvolume returns a boolean if a field has been set.
func (o *BackupRest) HasExportvolume() bool {
	if o != nil && !IsNil(o.Exportvolume) {
		return true
	}

	return false
}

// SetExportvolume gets a reference to the given []ExportVolumeInfoRest and assigns it to the Exportvolume field.
func (o *BackupRest) SetExportvolume(v []ExportVolumeInfoRest) {
	o.Exportvolume = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *BackupRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *BackupRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *BackupRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *BackupRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *BackupRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *BackupRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *BackupRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *BackupRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *BackupRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *BackupRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackupRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *BackupRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *BackupRest) SetStale(v bool) {
	o.Stale = &v
}

func (o BackupRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackupRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mountmigrateflag) {
		toSerialize["mountmigrateflag"] = o.Mountmigrateflag
	}
	if !IsNil(o.Eligiblestoragetypes) {
		toSerialize["eligiblestoragetypes"] = o.Eligiblestoragetypes
	}
	if !IsNil(o.Targetstoragetype) {
		toSerialize["targetstoragetype"] = o.Targetstoragetype
	}
	if !IsNil(o.Migrationstate) {
		toSerialize["migrationstate"] = o.Migrationstate
	}
	if !IsNil(o.Datafilemovestarted) {
		toSerialize["datafilemovestarted"] = o.Datafilemovestarted
	}
	if !IsNil(o.Migratemapping) {
		toSerialize["migratemapping"] = o.Migratemapping
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Flags) {
		toSerialize["flags"] = o.Flags
	}
	if !IsNil(o.Zone) {
		toSerialize["zone"] = o.Zone
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Application) {
		toSerialize["application"] = o.Application
	}
	if !IsNil(o.Jobclass) {
		toSerialize["jobclass"] = o.Jobclass
	}
	if !IsNil(o.Srcid) {
		toSerialize["srcid"] = o.Srcid
	}
	if !IsNil(o.Clusterid) {
		toSerialize["clusterid"] = o.Clusterid
	}
	if !IsNil(o.Appname) {
		toSerialize["appname"] = o.Appname
	}
	if !IsNil(o.Modifydate) {
		toSerialize["modifydate"] = o.Modifydate
	}
	if !IsNil(o.Isasm) {
		toSerialize["isasm"] = o.Isasm
	}
	if !IsNil(o.Apptype) {
		toSerialize["apptype"] = o.Apptype
	}
	if !IsNil(o.Snapshottype) {
		toSerialize["snapshottype"] = o.Snapshottype
	}
	if !IsNil(o.Consumedsize) {
		toSerialize["consumedsize"] = o.Consumedsize
	}
	if !IsNil(o.Catalogstate) {
		toSerialize["catalogstate"] = o.Catalogstate
	}
	if !IsNil(o.Backupname) {
		toSerialize["backupname"] = o.Backupname
	}
	if !IsNil(o.Sourceuds) {
		toSerialize["sourceuds"] = o.Sourceuds
	}
	if !IsNil(o.Originatinguds) {
		toSerialize["originatinguds"] = o.Originatinguds
	}
	if !IsNil(o.Targetuds) {
		toSerialize["targetuds"] = o.Targetuds
	}
	if !IsNil(o.Appclass) {
		toSerialize["appclass"] = o.Appclass
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Diskpool) {
		toSerialize["diskpool"] = o.Diskpool
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Transport) {
		toSerialize["transport"] = o.Transport
	}
	if !IsNil(o.Multiregion) {
		toSerialize["multiregion"] = o.Multiregion
	}
	if !IsNil(o.Sensitivity) {
		toSerialize["sensitivity"] = o.Sensitivity
	}
	if !IsNil(o.Originalbackupid) {
		toSerialize["originalbackupid"] = o.Originalbackupid
	}
	if !IsNil(o.Backupdate) {
		toSerialize["backupdate"] = o.Backupdate
	}
	if !IsNil(o.Immutabilitydate) {
		toSerialize["immutabilitydate"] = o.Immutabilitydate
	}
	if !IsNil(o.Consistencydate) {
		toSerialize["consistencydate"] = o.Consistencydate
	}
	if !IsNil(o.Mappedhost) {
		toSerialize["mappedhost"] = o.Mappedhost
	}
	if !IsNil(o.Virtualsize) {
		toSerialize["virtualsize"] = o.Virtualsize
	}
	if !IsNil(o.Slpname) {
		toSerialize["slpname"] = o.Slpname
	}
	if !IsNil(o.Sltname) {
		toSerialize["sltname"] = o.Sltname
	}
	if !IsNil(o.Policyname) {
		toSerialize["policyname"] = o.Policyname
	}
	if !IsNil(o.Characteristic) {
		toSerialize["characteristic"] = o.Characteristic
	}
	if !IsNil(o.Sourceimage) {
		toSerialize["sourceimage"] = o.Sourceimage
	}
	if !IsNil(o.Snapshotlocation) {
		toSerialize["snapshotlocation"] = o.Snapshotlocation
	}
	if !IsNil(o.Endpit) {
		toSerialize["endpit"] = o.Endpit
	}
	if !IsNil(o.Beginpit) {
		toSerialize["beginpit"] = o.Beginpit
	}
	if !IsNil(o.Uniquehostname) {
		toSerialize["uniquehostname"] = o.Uniquehostname
	}
	if !IsNil(o.Modifiedbytes) {
		toSerialize["modifiedbytes"] = o.Modifiedbytes
	}
	if !IsNil(o.Hasdependency) {
		toSerialize["hasdependency"] = o.Hasdependency
	}
	if !IsNil(o.Vaultowner) {
		toSerialize["vaultowner"] = o.Vaultowner
	}
	if !IsNil(o.Mountedhost) {
		toSerialize["mountedhost"] = o.Mountedhost
	}
	if !IsNil(o.Jobclasscode) {
		toSerialize["jobclasscode"] = o.Jobclasscode
	}
	if !IsNil(o.Cloudcredential) {
		toSerialize["cloudcredential"] = o.Cloudcredential
	}
	if !IsNil(o.Releaselogs) {
		toSerialize["releaselogs"] = o.Releaselogs
	}
	if !IsNil(o.Retainlogs) {
		toSerialize["retainlogs"] = o.Retainlogs
	}
	if !IsNil(o.Sourcediskpool) {
		toSerialize["sourcediskpool"] = o.Sourcediskpool
	}
	if !IsNil(o.Clonemigrateeligible) {
		toSerialize["clonemigrateeligible"] = o.Clonemigrateeligible
	}
	if !IsNil(o.MigrateFrequency) {
		toSerialize["migrate-frequency"] = o.MigrateFrequency
	}
	if !IsNil(o.MigrateCopythreadcount) {
		toSerialize["migrate-copythreadcount"] = o.MigrateCopythreadcount
	}
	if !IsNil(o.MigrateConfigured) {
		toSerialize["migrate-configured"] = o.MigrateConfigured
	}
	if !IsNil(o.Yaml) {
		toSerialize["yaml"] = o.Yaml
	}
	if !IsNil(o.Yamlavailable) {
		toSerialize["yamlavailable"] = o.Yamlavailable
	}
	if !IsNil(o.Allowedips) {
		toSerialize["allowedips"] = o.Allowedips
	}
	if !IsNil(o.Volgroupname) {
		toSerialize["volgroupname"] = o.Volgroupname
	}
	if !IsNil(o.Racnodelist) {
		toSerialize["racnodelist"] = o.Racnodelist
	}
	if !IsNil(o.Restorableobjects) {
		toSerialize["restorableobjects"] = o.Restorableobjects
	}
	if !IsNil(o.Powerfactor) {
		toSerialize["powerfactor"] = o.Powerfactor
	}
	if !IsNil(o.Provisioningoptions) {
		toSerialize["provisioningoptions"] = o.Provisioningoptions
	}
	if !IsNil(o.Vmname) {
		toSerialize["vmname"] = o.Vmname
	}
	if !IsNil(o.Copies) {
		toSerialize["copies"] = o.Copies
	}
	if !IsNil(o.Hasmountedmap) {
		toSerialize["hasmountedmap"] = o.Hasmountedmap
	}
	if !IsNil(o.Childapp) {
		toSerialize["childapp"] = o.Childapp
	}
	if !IsNil(o.Restorelock) {
		toSerialize["restorelock"] = o.Restorelock
	}
	if !IsNil(o.Mountcapacity) {
		toSerialize["mountcapacity"] = o.Mountcapacity
	}
	if !IsNil(o.Nvolumes) {
		toSerialize["nvolumes"] = o.Nvolumes
	}
	if !IsNil(o.Originalbackup) {
		toSerialize["originalbackup"] = o.Originalbackup
	}
	if !IsNil(o.Dnsname) {
		toSerialize["dnsname"] = o.Dnsname
	}
	if !IsNil(o.Vmpath) {
		toSerialize["vmpath"] = o.Vmpath
	}
	if !IsNil(o.Esxhost) {
		toSerialize["esxhost"] = o.Esxhost
	}
	if !IsNil(o.Backuplock) {
		toSerialize["backuplock"] = o.Backuplock
	}
	if !IsNil(o.Mountedmountpoint) {
		toSerialize["mountedmountpoint"] = o.Mountedmountpoint
	}
	if !IsNil(o.Consistencymode) {
		toSerialize["consistencymode"] = o.Consistencymode
	}
	if !IsNil(o.Mountedvdisk) {
		toSerialize["mountedvdisk"] = o.Mountedvdisk
	}
	if !IsNil(o.Sourcemountpoint) {
		toSerialize["sourcemountpoint"] = o.Sourcemountpoint
	}
	if !IsNil(o.FlagsText) {
		toSerialize["flags_text"] = o.FlagsText
	}
	if !IsNil(o.Expirytries) {
		toSerialize["expirytries"] = o.Expirytries
	}
	if !IsNil(o.Logsequences) {
		toSerialize["logsequences"] = o.Logsequences
	}
	if !IsNil(o.Hosttimezone) {
		toSerialize["hosttimezone"] = o.Hosttimezone
	}
	if !IsNil(o.Hostisdst) {
		toSerialize["hostisdst"] = o.Hostisdst
	}
	if !IsNil(o.Asmswitchcapable) {
		toSerialize["asmswitchcapable"] = o.Asmswitchcapable
	}
	if !IsNil(o.Incarnation) {
		toSerialize["incarnation"] = o.Incarnation
	}
	if !IsNil(o.Hananodelist) {
		toSerialize["hananodelist"] = o.Hananodelist
	}
	if !IsNil(o.ApplicationAllocatedSize) {
		toSerialize["application_allocated_size"] = o.ApplicationAllocatedSize
	}
	if !IsNil(o.Exportvolume) {
		toSerialize["exportvolume"] = o.Exportvolume
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableBackupRest struct {
	value *BackupRest
	isSet bool
}

func (v NullableBackupRest) Get() *BackupRest {
	return v.value
}

func (v *NullableBackupRest) Set(val *BackupRest) {
	v.value = val
	v.isSet = true
}

func (v NullableBackupRest) IsSet() bool {
	return v.isSet
}

func (v *NullableBackupRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackupRest(val *BackupRest) *NullableBackupRest {
	return &NullableBackupRest{value: val, isSet: true}
}

func (v NullableBackupRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackupRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


