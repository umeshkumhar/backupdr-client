/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RestoreRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreRest{}

// RestoreRest struct for RestoreRest
type RestoreRest struct {
	Password *string `json:"password,omitempty"`
	Host *HostRest `json:"host,omitempty"`
	Label *string `json:"label,omitempty"`
	Username *string `json:"username,omitempty"`
	Cloudvmoptions *CloudVmMountRest `json:"cloudvmoptions,omitempty"`
	Rdmmode *string `json:"rdmmode,omitempty"`
	Physicalrdm *string `json:"physicalrdm,omitempty"`
	Targetnode *string `json:"targetnode,omitempty"`
	Replacesource *bool `json:"replacesource,omitempty"`
	Parts *string `json:"parts,omitempty"`
	Datastore *string `json:"datastore,omitempty"`
	Recover *bool `json:"recover,omitempty"`
	Recoverytime *int64 `json:"recoverytime,omitempty"`
	Poweronvm *bool `json:"poweronvm,omitempty"`
	Scripts []ScriptRest `json:"scripts,omitempty"`
	Restoreobjectmappings []RestoreObjectMappingRest `json:"restoreobjectmappings,omitempty"`
	Restoreoptions []RestoreOptionRest `json:"restoreoptions,omitempty"`
	Provisioningoptions []ProvisioningOptionRest `json:"provisioningoptions,omitempty"`
	Selectedobjects []SelectedObjectRest `json:"selectedobjects,omitempty"`
	Nfsoptions *NfsOptionsRest `json:"nfsoptions,omitempty"`
	Instantmount *bool `json:"instantmount,omitempty"`
	Notdisableschedule *bool `json:"notdisableschedule,omitempty"`
	Container *bool `json:"container,omitempty"`
	Allowedips []string `json:"allowedips,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewRestoreRest instantiates a new RestoreRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreRest() *RestoreRest {
	this := RestoreRest{}
	return &this
}

// NewRestoreRestWithDefaults instantiates a new RestoreRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreRestWithDefaults() *RestoreRest {
	this := RestoreRest{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *RestoreRest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *RestoreRest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *RestoreRest) SetPassword(v string) {
	o.Password = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *RestoreRest) GetHost() HostRest {
	if o == nil || IsNil(o.Host) {
		var ret HostRest
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetHostOk() (*HostRest, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *RestoreRest) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostRest and assigns it to the Host field.
func (o *RestoreRest) SetHost(v HostRest) {
	o.Host = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *RestoreRest) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *RestoreRest) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *RestoreRest) SetLabel(v string) {
	o.Label = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *RestoreRest) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *RestoreRest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *RestoreRest) SetUsername(v string) {
	o.Username = &v
}

// GetCloudvmoptions returns the Cloudvmoptions field value if set, zero value otherwise.
func (o *RestoreRest) GetCloudvmoptions() CloudVmMountRest {
	if o == nil || IsNil(o.Cloudvmoptions) {
		var ret CloudVmMountRest
		return ret
	}
	return *o.Cloudvmoptions
}

// GetCloudvmoptionsOk returns a tuple with the Cloudvmoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetCloudvmoptionsOk() (*CloudVmMountRest, bool) {
	if o == nil || IsNil(o.Cloudvmoptions) {
		return nil, false
	}
	return o.Cloudvmoptions, true
}

// HasCloudvmoptions returns a boolean if a field has been set.
func (o *RestoreRest) HasCloudvmoptions() bool {
	if o != nil && !IsNil(o.Cloudvmoptions) {
		return true
	}

	return false
}

// SetCloudvmoptions gets a reference to the given CloudVmMountRest and assigns it to the Cloudvmoptions field.
func (o *RestoreRest) SetCloudvmoptions(v CloudVmMountRest) {
	o.Cloudvmoptions = &v
}

// GetRdmmode returns the Rdmmode field value if set, zero value otherwise.
func (o *RestoreRest) GetRdmmode() string {
	if o == nil || IsNil(o.Rdmmode) {
		var ret string
		return ret
	}
	return *o.Rdmmode
}

// GetRdmmodeOk returns a tuple with the Rdmmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetRdmmodeOk() (*string, bool) {
	if o == nil || IsNil(o.Rdmmode) {
		return nil, false
	}
	return o.Rdmmode, true
}

// HasRdmmode returns a boolean if a field has been set.
func (o *RestoreRest) HasRdmmode() bool {
	if o != nil && !IsNil(o.Rdmmode) {
		return true
	}

	return false
}

// SetRdmmode gets a reference to the given string and assigns it to the Rdmmode field.
func (o *RestoreRest) SetRdmmode(v string) {
	o.Rdmmode = &v
}

// GetPhysicalrdm returns the Physicalrdm field value if set, zero value otherwise.
func (o *RestoreRest) GetPhysicalrdm() string {
	if o == nil || IsNil(o.Physicalrdm) {
		var ret string
		return ret
	}
	return *o.Physicalrdm
}

// GetPhysicalrdmOk returns a tuple with the Physicalrdm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetPhysicalrdmOk() (*string, bool) {
	if o == nil || IsNil(o.Physicalrdm) {
		return nil, false
	}
	return o.Physicalrdm, true
}

// HasPhysicalrdm returns a boolean if a field has been set.
func (o *RestoreRest) HasPhysicalrdm() bool {
	if o != nil && !IsNil(o.Physicalrdm) {
		return true
	}

	return false
}

// SetPhysicalrdm gets a reference to the given string and assigns it to the Physicalrdm field.
func (o *RestoreRest) SetPhysicalrdm(v string) {
	o.Physicalrdm = &v
}

// GetTargetnode returns the Targetnode field value if set, zero value otherwise.
func (o *RestoreRest) GetTargetnode() string {
	if o == nil || IsNil(o.Targetnode) {
		var ret string
		return ret
	}
	return *o.Targetnode
}

// GetTargetnodeOk returns a tuple with the Targetnode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetTargetnodeOk() (*string, bool) {
	if o == nil || IsNil(o.Targetnode) {
		return nil, false
	}
	return o.Targetnode, true
}

// HasTargetnode returns a boolean if a field has been set.
func (o *RestoreRest) HasTargetnode() bool {
	if o != nil && !IsNil(o.Targetnode) {
		return true
	}

	return false
}

// SetTargetnode gets a reference to the given string and assigns it to the Targetnode field.
func (o *RestoreRest) SetTargetnode(v string) {
	o.Targetnode = &v
}

// GetReplacesource returns the Replacesource field value if set, zero value otherwise.
func (o *RestoreRest) GetReplacesource() bool {
	if o == nil || IsNil(o.Replacesource) {
		var ret bool
		return ret
	}
	return *o.Replacesource
}

// GetReplacesourceOk returns a tuple with the Replacesource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetReplacesourceOk() (*bool, bool) {
	if o == nil || IsNil(o.Replacesource) {
		return nil, false
	}
	return o.Replacesource, true
}

// HasReplacesource returns a boolean if a field has been set.
func (o *RestoreRest) HasReplacesource() bool {
	if o != nil && !IsNil(o.Replacesource) {
		return true
	}

	return false
}

// SetReplacesource gets a reference to the given bool and assigns it to the Replacesource field.
func (o *RestoreRest) SetReplacesource(v bool) {
	o.Replacesource = &v
}

// GetParts returns the Parts field value if set, zero value otherwise.
func (o *RestoreRest) GetParts() string {
	if o == nil || IsNil(o.Parts) {
		var ret string
		return ret
	}
	return *o.Parts
}

// GetPartsOk returns a tuple with the Parts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetPartsOk() (*string, bool) {
	if o == nil || IsNil(o.Parts) {
		return nil, false
	}
	return o.Parts, true
}

// HasParts returns a boolean if a field has been set.
func (o *RestoreRest) HasParts() bool {
	if o != nil && !IsNil(o.Parts) {
		return true
	}

	return false
}

// SetParts gets a reference to the given string and assigns it to the Parts field.
func (o *RestoreRest) SetParts(v string) {
	o.Parts = &v
}

// GetDatastore returns the Datastore field value if set, zero value otherwise.
func (o *RestoreRest) GetDatastore() string {
	if o == nil || IsNil(o.Datastore) {
		var ret string
		return ret
	}
	return *o.Datastore
}

// GetDatastoreOk returns a tuple with the Datastore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetDatastoreOk() (*string, bool) {
	if o == nil || IsNil(o.Datastore) {
		return nil, false
	}
	return o.Datastore, true
}

// HasDatastore returns a boolean if a field has been set.
func (o *RestoreRest) HasDatastore() bool {
	if o != nil && !IsNil(o.Datastore) {
		return true
	}

	return false
}

// SetDatastore gets a reference to the given string and assigns it to the Datastore field.
func (o *RestoreRest) SetDatastore(v string) {
	o.Datastore = &v
}

// GetRecover returns the Recover field value if set, zero value otherwise.
func (o *RestoreRest) GetRecover() bool {
	if o == nil || IsNil(o.Recover) {
		var ret bool
		return ret
	}
	return *o.Recover
}

// GetRecoverOk returns a tuple with the Recover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetRecoverOk() (*bool, bool) {
	if o == nil || IsNil(o.Recover) {
		return nil, false
	}
	return o.Recover, true
}

// HasRecover returns a boolean if a field has been set.
func (o *RestoreRest) HasRecover() bool {
	if o != nil && !IsNil(o.Recover) {
		return true
	}

	return false
}

// SetRecover gets a reference to the given bool and assigns it to the Recover field.
func (o *RestoreRest) SetRecover(v bool) {
	o.Recover = &v
}

// GetRecoverytime returns the Recoverytime field value if set, zero value otherwise.
func (o *RestoreRest) GetRecoverytime() int64 {
	if o == nil || IsNil(o.Recoverytime) {
		var ret int64
		return ret
	}
	return *o.Recoverytime
}

// GetRecoverytimeOk returns a tuple with the Recoverytime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetRecoverytimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Recoverytime) {
		return nil, false
	}
	return o.Recoverytime, true
}

// HasRecoverytime returns a boolean if a field has been set.
func (o *RestoreRest) HasRecoverytime() bool {
	if o != nil && !IsNil(o.Recoverytime) {
		return true
	}

	return false
}

// SetRecoverytime gets a reference to the given int64 and assigns it to the Recoverytime field.
func (o *RestoreRest) SetRecoverytime(v int64) {
	o.Recoverytime = &v
}

// GetPoweronvm returns the Poweronvm field value if set, zero value otherwise.
func (o *RestoreRest) GetPoweronvm() bool {
	if o == nil || IsNil(o.Poweronvm) {
		var ret bool
		return ret
	}
	return *o.Poweronvm
}

// GetPoweronvmOk returns a tuple with the Poweronvm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetPoweronvmOk() (*bool, bool) {
	if o == nil || IsNil(o.Poweronvm) {
		return nil, false
	}
	return o.Poweronvm, true
}

// HasPoweronvm returns a boolean if a field has been set.
func (o *RestoreRest) HasPoweronvm() bool {
	if o != nil && !IsNil(o.Poweronvm) {
		return true
	}

	return false
}

// SetPoweronvm gets a reference to the given bool and assigns it to the Poweronvm field.
func (o *RestoreRest) SetPoweronvm(v bool) {
	o.Poweronvm = &v
}

// GetScripts returns the Scripts field value if set, zero value otherwise.
func (o *RestoreRest) GetScripts() []ScriptRest {
	if o == nil || IsNil(o.Scripts) {
		var ret []ScriptRest
		return ret
	}
	return o.Scripts
}

// GetScriptsOk returns a tuple with the Scripts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetScriptsOk() ([]ScriptRest, bool) {
	if o == nil || IsNil(o.Scripts) {
		return nil, false
	}
	return o.Scripts, true
}

// HasScripts returns a boolean if a field has been set.
func (o *RestoreRest) HasScripts() bool {
	if o != nil && !IsNil(o.Scripts) {
		return true
	}

	return false
}

// SetScripts gets a reference to the given []ScriptRest and assigns it to the Scripts field.
func (o *RestoreRest) SetScripts(v []ScriptRest) {
	o.Scripts = v
}

// GetRestoreobjectmappings returns the Restoreobjectmappings field value if set, zero value otherwise.
func (o *RestoreRest) GetRestoreobjectmappings() []RestoreObjectMappingRest {
	if o == nil || IsNil(o.Restoreobjectmappings) {
		var ret []RestoreObjectMappingRest
		return ret
	}
	return o.Restoreobjectmappings
}

// GetRestoreobjectmappingsOk returns a tuple with the Restoreobjectmappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetRestoreobjectmappingsOk() ([]RestoreObjectMappingRest, bool) {
	if o == nil || IsNil(o.Restoreobjectmappings) {
		return nil, false
	}
	return o.Restoreobjectmappings, true
}

// HasRestoreobjectmappings returns a boolean if a field has been set.
func (o *RestoreRest) HasRestoreobjectmappings() bool {
	if o != nil && !IsNil(o.Restoreobjectmappings) {
		return true
	}

	return false
}

// SetRestoreobjectmappings gets a reference to the given []RestoreObjectMappingRest and assigns it to the Restoreobjectmappings field.
func (o *RestoreRest) SetRestoreobjectmappings(v []RestoreObjectMappingRest) {
	o.Restoreobjectmappings = v
}

// GetRestoreoptions returns the Restoreoptions field value if set, zero value otherwise.
func (o *RestoreRest) GetRestoreoptions() []RestoreOptionRest {
	if o == nil || IsNil(o.Restoreoptions) {
		var ret []RestoreOptionRest
		return ret
	}
	return o.Restoreoptions
}

// GetRestoreoptionsOk returns a tuple with the Restoreoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetRestoreoptionsOk() ([]RestoreOptionRest, bool) {
	if o == nil || IsNil(o.Restoreoptions) {
		return nil, false
	}
	return o.Restoreoptions, true
}

// HasRestoreoptions returns a boolean if a field has been set.
func (o *RestoreRest) HasRestoreoptions() bool {
	if o != nil && !IsNil(o.Restoreoptions) {
		return true
	}

	return false
}

// SetRestoreoptions gets a reference to the given []RestoreOptionRest and assigns it to the Restoreoptions field.
func (o *RestoreRest) SetRestoreoptions(v []RestoreOptionRest) {
	o.Restoreoptions = v
}

// GetProvisioningoptions returns the Provisioningoptions field value if set, zero value otherwise.
func (o *RestoreRest) GetProvisioningoptions() []ProvisioningOptionRest {
	if o == nil || IsNil(o.Provisioningoptions) {
		var ret []ProvisioningOptionRest
		return ret
	}
	return o.Provisioningoptions
}

// GetProvisioningoptionsOk returns a tuple with the Provisioningoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetProvisioningoptionsOk() ([]ProvisioningOptionRest, bool) {
	if o == nil || IsNil(o.Provisioningoptions) {
		return nil, false
	}
	return o.Provisioningoptions, true
}

// HasProvisioningoptions returns a boolean if a field has been set.
func (o *RestoreRest) HasProvisioningoptions() bool {
	if o != nil && !IsNil(o.Provisioningoptions) {
		return true
	}

	return false
}

// SetProvisioningoptions gets a reference to the given []ProvisioningOptionRest and assigns it to the Provisioningoptions field.
func (o *RestoreRest) SetProvisioningoptions(v []ProvisioningOptionRest) {
	o.Provisioningoptions = v
}

// GetSelectedobjects returns the Selectedobjects field value if set, zero value otherwise.
func (o *RestoreRest) GetSelectedobjects() []SelectedObjectRest {
	if o == nil || IsNil(o.Selectedobjects) {
		var ret []SelectedObjectRest
		return ret
	}
	return o.Selectedobjects
}

// GetSelectedobjectsOk returns a tuple with the Selectedobjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetSelectedobjectsOk() ([]SelectedObjectRest, bool) {
	if o == nil || IsNil(o.Selectedobjects) {
		return nil, false
	}
	return o.Selectedobjects, true
}

// HasSelectedobjects returns a boolean if a field has been set.
func (o *RestoreRest) HasSelectedobjects() bool {
	if o != nil && !IsNil(o.Selectedobjects) {
		return true
	}

	return false
}

// SetSelectedobjects gets a reference to the given []SelectedObjectRest and assigns it to the Selectedobjects field.
func (o *RestoreRest) SetSelectedobjects(v []SelectedObjectRest) {
	o.Selectedobjects = v
}

// GetNfsoptions returns the Nfsoptions field value if set, zero value otherwise.
func (o *RestoreRest) GetNfsoptions() NfsOptionsRest {
	if o == nil || IsNil(o.Nfsoptions) {
		var ret NfsOptionsRest
		return ret
	}
	return *o.Nfsoptions
}

// GetNfsoptionsOk returns a tuple with the Nfsoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetNfsoptionsOk() (*NfsOptionsRest, bool) {
	if o == nil || IsNil(o.Nfsoptions) {
		return nil, false
	}
	return o.Nfsoptions, true
}

// HasNfsoptions returns a boolean if a field has been set.
func (o *RestoreRest) HasNfsoptions() bool {
	if o != nil && !IsNil(o.Nfsoptions) {
		return true
	}

	return false
}

// SetNfsoptions gets a reference to the given NfsOptionsRest and assigns it to the Nfsoptions field.
func (o *RestoreRest) SetNfsoptions(v NfsOptionsRest) {
	o.Nfsoptions = &v
}

// GetInstantmount returns the Instantmount field value if set, zero value otherwise.
func (o *RestoreRest) GetInstantmount() bool {
	if o == nil || IsNil(o.Instantmount) {
		var ret bool
		return ret
	}
	return *o.Instantmount
}

// GetInstantmountOk returns a tuple with the Instantmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetInstantmountOk() (*bool, bool) {
	if o == nil || IsNil(o.Instantmount) {
		return nil, false
	}
	return o.Instantmount, true
}

// HasInstantmount returns a boolean if a field has been set.
func (o *RestoreRest) HasInstantmount() bool {
	if o != nil && !IsNil(o.Instantmount) {
		return true
	}

	return false
}

// SetInstantmount gets a reference to the given bool and assigns it to the Instantmount field.
func (o *RestoreRest) SetInstantmount(v bool) {
	o.Instantmount = &v
}

// GetNotdisableschedule returns the Notdisableschedule field value if set, zero value otherwise.
func (o *RestoreRest) GetNotdisableschedule() bool {
	if o == nil || IsNil(o.Notdisableschedule) {
		var ret bool
		return ret
	}
	return *o.Notdisableschedule
}

// GetNotdisablescheduleOk returns a tuple with the Notdisableschedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetNotdisablescheduleOk() (*bool, bool) {
	if o == nil || IsNil(o.Notdisableschedule) {
		return nil, false
	}
	return o.Notdisableschedule, true
}

// HasNotdisableschedule returns a boolean if a field has been set.
func (o *RestoreRest) HasNotdisableschedule() bool {
	if o != nil && !IsNil(o.Notdisableschedule) {
		return true
	}

	return false
}

// SetNotdisableschedule gets a reference to the given bool and assigns it to the Notdisableschedule field.
func (o *RestoreRest) SetNotdisableschedule(v bool) {
	o.Notdisableschedule = &v
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *RestoreRest) GetContainer() bool {
	if o == nil || IsNil(o.Container) {
		var ret bool
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetContainerOk() (*bool, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *RestoreRest) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given bool and assigns it to the Container field.
func (o *RestoreRest) SetContainer(v bool) {
	o.Container = &v
}

// GetAllowedips returns the Allowedips field value if set, zero value otherwise.
func (o *RestoreRest) GetAllowedips() []string {
	if o == nil || IsNil(o.Allowedips) {
		var ret []string
		return ret
	}
	return o.Allowedips
}

// GetAllowedipsOk returns a tuple with the Allowedips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetAllowedipsOk() ([]string, bool) {
	if o == nil || IsNil(o.Allowedips) {
		return nil, false
	}
	return o.Allowedips, true
}

// HasAllowedips returns a boolean if a field has been set.
func (o *RestoreRest) HasAllowedips() bool {
	if o != nil && !IsNil(o.Allowedips) {
		return true
	}

	return false
}

// SetAllowedips gets a reference to the given []string and assigns it to the Allowedips field.
func (o *RestoreRest) SetAllowedips(v []string) {
	o.Allowedips = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RestoreRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RestoreRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RestoreRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *RestoreRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *RestoreRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *RestoreRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *RestoreRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *RestoreRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *RestoreRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *RestoreRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RestoreRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *RestoreRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *RestoreRest) SetStale(v bool) {
	o.Stale = &v
}

func (o RestoreRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Cloudvmoptions) {
		toSerialize["cloudvmoptions"] = o.Cloudvmoptions
	}
	if !IsNil(o.Rdmmode) {
		toSerialize["rdmmode"] = o.Rdmmode
	}
	if !IsNil(o.Physicalrdm) {
		toSerialize["physicalrdm"] = o.Physicalrdm
	}
	if !IsNil(o.Targetnode) {
		toSerialize["targetnode"] = o.Targetnode
	}
	if !IsNil(o.Replacesource) {
		toSerialize["replacesource"] = o.Replacesource
	}
	if !IsNil(o.Parts) {
		toSerialize["parts"] = o.Parts
	}
	if !IsNil(o.Datastore) {
		toSerialize["datastore"] = o.Datastore
	}
	if !IsNil(o.Recover) {
		toSerialize["recover"] = o.Recover
	}
	if !IsNil(o.Recoverytime) {
		toSerialize["recoverytime"] = o.Recoverytime
	}
	if !IsNil(o.Poweronvm) {
		toSerialize["poweronvm"] = o.Poweronvm
	}
	if !IsNil(o.Scripts) {
		toSerialize["scripts"] = o.Scripts
	}
	if !IsNil(o.Restoreobjectmappings) {
		toSerialize["restoreobjectmappings"] = o.Restoreobjectmappings
	}
	if !IsNil(o.Restoreoptions) {
		toSerialize["restoreoptions"] = o.Restoreoptions
	}
	if !IsNil(o.Provisioningoptions) {
		toSerialize["provisioningoptions"] = o.Provisioningoptions
	}
	if !IsNil(o.Selectedobjects) {
		toSerialize["selectedobjects"] = o.Selectedobjects
	}
	if !IsNil(o.Nfsoptions) {
		toSerialize["nfsoptions"] = o.Nfsoptions
	}
	if !IsNil(o.Instantmount) {
		toSerialize["instantmount"] = o.Instantmount
	}
	if !IsNil(o.Notdisableschedule) {
		toSerialize["notdisableschedule"] = o.Notdisableschedule
	}
	if !IsNil(o.Container) {
		toSerialize["container"] = o.Container
	}
	if !IsNil(o.Allowedips) {
		toSerialize["allowedips"] = o.Allowedips
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableRestoreRest struct {
	value *RestoreRest
	isSet bool
}

func (v NullableRestoreRest) Get() *RestoreRest {
	return v.value
}

func (v *NullableRestoreRest) Set(val *RestoreRest) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreRest) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreRest(val *RestoreRest) *NullableRestoreRest {
	return &NullableRestoreRest{value: val, isSet: true}
}

func (v NullableRestoreRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


