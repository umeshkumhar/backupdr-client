/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VolumeSelectionRowRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeSelectionRowRest{}

// VolumeSelectionRowRest struct for VolumeSelectionRowRest
type VolumeSelectionRowRest struct {
	Volumeid *string `json:"volumeid,omitempty"`
	Devicename *string `json:"devicename,omitempty"`
	Disktype []ChoiceValueRest `json:"disktype,omitempty"`
	Sourcemountpath *string `json:"sourcemountpath,omitempty"`
	Devicetype *string `json:"devicetype,omitempty"`
	Deviceindex *string `json:"deviceindex,omitempty"`
	DisktypeDisabled *bool `json:"disktypeDisabled,omitempty"`
	Size *string `json:"size,omitempty"`
	Disabled *bool `json:"disabled,omitempty"`
	Selected *bool `json:"selected,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewVolumeSelectionRowRest instantiates a new VolumeSelectionRowRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeSelectionRowRest() *VolumeSelectionRowRest {
	this := VolumeSelectionRowRest{}
	return &this
}

// NewVolumeSelectionRowRestWithDefaults instantiates a new VolumeSelectionRowRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeSelectionRowRestWithDefaults() *VolumeSelectionRowRest {
	this := VolumeSelectionRowRest{}
	return &this
}

// GetVolumeid returns the Volumeid field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetVolumeid() string {
	if o == nil || IsNil(o.Volumeid) {
		var ret string
		return ret
	}
	return *o.Volumeid
}

// GetVolumeidOk returns a tuple with the Volumeid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetVolumeidOk() (*string, bool) {
	if o == nil || IsNil(o.Volumeid) {
		return nil, false
	}
	return o.Volumeid, true
}

// HasVolumeid returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasVolumeid() bool {
	if o != nil && !IsNil(o.Volumeid) {
		return true
	}

	return false
}

// SetVolumeid gets a reference to the given string and assigns it to the Volumeid field.
func (o *VolumeSelectionRowRest) SetVolumeid(v string) {
	o.Volumeid = &v
}

// GetDevicename returns the Devicename field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetDevicename() string {
	if o == nil || IsNil(o.Devicename) {
		var ret string
		return ret
	}
	return *o.Devicename
}

// GetDevicenameOk returns a tuple with the Devicename field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetDevicenameOk() (*string, bool) {
	if o == nil || IsNil(o.Devicename) {
		return nil, false
	}
	return o.Devicename, true
}

// HasDevicename returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasDevicename() bool {
	if o != nil && !IsNil(o.Devicename) {
		return true
	}

	return false
}

// SetDevicename gets a reference to the given string and assigns it to the Devicename field.
func (o *VolumeSelectionRowRest) SetDevicename(v string) {
	o.Devicename = &v
}

// GetDisktype returns the Disktype field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetDisktype() []ChoiceValueRest {
	if o == nil || IsNil(o.Disktype) {
		var ret []ChoiceValueRest
		return ret
	}
	return o.Disktype
}

// GetDisktypeOk returns a tuple with the Disktype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetDisktypeOk() ([]ChoiceValueRest, bool) {
	if o == nil || IsNil(o.Disktype) {
		return nil, false
	}
	return o.Disktype, true
}

// HasDisktype returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasDisktype() bool {
	if o != nil && !IsNil(o.Disktype) {
		return true
	}

	return false
}

// SetDisktype gets a reference to the given []ChoiceValueRest and assigns it to the Disktype field.
func (o *VolumeSelectionRowRest) SetDisktype(v []ChoiceValueRest) {
	o.Disktype = v
}

// GetSourcemountpath returns the Sourcemountpath field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetSourcemountpath() string {
	if o == nil || IsNil(o.Sourcemountpath) {
		var ret string
		return ret
	}
	return *o.Sourcemountpath
}

// GetSourcemountpathOk returns a tuple with the Sourcemountpath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetSourcemountpathOk() (*string, bool) {
	if o == nil || IsNil(o.Sourcemountpath) {
		return nil, false
	}
	return o.Sourcemountpath, true
}

// HasSourcemountpath returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasSourcemountpath() bool {
	if o != nil && !IsNil(o.Sourcemountpath) {
		return true
	}

	return false
}

// SetSourcemountpath gets a reference to the given string and assigns it to the Sourcemountpath field.
func (o *VolumeSelectionRowRest) SetSourcemountpath(v string) {
	o.Sourcemountpath = &v
}

// GetDevicetype returns the Devicetype field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetDevicetype() string {
	if o == nil || IsNil(o.Devicetype) {
		var ret string
		return ret
	}
	return *o.Devicetype
}

// GetDevicetypeOk returns a tuple with the Devicetype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetDevicetypeOk() (*string, bool) {
	if o == nil || IsNil(o.Devicetype) {
		return nil, false
	}
	return o.Devicetype, true
}

// HasDevicetype returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasDevicetype() bool {
	if o != nil && !IsNil(o.Devicetype) {
		return true
	}

	return false
}

// SetDevicetype gets a reference to the given string and assigns it to the Devicetype field.
func (o *VolumeSelectionRowRest) SetDevicetype(v string) {
	o.Devicetype = &v
}

// GetDeviceindex returns the Deviceindex field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetDeviceindex() string {
	if o == nil || IsNil(o.Deviceindex) {
		var ret string
		return ret
	}
	return *o.Deviceindex
}

// GetDeviceindexOk returns a tuple with the Deviceindex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetDeviceindexOk() (*string, bool) {
	if o == nil || IsNil(o.Deviceindex) {
		return nil, false
	}
	return o.Deviceindex, true
}

// HasDeviceindex returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasDeviceindex() bool {
	if o != nil && !IsNil(o.Deviceindex) {
		return true
	}

	return false
}

// SetDeviceindex gets a reference to the given string and assigns it to the Deviceindex field.
func (o *VolumeSelectionRowRest) SetDeviceindex(v string) {
	o.Deviceindex = &v
}

// GetDisktypeDisabled returns the DisktypeDisabled field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetDisktypeDisabled() bool {
	if o == nil || IsNil(o.DisktypeDisabled) {
		var ret bool
		return ret
	}
	return *o.DisktypeDisabled
}

// GetDisktypeDisabledOk returns a tuple with the DisktypeDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetDisktypeDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.DisktypeDisabled) {
		return nil, false
	}
	return o.DisktypeDisabled, true
}

// HasDisktypeDisabled returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasDisktypeDisabled() bool {
	if o != nil && !IsNil(o.DisktypeDisabled) {
		return true
	}

	return false
}

// SetDisktypeDisabled gets a reference to the given bool and assigns it to the DisktypeDisabled field.
func (o *VolumeSelectionRowRest) SetDisktypeDisabled(v bool) {
	o.DisktypeDisabled = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *VolumeSelectionRowRest) SetSize(v string) {
	o.Size = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetDisabled() bool {
	if o == nil || IsNil(o.Disabled) {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Disabled) {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasDisabled() bool {
	if o != nil && !IsNil(o.Disabled) {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *VolumeSelectionRowRest) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetSelected returns the Selected field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetSelected() bool {
	if o == nil || IsNil(o.Selected) {
		var ret bool
		return ret
	}
	return *o.Selected
}

// GetSelectedOk returns a tuple with the Selected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetSelectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Selected) {
		return nil, false
	}
	return o.Selected, true
}

// HasSelected returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasSelected() bool {
	if o != nil && !IsNil(o.Selected) {
		return true
	}

	return false
}

// SetSelected gets a reference to the given bool and assigns it to the Selected field.
func (o *VolumeSelectionRowRest) SetSelected(v bool) {
	o.Selected = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VolumeSelectionRowRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *VolumeSelectionRowRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *VolumeSelectionRowRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *VolumeSelectionRowRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSelectionRowRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *VolumeSelectionRowRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *VolumeSelectionRowRest) SetStale(v bool) {
	o.Stale = &v
}

func (o VolumeSelectionRowRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeSelectionRowRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Volumeid) {
		toSerialize["volumeid"] = o.Volumeid
	}
	if !IsNil(o.Devicename) {
		toSerialize["devicename"] = o.Devicename
	}
	if !IsNil(o.Disktype) {
		toSerialize["disktype"] = o.Disktype
	}
	if !IsNil(o.Sourcemountpath) {
		toSerialize["sourcemountpath"] = o.Sourcemountpath
	}
	if !IsNil(o.Devicetype) {
		toSerialize["devicetype"] = o.Devicetype
	}
	if !IsNil(o.Deviceindex) {
		toSerialize["deviceindex"] = o.Deviceindex
	}
	if !IsNil(o.DisktypeDisabled) {
		toSerialize["disktypeDisabled"] = o.DisktypeDisabled
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Disabled) {
		toSerialize["disabled"] = o.Disabled
	}
	if !IsNil(o.Selected) {
		toSerialize["selected"] = o.Selected
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableVolumeSelectionRowRest struct {
	value *VolumeSelectionRowRest
	isSet bool
}

func (v NullableVolumeSelectionRowRest) Get() *VolumeSelectionRowRest {
	return v.value
}

func (v *NullableVolumeSelectionRowRest) Set(val *VolumeSelectionRowRest) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeSelectionRowRest) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeSelectionRowRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeSelectionRowRest(val *VolumeSelectionRowRest) *NullableVolumeSelectionRowRest {
	return &NullableVolumeSelectionRowRest{value: val, isSet: true}
}

func (v NullableVolumeSelectionRowRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeSelectionRowRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


