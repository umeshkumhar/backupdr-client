/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PreflightRestoreOptionsRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreflightRestoreOptionsRest{}

// PreflightRestoreOptionsRest struct for PreflightRestoreOptionsRest
type PreflightRestoreOptionsRest struct {
	Ctrltarget *string `json:"ctrltarget,omitempty"`
	Redotarget *string `json:"redotarget,omitempty"`
	Targettype *string `json:"targettype,omitempty"`
	Standalone *string `json:"standalone,omitempty"`
	Migrationmapping *string `json:"migrationmapping,omitempty"`
	Copythreadcount *string `json:"copythreadcount,omitempty"`
	Asmracnodelist *string `json:"asmracnodelist,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewPreflightRestoreOptionsRest instantiates a new PreflightRestoreOptionsRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreflightRestoreOptionsRest() *PreflightRestoreOptionsRest {
	this := PreflightRestoreOptionsRest{}
	return &this
}

// NewPreflightRestoreOptionsRestWithDefaults instantiates a new PreflightRestoreOptionsRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreflightRestoreOptionsRestWithDefaults() *PreflightRestoreOptionsRest {
	this := PreflightRestoreOptionsRest{}
	return &this
}

// GetCtrltarget returns the Ctrltarget field value if set, zero value otherwise.
func (o *PreflightRestoreOptionsRest) GetCtrltarget() string {
	if o == nil || IsNil(o.Ctrltarget) {
		var ret string
		return ret
	}
	return *o.Ctrltarget
}

// GetCtrltargetOk returns a tuple with the Ctrltarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreflightRestoreOptionsRest) GetCtrltargetOk() (*string, bool) {
	if o == nil || IsNil(o.Ctrltarget) {
		return nil, false
	}
	return o.Ctrltarget, true
}

// HasCtrltarget returns a boolean if a field has been set.
func (o *PreflightRestoreOptionsRest) HasCtrltarget() bool {
	if o != nil && !IsNil(o.Ctrltarget) {
		return true
	}

	return false
}

// SetCtrltarget gets a reference to the given string and assigns it to the Ctrltarget field.
func (o *PreflightRestoreOptionsRest) SetCtrltarget(v string) {
	o.Ctrltarget = &v
}

// GetRedotarget returns the Redotarget field value if set, zero value otherwise.
func (o *PreflightRestoreOptionsRest) GetRedotarget() string {
	if o == nil || IsNil(o.Redotarget) {
		var ret string
		return ret
	}
	return *o.Redotarget
}

// GetRedotargetOk returns a tuple with the Redotarget field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreflightRestoreOptionsRest) GetRedotargetOk() (*string, bool) {
	if o == nil || IsNil(o.Redotarget) {
		return nil, false
	}
	return o.Redotarget, true
}

// HasRedotarget returns a boolean if a field has been set.
func (o *PreflightRestoreOptionsRest) HasRedotarget() bool {
	if o != nil && !IsNil(o.Redotarget) {
		return true
	}

	return false
}

// SetRedotarget gets a reference to the given string and assigns it to the Redotarget field.
func (o *PreflightRestoreOptionsRest) SetRedotarget(v string) {
	o.Redotarget = &v
}

// GetTargettype returns the Targettype field value if set, zero value otherwise.
func (o *PreflightRestoreOptionsRest) GetTargettype() string {
	if o == nil || IsNil(o.Targettype) {
		var ret string
		return ret
	}
	return *o.Targettype
}

// GetTargettypeOk returns a tuple with the Targettype field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreflightRestoreOptionsRest) GetTargettypeOk() (*string, bool) {
	if o == nil || IsNil(o.Targettype) {
		return nil, false
	}
	return o.Targettype, true
}

// HasTargettype returns a boolean if a field has been set.
func (o *PreflightRestoreOptionsRest) HasTargettype() bool {
	if o != nil && !IsNil(o.Targettype) {
		return true
	}

	return false
}

// SetTargettype gets a reference to the given string and assigns it to the Targettype field.
func (o *PreflightRestoreOptionsRest) SetTargettype(v string) {
	o.Targettype = &v
}

// GetStandalone returns the Standalone field value if set, zero value otherwise.
func (o *PreflightRestoreOptionsRest) GetStandalone() string {
	if o == nil || IsNil(o.Standalone) {
		var ret string
		return ret
	}
	return *o.Standalone
}

// GetStandaloneOk returns a tuple with the Standalone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreflightRestoreOptionsRest) GetStandaloneOk() (*string, bool) {
	if o == nil || IsNil(o.Standalone) {
		return nil, false
	}
	return o.Standalone, true
}

// HasStandalone returns a boolean if a field has been set.
func (o *PreflightRestoreOptionsRest) HasStandalone() bool {
	if o != nil && !IsNil(o.Standalone) {
		return true
	}

	return false
}

// SetStandalone gets a reference to the given string and assigns it to the Standalone field.
func (o *PreflightRestoreOptionsRest) SetStandalone(v string) {
	o.Standalone = &v
}

// GetMigrationmapping returns the Migrationmapping field value if set, zero value otherwise.
func (o *PreflightRestoreOptionsRest) GetMigrationmapping() string {
	if o == nil || IsNil(o.Migrationmapping) {
		var ret string
		return ret
	}
	return *o.Migrationmapping
}

// GetMigrationmappingOk returns a tuple with the Migrationmapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreflightRestoreOptionsRest) GetMigrationmappingOk() (*string, bool) {
	if o == nil || IsNil(o.Migrationmapping) {
		return nil, false
	}
	return o.Migrationmapping, true
}

// HasMigrationmapping returns a boolean if a field has been set.
func (o *PreflightRestoreOptionsRest) HasMigrationmapping() bool {
	if o != nil && !IsNil(o.Migrationmapping) {
		return true
	}

	return false
}

// SetMigrationmapping gets a reference to the given string and assigns it to the Migrationmapping field.
func (o *PreflightRestoreOptionsRest) SetMigrationmapping(v string) {
	o.Migrationmapping = &v
}

// GetCopythreadcount returns the Copythreadcount field value if set, zero value otherwise.
func (o *PreflightRestoreOptionsRest) GetCopythreadcount() string {
	if o == nil || IsNil(o.Copythreadcount) {
		var ret string
		return ret
	}
	return *o.Copythreadcount
}

// GetCopythreadcountOk returns a tuple with the Copythreadcount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreflightRestoreOptionsRest) GetCopythreadcountOk() (*string, bool) {
	if o == nil || IsNil(o.Copythreadcount) {
		return nil, false
	}
	return o.Copythreadcount, true
}

// HasCopythreadcount returns a boolean if a field has been set.
func (o *PreflightRestoreOptionsRest) HasCopythreadcount() bool {
	if o != nil && !IsNil(o.Copythreadcount) {
		return true
	}

	return false
}

// SetCopythreadcount gets a reference to the given string and assigns it to the Copythreadcount field.
func (o *PreflightRestoreOptionsRest) SetCopythreadcount(v string) {
	o.Copythreadcount = &v
}

// GetAsmracnodelist returns the Asmracnodelist field value if set, zero value otherwise.
func (o *PreflightRestoreOptionsRest) GetAsmracnodelist() string {
	if o == nil || IsNil(o.Asmracnodelist) {
		var ret string
		return ret
	}
	return *o.Asmracnodelist
}

// GetAsmracnodelistOk returns a tuple with the Asmracnodelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreflightRestoreOptionsRest) GetAsmracnodelistOk() (*string, bool) {
	if o == nil || IsNil(o.Asmracnodelist) {
		return nil, false
	}
	return o.Asmracnodelist, true
}

// HasAsmracnodelist returns a boolean if a field has been set.
func (o *PreflightRestoreOptionsRest) HasAsmracnodelist() bool {
	if o != nil && !IsNil(o.Asmracnodelist) {
		return true
	}

	return false
}

// SetAsmracnodelist gets a reference to the given string and assigns it to the Asmracnodelist field.
func (o *PreflightRestoreOptionsRest) SetAsmracnodelist(v string) {
	o.Asmracnodelist = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PreflightRestoreOptionsRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreflightRestoreOptionsRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PreflightRestoreOptionsRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PreflightRestoreOptionsRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *PreflightRestoreOptionsRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreflightRestoreOptionsRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *PreflightRestoreOptionsRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *PreflightRestoreOptionsRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *PreflightRestoreOptionsRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreflightRestoreOptionsRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *PreflightRestoreOptionsRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *PreflightRestoreOptionsRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *PreflightRestoreOptionsRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreflightRestoreOptionsRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *PreflightRestoreOptionsRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *PreflightRestoreOptionsRest) SetStale(v bool) {
	o.Stale = &v
}

func (o PreflightRestoreOptionsRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreflightRestoreOptionsRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ctrltarget) {
		toSerialize["ctrltarget"] = o.Ctrltarget
	}
	if !IsNil(o.Redotarget) {
		toSerialize["redotarget"] = o.Redotarget
	}
	if !IsNil(o.Targettype) {
		toSerialize["targettype"] = o.Targettype
	}
	if !IsNil(o.Standalone) {
		toSerialize["standalone"] = o.Standalone
	}
	if !IsNil(o.Migrationmapping) {
		toSerialize["migrationmapping"] = o.Migrationmapping
	}
	if !IsNil(o.Copythreadcount) {
		toSerialize["copythreadcount"] = o.Copythreadcount
	}
	if !IsNil(o.Asmracnodelist) {
		toSerialize["asmracnodelist"] = o.Asmracnodelist
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullablePreflightRestoreOptionsRest struct {
	value *PreflightRestoreOptionsRest
	isSet bool
}

func (v NullablePreflightRestoreOptionsRest) Get() *PreflightRestoreOptionsRest {
	return v.value
}

func (v *NullablePreflightRestoreOptionsRest) Set(val *PreflightRestoreOptionsRest) {
	v.value = val
	v.isSet = true
}

func (v NullablePreflightRestoreOptionsRest) IsSet() bool {
	return v.isSet
}

func (v *NullablePreflightRestoreOptionsRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreflightRestoreOptionsRest(val *PreflightRestoreOptionsRest) *NullablePreflightRestoreOptionsRest {
	return &NullablePreflightRestoreOptionsRest{value: val, isSet: true}
}

func (v NullablePreflightRestoreOptionsRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreflightRestoreOptionsRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


