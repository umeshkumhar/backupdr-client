/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PrepmountRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrepmountRest{}

// PrepmountRest struct for PrepmountRest
type PrepmountRest struct {
	Host *HostRest `json:"host,omitempty"`
	Rdmmode *string `json:"rdmmode,omitempty"`
	Physicalrdm *string `json:"physicalrdm,omitempty"`
	Appaware *bool `json:"appaware,omitempty"`
	Recoverytime *int64 `json:"recoverytime,omitempty"`
	Scripts []ScriptRest `json:"scripts,omitempty"`
	Restoreobjectmappings []RestoreObjectMappingRest `json:"restoreobjectmappings,omitempty"`
	Restoreoptions []RestoreOptionRest `json:"restoreoptions,omitempty"`
	Provisioningoptions []ProvisioningOptionRest `json:"provisioningoptions,omitempty"`
	Selectedobjects []SelectedObjectRest `json:"selectedobjects,omitempty"`
	Nfsoptions *NfsOptionsRest `json:"nfsoptions,omitempty"`
	Instantmount *bool `json:"instantmount,omitempty"`
	Container *bool `json:"container,omitempty"`
	Allowedips []string `json:"allowedips,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewPrepmountRest instantiates a new PrepmountRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrepmountRest() *PrepmountRest {
	this := PrepmountRest{}
	return &this
}

// NewPrepmountRestWithDefaults instantiates a new PrepmountRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrepmountRestWithDefaults() *PrepmountRest {
	this := PrepmountRest{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *PrepmountRest) GetHost() HostRest {
	if o == nil || IsNil(o.Host) {
		var ret HostRest
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetHostOk() (*HostRest, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *PrepmountRest) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostRest and assigns it to the Host field.
func (o *PrepmountRest) SetHost(v HostRest) {
	o.Host = &v
}

// GetRdmmode returns the Rdmmode field value if set, zero value otherwise.
func (o *PrepmountRest) GetRdmmode() string {
	if o == nil || IsNil(o.Rdmmode) {
		var ret string
		return ret
	}
	return *o.Rdmmode
}

// GetRdmmodeOk returns a tuple with the Rdmmode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetRdmmodeOk() (*string, bool) {
	if o == nil || IsNil(o.Rdmmode) {
		return nil, false
	}
	return o.Rdmmode, true
}

// HasRdmmode returns a boolean if a field has been set.
func (o *PrepmountRest) HasRdmmode() bool {
	if o != nil && !IsNil(o.Rdmmode) {
		return true
	}

	return false
}

// SetRdmmode gets a reference to the given string and assigns it to the Rdmmode field.
func (o *PrepmountRest) SetRdmmode(v string) {
	o.Rdmmode = &v
}

// GetPhysicalrdm returns the Physicalrdm field value if set, zero value otherwise.
func (o *PrepmountRest) GetPhysicalrdm() string {
	if o == nil || IsNil(o.Physicalrdm) {
		var ret string
		return ret
	}
	return *o.Physicalrdm
}

// GetPhysicalrdmOk returns a tuple with the Physicalrdm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetPhysicalrdmOk() (*string, bool) {
	if o == nil || IsNil(o.Physicalrdm) {
		return nil, false
	}
	return o.Physicalrdm, true
}

// HasPhysicalrdm returns a boolean if a field has been set.
func (o *PrepmountRest) HasPhysicalrdm() bool {
	if o != nil && !IsNil(o.Physicalrdm) {
		return true
	}

	return false
}

// SetPhysicalrdm gets a reference to the given string and assigns it to the Physicalrdm field.
func (o *PrepmountRest) SetPhysicalrdm(v string) {
	o.Physicalrdm = &v
}

// GetAppaware returns the Appaware field value if set, zero value otherwise.
func (o *PrepmountRest) GetAppaware() bool {
	if o == nil || IsNil(o.Appaware) {
		var ret bool
		return ret
	}
	return *o.Appaware
}

// GetAppawareOk returns a tuple with the Appaware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetAppawareOk() (*bool, bool) {
	if o == nil || IsNil(o.Appaware) {
		return nil, false
	}
	return o.Appaware, true
}

// HasAppaware returns a boolean if a field has been set.
func (o *PrepmountRest) HasAppaware() bool {
	if o != nil && !IsNil(o.Appaware) {
		return true
	}

	return false
}

// SetAppaware gets a reference to the given bool and assigns it to the Appaware field.
func (o *PrepmountRest) SetAppaware(v bool) {
	o.Appaware = &v
}

// GetRecoverytime returns the Recoverytime field value if set, zero value otherwise.
func (o *PrepmountRest) GetRecoverytime() int64 {
	if o == nil || IsNil(o.Recoverytime) {
		var ret int64
		return ret
	}
	return *o.Recoverytime
}

// GetRecoverytimeOk returns a tuple with the Recoverytime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetRecoverytimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Recoverytime) {
		return nil, false
	}
	return o.Recoverytime, true
}

// HasRecoverytime returns a boolean if a field has been set.
func (o *PrepmountRest) HasRecoverytime() bool {
	if o != nil && !IsNil(o.Recoverytime) {
		return true
	}

	return false
}

// SetRecoverytime gets a reference to the given int64 and assigns it to the Recoverytime field.
func (o *PrepmountRest) SetRecoverytime(v int64) {
	o.Recoverytime = &v
}

// GetScripts returns the Scripts field value if set, zero value otherwise.
func (o *PrepmountRest) GetScripts() []ScriptRest {
	if o == nil || IsNil(o.Scripts) {
		var ret []ScriptRest
		return ret
	}
	return o.Scripts
}

// GetScriptsOk returns a tuple with the Scripts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetScriptsOk() ([]ScriptRest, bool) {
	if o == nil || IsNil(o.Scripts) {
		return nil, false
	}
	return o.Scripts, true
}

// HasScripts returns a boolean if a field has been set.
func (o *PrepmountRest) HasScripts() bool {
	if o != nil && !IsNil(o.Scripts) {
		return true
	}

	return false
}

// SetScripts gets a reference to the given []ScriptRest and assigns it to the Scripts field.
func (o *PrepmountRest) SetScripts(v []ScriptRest) {
	o.Scripts = v
}

// GetRestoreobjectmappings returns the Restoreobjectmappings field value if set, zero value otherwise.
func (o *PrepmountRest) GetRestoreobjectmappings() []RestoreObjectMappingRest {
	if o == nil || IsNil(o.Restoreobjectmappings) {
		var ret []RestoreObjectMappingRest
		return ret
	}
	return o.Restoreobjectmappings
}

// GetRestoreobjectmappingsOk returns a tuple with the Restoreobjectmappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetRestoreobjectmappingsOk() ([]RestoreObjectMappingRest, bool) {
	if o == nil || IsNil(o.Restoreobjectmappings) {
		return nil, false
	}
	return o.Restoreobjectmappings, true
}

// HasRestoreobjectmappings returns a boolean if a field has been set.
func (o *PrepmountRest) HasRestoreobjectmappings() bool {
	if o != nil && !IsNil(o.Restoreobjectmappings) {
		return true
	}

	return false
}

// SetRestoreobjectmappings gets a reference to the given []RestoreObjectMappingRest and assigns it to the Restoreobjectmappings field.
func (o *PrepmountRest) SetRestoreobjectmappings(v []RestoreObjectMappingRest) {
	o.Restoreobjectmappings = v
}

// GetRestoreoptions returns the Restoreoptions field value if set, zero value otherwise.
func (o *PrepmountRest) GetRestoreoptions() []RestoreOptionRest {
	if o == nil || IsNil(o.Restoreoptions) {
		var ret []RestoreOptionRest
		return ret
	}
	return o.Restoreoptions
}

// GetRestoreoptionsOk returns a tuple with the Restoreoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetRestoreoptionsOk() ([]RestoreOptionRest, bool) {
	if o == nil || IsNil(o.Restoreoptions) {
		return nil, false
	}
	return o.Restoreoptions, true
}

// HasRestoreoptions returns a boolean if a field has been set.
func (o *PrepmountRest) HasRestoreoptions() bool {
	if o != nil && !IsNil(o.Restoreoptions) {
		return true
	}

	return false
}

// SetRestoreoptions gets a reference to the given []RestoreOptionRest and assigns it to the Restoreoptions field.
func (o *PrepmountRest) SetRestoreoptions(v []RestoreOptionRest) {
	o.Restoreoptions = v
}

// GetProvisioningoptions returns the Provisioningoptions field value if set, zero value otherwise.
func (o *PrepmountRest) GetProvisioningoptions() []ProvisioningOptionRest {
	if o == nil || IsNil(o.Provisioningoptions) {
		var ret []ProvisioningOptionRest
		return ret
	}
	return o.Provisioningoptions
}

// GetProvisioningoptionsOk returns a tuple with the Provisioningoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetProvisioningoptionsOk() ([]ProvisioningOptionRest, bool) {
	if o == nil || IsNil(o.Provisioningoptions) {
		return nil, false
	}
	return o.Provisioningoptions, true
}

// HasProvisioningoptions returns a boolean if a field has been set.
func (o *PrepmountRest) HasProvisioningoptions() bool {
	if o != nil && !IsNil(o.Provisioningoptions) {
		return true
	}

	return false
}

// SetProvisioningoptions gets a reference to the given []ProvisioningOptionRest and assigns it to the Provisioningoptions field.
func (o *PrepmountRest) SetProvisioningoptions(v []ProvisioningOptionRest) {
	o.Provisioningoptions = v
}

// GetSelectedobjects returns the Selectedobjects field value if set, zero value otherwise.
func (o *PrepmountRest) GetSelectedobjects() []SelectedObjectRest {
	if o == nil || IsNil(o.Selectedobjects) {
		var ret []SelectedObjectRest
		return ret
	}
	return o.Selectedobjects
}

// GetSelectedobjectsOk returns a tuple with the Selectedobjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetSelectedobjectsOk() ([]SelectedObjectRest, bool) {
	if o == nil || IsNil(o.Selectedobjects) {
		return nil, false
	}
	return o.Selectedobjects, true
}

// HasSelectedobjects returns a boolean if a field has been set.
func (o *PrepmountRest) HasSelectedobjects() bool {
	if o != nil && !IsNil(o.Selectedobjects) {
		return true
	}

	return false
}

// SetSelectedobjects gets a reference to the given []SelectedObjectRest and assigns it to the Selectedobjects field.
func (o *PrepmountRest) SetSelectedobjects(v []SelectedObjectRest) {
	o.Selectedobjects = v
}

// GetNfsoptions returns the Nfsoptions field value if set, zero value otherwise.
func (o *PrepmountRest) GetNfsoptions() NfsOptionsRest {
	if o == nil || IsNil(o.Nfsoptions) {
		var ret NfsOptionsRest
		return ret
	}
	return *o.Nfsoptions
}

// GetNfsoptionsOk returns a tuple with the Nfsoptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetNfsoptionsOk() (*NfsOptionsRest, bool) {
	if o == nil || IsNil(o.Nfsoptions) {
		return nil, false
	}
	return o.Nfsoptions, true
}

// HasNfsoptions returns a boolean if a field has been set.
func (o *PrepmountRest) HasNfsoptions() bool {
	if o != nil && !IsNil(o.Nfsoptions) {
		return true
	}

	return false
}

// SetNfsoptions gets a reference to the given NfsOptionsRest and assigns it to the Nfsoptions field.
func (o *PrepmountRest) SetNfsoptions(v NfsOptionsRest) {
	o.Nfsoptions = &v
}

// GetInstantmount returns the Instantmount field value if set, zero value otherwise.
func (o *PrepmountRest) GetInstantmount() bool {
	if o == nil || IsNil(o.Instantmount) {
		var ret bool
		return ret
	}
	return *o.Instantmount
}

// GetInstantmountOk returns a tuple with the Instantmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetInstantmountOk() (*bool, bool) {
	if o == nil || IsNil(o.Instantmount) {
		return nil, false
	}
	return o.Instantmount, true
}

// HasInstantmount returns a boolean if a field has been set.
func (o *PrepmountRest) HasInstantmount() bool {
	if o != nil && !IsNil(o.Instantmount) {
		return true
	}

	return false
}

// SetInstantmount gets a reference to the given bool and assigns it to the Instantmount field.
func (o *PrepmountRest) SetInstantmount(v bool) {
	o.Instantmount = &v
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *PrepmountRest) GetContainer() bool {
	if o == nil || IsNil(o.Container) {
		var ret bool
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetContainerOk() (*bool, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *PrepmountRest) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given bool and assigns it to the Container field.
func (o *PrepmountRest) SetContainer(v bool) {
	o.Container = &v
}

// GetAllowedips returns the Allowedips field value if set, zero value otherwise.
func (o *PrepmountRest) GetAllowedips() []string {
	if o == nil || IsNil(o.Allowedips) {
		var ret []string
		return ret
	}
	return o.Allowedips
}

// GetAllowedipsOk returns a tuple with the Allowedips field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetAllowedipsOk() ([]string, bool) {
	if o == nil || IsNil(o.Allowedips) {
		return nil, false
	}
	return o.Allowedips, true
}

// HasAllowedips returns a boolean if a field has been set.
func (o *PrepmountRest) HasAllowedips() bool {
	if o != nil && !IsNil(o.Allowedips) {
		return true
	}

	return false
}

// SetAllowedips gets a reference to the given []string and assigns it to the Allowedips field.
func (o *PrepmountRest) SetAllowedips(v []string) {
	o.Allowedips = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PrepmountRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PrepmountRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PrepmountRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *PrepmountRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *PrepmountRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *PrepmountRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *PrepmountRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *PrepmountRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *PrepmountRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *PrepmountRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrepmountRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *PrepmountRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *PrepmountRest) SetStale(v bool) {
	o.Stale = &v
}

func (o PrepmountRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrepmountRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Rdmmode) {
		toSerialize["rdmmode"] = o.Rdmmode
	}
	if !IsNil(o.Physicalrdm) {
		toSerialize["physicalrdm"] = o.Physicalrdm
	}
	if !IsNil(o.Appaware) {
		toSerialize["appaware"] = o.Appaware
	}
	if !IsNil(o.Recoverytime) {
		toSerialize["recoverytime"] = o.Recoverytime
	}
	if !IsNil(o.Scripts) {
		toSerialize["scripts"] = o.Scripts
	}
	if !IsNil(o.Restoreobjectmappings) {
		toSerialize["restoreobjectmappings"] = o.Restoreobjectmappings
	}
	if !IsNil(o.Restoreoptions) {
		toSerialize["restoreoptions"] = o.Restoreoptions
	}
	if !IsNil(o.Provisioningoptions) {
		toSerialize["provisioningoptions"] = o.Provisioningoptions
	}
	if !IsNil(o.Selectedobjects) {
		toSerialize["selectedobjects"] = o.Selectedobjects
	}
	if !IsNil(o.Nfsoptions) {
		toSerialize["nfsoptions"] = o.Nfsoptions
	}
	if !IsNil(o.Instantmount) {
		toSerialize["instantmount"] = o.Instantmount
	}
	if !IsNil(o.Container) {
		toSerialize["container"] = o.Container
	}
	if !IsNil(o.Allowedips) {
		toSerialize["allowedips"] = o.Allowedips
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullablePrepmountRest struct {
	value *PrepmountRest
	isSet bool
}

func (v NullablePrepmountRest) Get() *PrepmountRest {
	return v.value
}

func (v *NullablePrepmountRest) Set(val *PrepmountRest) {
	v.value = val
	v.isSet = true
}

func (v NullablePrepmountRest) IsSet() bool {
	return v.isSet
}

func (v *NullablePrepmountRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrepmountRest(val *PrepmountRest) *NullablePrepmountRest {
	return &NullablePrepmountRest{value: val, isSet: true}
}

func (v NullablePrepmountRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrepmountRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


