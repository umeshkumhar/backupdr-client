/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AppDiscoveryRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppDiscoveryRest{}

// AppDiscoveryRest struct for AppDiscoveryRest
type AppDiscoveryRest struct {
	Apptypes []string `json:"apptypes,omitempty"`
	Listonly *bool `json:"listonly,omitempty"`
	Password *string `json:"password,omitempty"`
	Type *string `json:"type,omitempty"`
	Port *int32 `json:"port,omitempty"`
	Host *HostRest `json:"host,omitempty"`
	Username *string `json:"username,omitempty"`
	Ipaddress *string `json:"ipaddress,omitempty"`
	Cluster *string `json:"cluster,omitempty"`
	Versiononly *bool `json:"versiononly,omitempty"`
	Org *string `json:"org,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewAppDiscoveryRest instantiates a new AppDiscoveryRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppDiscoveryRest() *AppDiscoveryRest {
	this := AppDiscoveryRest{}
	return &this
}

// NewAppDiscoveryRestWithDefaults instantiates a new AppDiscoveryRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppDiscoveryRestWithDefaults() *AppDiscoveryRest {
	this := AppDiscoveryRest{}
	return &this
}

// GetApptypes returns the Apptypes field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetApptypes() []string {
	if o == nil || IsNil(o.Apptypes) {
		var ret []string
		return ret
	}
	return o.Apptypes
}

// GetApptypesOk returns a tuple with the Apptypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetApptypesOk() ([]string, bool) {
	if o == nil || IsNil(o.Apptypes) {
		return nil, false
	}
	return o.Apptypes, true
}

// HasApptypes returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasApptypes() bool {
	if o != nil && !IsNil(o.Apptypes) {
		return true
	}

	return false
}

// SetApptypes gets a reference to the given []string and assigns it to the Apptypes field.
func (o *AppDiscoveryRest) SetApptypes(v []string) {
	o.Apptypes = v
}

// GetListonly returns the Listonly field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetListonly() bool {
	if o == nil || IsNil(o.Listonly) {
		var ret bool
		return ret
	}
	return *o.Listonly
}

// GetListonlyOk returns a tuple with the Listonly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetListonlyOk() (*bool, bool) {
	if o == nil || IsNil(o.Listonly) {
		return nil, false
	}
	return o.Listonly, true
}

// HasListonly returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasListonly() bool {
	if o != nil && !IsNil(o.Listonly) {
		return true
	}

	return false
}

// SetListonly gets a reference to the given bool and assigns it to the Listonly field.
func (o *AppDiscoveryRest) SetListonly(v bool) {
	o.Listonly = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *AppDiscoveryRest) SetPassword(v string) {
	o.Password = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AppDiscoveryRest) SetType(v string) {
	o.Type = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetPort() int32 {
	if o == nil || IsNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetPortOk() (*int32, bool) {
	if o == nil || IsNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasPort() bool {
	if o != nil && !IsNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *AppDiscoveryRest) SetPort(v int32) {
	o.Port = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetHost() HostRest {
	if o == nil || IsNil(o.Host) {
		var ret HostRest
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetHostOk() (*HostRest, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given HostRest and assigns it to the Host field.
func (o *AppDiscoveryRest) SetHost(v HostRest) {
	o.Host = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *AppDiscoveryRest) SetUsername(v string) {
	o.Username = &v
}

// GetIpaddress returns the Ipaddress field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetIpaddress() string {
	if o == nil || IsNil(o.Ipaddress) {
		var ret string
		return ret
	}
	return *o.Ipaddress
}

// GetIpaddressOk returns a tuple with the Ipaddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetIpaddressOk() (*string, bool) {
	if o == nil || IsNil(o.Ipaddress) {
		return nil, false
	}
	return o.Ipaddress, true
}

// HasIpaddress returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasIpaddress() bool {
	if o != nil && !IsNil(o.Ipaddress) {
		return true
	}

	return false
}

// SetIpaddress gets a reference to the given string and assigns it to the Ipaddress field.
func (o *AppDiscoveryRest) SetIpaddress(v string) {
	o.Ipaddress = &v
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetCluster() string {
	if o == nil || IsNil(o.Cluster) {
		var ret string
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetClusterOk() (*string, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given string and assigns it to the Cluster field.
func (o *AppDiscoveryRest) SetCluster(v string) {
	o.Cluster = &v
}

// GetVersiononly returns the Versiononly field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetVersiononly() bool {
	if o == nil || IsNil(o.Versiononly) {
		var ret bool
		return ret
	}
	return *o.Versiononly
}

// GetVersiononlyOk returns a tuple with the Versiononly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetVersiononlyOk() (*bool, bool) {
	if o == nil || IsNil(o.Versiononly) {
		return nil, false
	}
	return o.Versiononly, true
}

// HasVersiononly returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasVersiononly() bool {
	if o != nil && !IsNil(o.Versiononly) {
		return true
	}

	return false
}

// SetVersiononly gets a reference to the given bool and assigns it to the Versiononly field.
func (o *AppDiscoveryRest) SetVersiononly(v bool) {
	o.Versiononly = &v
}

// GetOrg returns the Org field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetOrg() string {
	if o == nil || IsNil(o.Org) {
		var ret string
		return ret
	}
	return *o.Org
}

// GetOrgOk returns a tuple with the Org field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetOrgOk() (*string, bool) {
	if o == nil || IsNil(o.Org) {
		return nil, false
	}
	return o.Org, true
}

// HasOrg returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasOrg() bool {
	if o != nil && !IsNil(o.Org) {
		return true
	}

	return false
}

// SetOrg gets a reference to the given string and assigns it to the Org field.
func (o *AppDiscoveryRest) SetOrg(v string) {
	o.Org = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AppDiscoveryRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *AppDiscoveryRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *AppDiscoveryRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *AppDiscoveryRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDiscoveryRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *AppDiscoveryRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *AppDiscoveryRest) SetStale(v bool) {
	o.Stale = &v
}

func (o AppDiscoveryRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppDiscoveryRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Apptypes) {
		toSerialize["apptypes"] = o.Apptypes
	}
	if !IsNil(o.Listonly) {
		toSerialize["listonly"] = o.Listonly
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Ipaddress) {
		toSerialize["ipaddress"] = o.Ipaddress
	}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Versiononly) {
		toSerialize["versiononly"] = o.Versiononly
	}
	if !IsNil(o.Org) {
		toSerialize["org"] = o.Org
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableAppDiscoveryRest struct {
	value *AppDiscoveryRest
	isSet bool
}

func (v NullableAppDiscoveryRest) Get() *AppDiscoveryRest {
	return v.value
}

func (v *NullableAppDiscoveryRest) Set(val *AppDiscoveryRest) {
	v.value = val
	v.isSet = true
}

func (v NullableAppDiscoveryRest) IsSet() bool {
	return v.isSet
}

func (v *NullableAppDiscoveryRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppDiscoveryRest(val *AppDiscoveryRest) *NullableAppDiscoveryRest {
	return &NullableAppDiscoveryRest{value: val, isSet: true}
}

func (v NullableAppDiscoveryRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppDiscoveryRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


