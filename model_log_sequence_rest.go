/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LogSequenceRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogSequenceRest{}

// LogSequenceRest struct for LogSequenceRest
type LogSequenceRest struct {
	Beginlsn *string `json:"beginlsn,omitempty"`
	Endlsn *string `json:"endlsn,omitempty"`
	Thread *string `json:"thread,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewLogSequenceRest instantiates a new LogSequenceRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogSequenceRest() *LogSequenceRest {
	this := LogSequenceRest{}
	return &this
}

// NewLogSequenceRestWithDefaults instantiates a new LogSequenceRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogSequenceRestWithDefaults() *LogSequenceRest {
	this := LogSequenceRest{}
	return &this
}

// GetBeginlsn returns the Beginlsn field value if set, zero value otherwise.
func (o *LogSequenceRest) GetBeginlsn() string {
	if o == nil || IsNil(o.Beginlsn) {
		var ret string
		return ret
	}
	return *o.Beginlsn
}

// GetBeginlsnOk returns a tuple with the Beginlsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSequenceRest) GetBeginlsnOk() (*string, bool) {
	if o == nil || IsNil(o.Beginlsn) {
		return nil, false
	}
	return o.Beginlsn, true
}

// HasBeginlsn returns a boolean if a field has been set.
func (o *LogSequenceRest) HasBeginlsn() bool {
	if o != nil && !IsNil(o.Beginlsn) {
		return true
	}

	return false
}

// SetBeginlsn gets a reference to the given string and assigns it to the Beginlsn field.
func (o *LogSequenceRest) SetBeginlsn(v string) {
	o.Beginlsn = &v
}

// GetEndlsn returns the Endlsn field value if set, zero value otherwise.
func (o *LogSequenceRest) GetEndlsn() string {
	if o == nil || IsNil(o.Endlsn) {
		var ret string
		return ret
	}
	return *o.Endlsn
}

// GetEndlsnOk returns a tuple with the Endlsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSequenceRest) GetEndlsnOk() (*string, bool) {
	if o == nil || IsNil(o.Endlsn) {
		return nil, false
	}
	return o.Endlsn, true
}

// HasEndlsn returns a boolean if a field has been set.
func (o *LogSequenceRest) HasEndlsn() bool {
	if o != nil && !IsNil(o.Endlsn) {
		return true
	}

	return false
}

// SetEndlsn gets a reference to the given string and assigns it to the Endlsn field.
func (o *LogSequenceRest) SetEndlsn(v string) {
	o.Endlsn = &v
}

// GetThread returns the Thread field value if set, zero value otherwise.
func (o *LogSequenceRest) GetThread() string {
	if o == nil || IsNil(o.Thread) {
		var ret string
		return ret
	}
	return *o.Thread
}

// GetThreadOk returns a tuple with the Thread field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSequenceRest) GetThreadOk() (*string, bool) {
	if o == nil || IsNil(o.Thread) {
		return nil, false
	}
	return o.Thread, true
}

// HasThread returns a boolean if a field has been set.
func (o *LogSequenceRest) HasThread() bool {
	if o != nil && !IsNil(o.Thread) {
		return true
	}

	return false
}

// SetThread gets a reference to the given string and assigns it to the Thread field.
func (o *LogSequenceRest) SetThread(v string) {
	o.Thread = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *LogSequenceRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSequenceRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *LogSequenceRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *LogSequenceRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *LogSequenceRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSequenceRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *LogSequenceRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *LogSequenceRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *LogSequenceRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSequenceRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *LogSequenceRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *LogSequenceRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *LogSequenceRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogSequenceRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *LogSequenceRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *LogSequenceRest) SetStale(v bool) {
	o.Stale = &v
}

func (o LogSequenceRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogSequenceRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Beginlsn) {
		toSerialize["beginlsn"] = o.Beginlsn
	}
	if !IsNil(o.Endlsn) {
		toSerialize["endlsn"] = o.Endlsn
	}
	if !IsNil(o.Thread) {
		toSerialize["thread"] = o.Thread
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableLogSequenceRest struct {
	value *LogSequenceRest
	isSet bool
}

func (v NullableLogSequenceRest) Get() *LogSequenceRest {
	return v.value
}

func (v *NullableLogSequenceRest) Set(val *LogSequenceRest) {
	v.value = val
	v.isSet = true
}

func (v NullableLogSequenceRest) IsSet() bool {
	return v.isSet
}

func (v *NullableLogSequenceRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogSequenceRest(val *LogSequenceRest) *NullableLogSequenceRest {
	return &NullableLogSequenceRest{value: val, isSet: true}
}

func (v NullableLogSequenceRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogSequenceRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


