/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrganizationRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationRest{}

// OrganizationRest struct for OrganizationRest
type OrganizationRest struct {
	Version *string `json:"version,omitempty"`
	Description *string `json:"description,omitempty"`
	Name *string `json:"name,omitempty"`
	Modifydate *int64 `json:"modifydate,omitempty"`
	Createdate *int64 `json:"createdate,omitempty"`
	Resourcecollection *CollectionRest `json:"resourcecollection,omitempty"`
	// Unique ID for this object
	Id *string `json:"id,omitempty"`
	// URL to access this object
	Href *string `json:"href,omitempty"`
	// When this object was last synced from appliances (UNIX Epoch time in microseconds). It does not apply to local resources.
	Syncdate *int64 `json:"syncdate,omitempty"`
	// Optional flag to indicate if the information is out-of-date due to communication problems with appliances. It does not apply to local resources.
	Stale *bool `json:"stale,omitempty"`
}

// NewOrganizationRest instantiates a new OrganizationRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationRest() *OrganizationRest {
	this := OrganizationRest{}
	return &this
}

// NewOrganizationRestWithDefaults instantiates a new OrganizationRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationRestWithDefaults() *OrganizationRest {
	this := OrganizationRest{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *OrganizationRest) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRest) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *OrganizationRest) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *OrganizationRest) SetVersion(v string) {
	o.Version = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OrganizationRest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OrganizationRest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OrganizationRest) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OrganizationRest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OrganizationRest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OrganizationRest) SetName(v string) {
	o.Name = &v
}

// GetModifydate returns the Modifydate field value if set, zero value otherwise.
func (o *OrganizationRest) GetModifydate() int64 {
	if o == nil || IsNil(o.Modifydate) {
		var ret int64
		return ret
	}
	return *o.Modifydate
}

// GetModifydateOk returns a tuple with the Modifydate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRest) GetModifydateOk() (*int64, bool) {
	if o == nil || IsNil(o.Modifydate) {
		return nil, false
	}
	return o.Modifydate, true
}

// HasModifydate returns a boolean if a field has been set.
func (o *OrganizationRest) HasModifydate() bool {
	if o != nil && !IsNil(o.Modifydate) {
		return true
	}

	return false
}

// SetModifydate gets a reference to the given int64 and assigns it to the Modifydate field.
func (o *OrganizationRest) SetModifydate(v int64) {
	o.Modifydate = &v
}

// GetCreatedate returns the Createdate field value if set, zero value otherwise.
func (o *OrganizationRest) GetCreatedate() int64 {
	if o == nil || IsNil(o.Createdate) {
		var ret int64
		return ret
	}
	return *o.Createdate
}

// GetCreatedateOk returns a tuple with the Createdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRest) GetCreatedateOk() (*int64, bool) {
	if o == nil || IsNil(o.Createdate) {
		return nil, false
	}
	return o.Createdate, true
}

// HasCreatedate returns a boolean if a field has been set.
func (o *OrganizationRest) HasCreatedate() bool {
	if o != nil && !IsNil(o.Createdate) {
		return true
	}

	return false
}

// SetCreatedate gets a reference to the given int64 and assigns it to the Createdate field.
func (o *OrganizationRest) SetCreatedate(v int64) {
	o.Createdate = &v
}

// GetResourcecollection returns the Resourcecollection field value if set, zero value otherwise.
func (o *OrganizationRest) GetResourcecollection() CollectionRest {
	if o == nil || IsNil(o.Resourcecollection) {
		var ret CollectionRest
		return ret
	}
	return *o.Resourcecollection
}

// GetResourcecollectionOk returns a tuple with the Resourcecollection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRest) GetResourcecollectionOk() (*CollectionRest, bool) {
	if o == nil || IsNil(o.Resourcecollection) {
		return nil, false
	}
	return o.Resourcecollection, true
}

// HasResourcecollection returns a boolean if a field has been set.
func (o *OrganizationRest) HasResourcecollection() bool {
	if o != nil && !IsNil(o.Resourcecollection) {
		return true
	}

	return false
}

// SetResourcecollection gets a reference to the given CollectionRest and assigns it to the Resourcecollection field.
func (o *OrganizationRest) SetResourcecollection(v CollectionRest) {
	o.Resourcecollection = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OrganizationRest) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRest) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OrganizationRest) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OrganizationRest) SetId(v string) {
	o.Id = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *OrganizationRest) GetHref() string {
	if o == nil || IsNil(o.Href) {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRest) GetHrefOk() (*string, bool) {
	if o == nil || IsNil(o.Href) {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *OrganizationRest) HasHref() bool {
	if o != nil && !IsNil(o.Href) {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *OrganizationRest) SetHref(v string) {
	o.Href = &v
}

// GetSyncdate returns the Syncdate field value if set, zero value otherwise.
func (o *OrganizationRest) GetSyncdate() int64 {
	if o == nil || IsNil(o.Syncdate) {
		var ret int64
		return ret
	}
	return *o.Syncdate
}

// GetSyncdateOk returns a tuple with the Syncdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRest) GetSyncdateOk() (*int64, bool) {
	if o == nil || IsNil(o.Syncdate) {
		return nil, false
	}
	return o.Syncdate, true
}

// HasSyncdate returns a boolean if a field has been set.
func (o *OrganizationRest) HasSyncdate() bool {
	if o != nil && !IsNil(o.Syncdate) {
		return true
	}

	return false
}

// SetSyncdate gets a reference to the given int64 and assigns it to the Syncdate field.
func (o *OrganizationRest) SetSyncdate(v int64) {
	o.Syncdate = &v
}

// GetStale returns the Stale field value if set, zero value otherwise.
func (o *OrganizationRest) GetStale() bool {
	if o == nil || IsNil(o.Stale) {
		var ret bool
		return ret
	}
	return *o.Stale
}

// GetStaleOk returns a tuple with the Stale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationRest) GetStaleOk() (*bool, bool) {
	if o == nil || IsNil(o.Stale) {
		return nil, false
	}
	return o.Stale, true
}

// HasStale returns a boolean if a field has been set.
func (o *OrganizationRest) HasStale() bool {
	if o != nil && !IsNil(o.Stale) {
		return true
	}

	return false
}

// SetStale gets a reference to the given bool and assigns it to the Stale field.
func (o *OrganizationRest) SetStale(v bool) {
	o.Stale = &v
}

func (o OrganizationRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Modifydate) {
		toSerialize["modifydate"] = o.Modifydate
	}
	if !IsNil(o.Createdate) {
		toSerialize["createdate"] = o.Createdate
	}
	if !IsNil(o.Resourcecollection) {
		toSerialize["resourcecollection"] = o.Resourcecollection
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Href) {
		toSerialize["href"] = o.Href
	}
	if !IsNil(o.Syncdate) {
		toSerialize["syncdate"] = o.Syncdate
	}
	if !IsNil(o.Stale) {
		toSerialize["stale"] = o.Stale
	}
	return toSerialize, nil
}

type NullableOrganizationRest struct {
	value *OrganizationRest
	isSet bool
}

func (v NullableOrganizationRest) Get() *OrganizationRest {
	return v.value
}

func (v *NullableOrganizationRest) Set(val *OrganizationRest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationRest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationRest(val *OrganizationRest) *NullableOrganizationRest {
	return &NullableOrganizationRest{value: val, isSet: true}
}

func (v NullableOrganizationRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


