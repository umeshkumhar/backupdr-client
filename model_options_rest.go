/*
Backup and DR Service: Management Console API Spec

This document defines the API for the Global Manager. All communication is done over HTTPS with UTF-8 encoding. JSON is the only supported format for both request and response payloads. <p></p>Please read <a href=\"https://cloud.google.com/backup-disaster-recovery/docs/api/RestAPIGeneralConcepts.pdf\">Management Console API General concept</a><p></p>To login, use the /session POST API below.<br></br>Then copy the resulting session_id from the output and click on the Authorize button on the top right. Paste the string \"Actifio \" followed by the session id into the form and click Authorize.<p></p>Login is not necessary for reading the rest of this API document. However, login will allow you to try the APIs out within this page.

API version: V11.0.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OptionsRest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionsRest{}

// OptionsRest struct for OptionsRest
type OptionsRest struct {
	GETList *GetListRest `json:"GET(list),omitempty"`
}

// NewOptionsRest instantiates a new OptionsRest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionsRest() *OptionsRest {
	this := OptionsRest{}
	return &this
}

// NewOptionsRestWithDefaults instantiates a new OptionsRest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionsRestWithDefaults() *OptionsRest {
	this := OptionsRest{}
	return &this
}

// GetGETList returns the GETList field value if set, zero value otherwise.
func (o *OptionsRest) GetGETList() GetListRest {
	if o == nil || IsNil(o.GETList) {
		var ret GetListRest
		return ret
	}
	return *o.GETList
}

// GetGETListOk returns a tuple with the GETList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsRest) GetGETListOk() (*GetListRest, bool) {
	if o == nil || IsNil(o.GETList) {
		return nil, false
	}
	return o.GETList, true
}

// HasGETList returns a boolean if a field has been set.
func (o *OptionsRest) HasGETList() bool {
	if o != nil && !IsNil(o.GETList) {
		return true
	}

	return false
}

// SetGETList gets a reference to the given GetListRest and assigns it to the GETList field.
func (o *OptionsRest) SetGETList(v GetListRest) {
	o.GETList = &v
}

func (o OptionsRest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionsRest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GETList) {
		toSerialize["GET(list)"] = o.GETList
	}
	return toSerialize, nil
}

type NullableOptionsRest struct {
	value *OptionsRest
	isSet bool
}

func (v NullableOptionsRest) Get() *OptionsRest {
	return v.value
}

func (v *NullableOptionsRest) Set(val *OptionsRest) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionsRest) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionsRest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionsRest(val *OptionsRest) *NullableOptionsRest {
	return &NullableOptionsRest{value: val, isSet: true}
}

func (v NullableOptionsRest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionsRest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


